% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/listToDepth.R
\name{listToDepth}
\alias{listToDepth}
\title{List Elements Recursively up to Depth}
\usage{
listToDepth(
  path,
  recursive = TRUE,
  max_depth = 1,
  full_info = FALSE,
  FUN = listFiles,
  ...,
  depth = 0,
  prob_mutate = 0
)
}
\arguments{
\item{path}{path to the element where to start listing}

\item{recursive}{If \code{TRUE}, the listing is performed recursively, up to
a depth od \code{max_depth}}

\item{max_depth}{maximal depth of level to be listed 
if \code{recursive = TRUE}}

\item{full_info}{return only \code{path} and \code{isdir} information or
the full information provided by \code{FUN(full_info = TRUE)}?}

\item{FUN}{function called to get the listing of the element given in 
\code{path}. The function must accept a path as its first argument and it 
must define the argument \code{full_info} at the second position. It may
accept further arguments. It must always return a data frame. For 
\code{full_info = FALSE} the data frame must have columns \code{file} and
\code{isdir} (is the "file" a directory?). For \code{full_info = TRUE} the
function may return further columns. The function must provide an empty
data frame with the expected columns when being called with 
\code{character()} as the first argument. See \code{kwb.utils:::listFiles}
for an example implementation that somehow simulates the behaviour of the
\code{\link{dir}} function.}

\item{\dots}{further arguments passed to \code{FUN}}

\item{depth}{start depth when \code{recursive = TRUE}, for internal use!}

\item{prob_mutate}{for internal use!}
}
\value{
data frame containing at least the columns \code{file} and 
  \code{isdir}. If \code{full_info = TRUE} the result data frame may contain
  further columns, as provided by the function given in \code{FUN} for
  \code{full_info = TRUE}.
}
\description{
List Elements Recursively up to Depth
}
\examples{
# Example list function provided in this package (file listing)
FUN <- kwb.utils:::listFiles

# The list function must provide empty records when no path is given. The 
# returned data frame must provide the columns "file" and "isdir" ...
FUN()
FUN(full_info = TRUE)

# ... even when being called with an empty character vector
FUN(character())
FUN(character(), full_info = TRUE)

# Call the function recursively up to the given depth level
kwb.utils:::listToDepth(".", max_depth = 1, FUN = FUN)

}
