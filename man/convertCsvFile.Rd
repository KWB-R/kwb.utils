% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/csv.R
\name{convertCsvFile}
\alias{convertCsvFile}
\title{Modify the format of a CSV file}
\usage{
convertCsvFile(file_in, sep_in = formals(utils::read.table)$sep,
  sep_out = sep_in, dec_in = formals(utils::read.table)$dec,
  dec_out = dec_in, file_out = NULL, header = TRUE,
  quote_in = formals(utils::read.table)$quote,
  quote_out = formals(utils::write.table)$quote,
  row.names_in = formals(utils::read.table)$row.names,
  col.names_in = formals(utils::read.table)$col.names,
  row.names_out = FALSE, col.names_out = TRUE,
  fileEncoding_in = formals(utils::read.table)$fileEncoding,
  fileEncoding_out = fileEncoding_in, dbg = TRUE, ...)
}
\arguments{
\item{file_in}{path to input file}

\item{sep_in}{column separator in input file}

\item{sep_out}{column separator in output file}

\item{dec_in}{decimal character in input file}

\item{dec_out}{decimal character inoutput file}

\item{file_out}{path to output file}

\item{header}{passed to \code{\link{read.table}}}

\item{quote_in}{passed as \code{quote} to \code{\link{read.table}}}

\item{quote_out}{passed as \code{quote} to \code{\link{write.table}}}

\item{row.names_in}{passed as \code{row.names} to \code{\link{read.table}}}

\item{col.names_in}{passed as \code{col.names} to \code{\link{read.table}}}

\item{row.names_out}{passed as \code{row.names} to \code{\link{write.table}}}

\item{col.names_out}{passed as \code{col.names} to \code{\link{write.table}}}

\item{fileEncoding_in}{passed as \code{fileEncoding} to
\code{\link{read.table}}}

\item{fileEncoding_out}{passed as \code{fileEncoding} to
\code{\link{write.table}}}

\item{dbg}{if \code{TRUE} (default) debug messages are shown}

\item{\dots}{further arguments passed to either \code{\link{read.table}} or 
\code{\link{write.table}}}
}
\value{
path to the created CSV file
}
\description{
This function allows you to change the format (such as column delimiter, 
decimal character) of a CSV file. It uses \code{\link{read.table}} to read a 
CSV file and \code{\link{write.table}} to rewrite the file with modified
format to a new file. All arguments of \code{\link{read.table}} and
\code{\link{write.table}} are supported. Arguments that are provided by both
functions appear as two arguments \code{<argument_name>_in} and 
\code{<argument_name>_out} in this function.
}
\examples{
# Write the iris dataset to a temporary file with "," as column separator
csv_in <- tempfile(fileext = ".csv")
write.table(iris, csv_in, row.names = FALSE)

# Review the first lines of the file
catLines(readLines(csv_in, 6))

# Convert the column separator (from " " which was the default) to ";"
csv_out <- convertCsvFile(csv_in, sep_out = ";")

# Review the result
catLines(readLines(csv_out, 6))

# Delete the file so that it can be recreated
unlink(csv_out)

# Convert the column separator and the decimal character
csv_out <- convertCsvFile(csv_in, sep_out = ";", dec_out = ",")

# Review the result
catLines(readLines(csv_out, 6))

}
