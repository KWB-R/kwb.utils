% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/listToDepth.R
\name{listToDepth}
\alias{listToDepth}
\title{List Elements Recursively up to Depth}
\usage{
listToDepth(
  path,
  max_depth = 0L,
  full_info = FALSE,
  FUN = listFiles,
  ...,
  depth = 0,
  prob_mutate = 0,
  template = NULL
)
}
\arguments{
\item{path}{path to the element at which to start listing}

\item{max_depth}{maximal depth level of which to list elements. A value of
\code{0} means non-recursive listing, a value of \code{NA} represents fully
recursive listing.}

\item{full_info}{return only \code{path} and \code{isdir} information or
the full information provided by \code{FUN(full_info = TRUE)}?}

\item{FUN}{function called to get the listing of the element given in
\code{path}. The function must accept a path as its first argument and it
must define the argument \code{full_info} second. It may accept further
arguments. It must always return a data frame. For \code{full_info = FALSE}
the data frame must have columns \code{file} and \code{isdir} (is the
"file" a directory?). For \code{full_info = TRUE} the function may return
further columns. The function must provide an empty data frame with the
expected columns when being called with \code{character()} as the first
argument. The function is expected to set the attribute "failed" to the
given path in case that the path could not be accessed (e.g. because of a
broken internet connection if the listing is done remotely). See
\code{kwb.utils:::listFiles} for an example implementation that somehow
simulates the behaviour of the \code{\link{dir}} function. See
\code{kwb.dwd::list_url()} for a more advanced usage of this function in
order to recursively list the files on an FTP server (FTP = file transfer
protocol).}

\item{\dots}{further arguments passed to \code{FUN}}

\item{depth}{start depth of recursion if \code{max_depth > 0}. This argument
is for internal use and not intended to be set by the user!}

\item{prob_mutate}{probability to alter the path so that it becomes useless.
This is zero by default. Set the value only if you want to test how the
function behaves if the listing of a path fails.}

\item{template}{empty data frame (zero rows) and with columns that are
identical to the columns in the data frame returned by \code{FUN}. If not
provided the function will call \code{FUN} once with a zero-length
\code{path} argument expecting to retrieve the template that is expected
here.}
}
\value{
data frame containing at least the columns \code{file} and 
  \code{isdir}. If \code{full_info = TRUE} the result data frame may contain
  further columns, as provided by the function given in \code{FUN} for
  \code{full_info = TRUE}.
}
\description{
List Elements Recursively up to Depth
}
\examples{
# Example list function provided in this package (file listing)
FUN <- kwb.utils:::listFiles

# The list function must provide empty records when no path is given. The 
# returned data frame must provide the columns "file" and "isdir" ...
FUN()
FUN(full_info = TRUE)

# ... even when being called with an empty character vector
FUN(character())
FUN(character(), full_info = TRUE)

# Call the function recursively up to the given depth level
kwb.utils:::listToDepth(".", max_depth = 1, FUN = FUN)

}
