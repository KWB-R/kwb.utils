[{"path":"https://kwb-r.github.io/kwb.utils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2014-2022 Kompetenzzentrum Wasser Berlin gGmbH (KWB) Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_check.html","id":"function-assertrowsandcolumns","dir":"Articles","previous_headings":"","what":"Function assertRowsAndColumns()","title":"Check Functions","text":"want calculations set matrices important matrices dimensions rows columns name found row column indices, respectively. function assertRowsAndColumns() takes matrix input returns matrix output. function guarantees returned matrix contains rows columns requested names requested orders. creating rows/columns requested contained input matrix, removing rows/columns contained input matrix requested, moving rows/columns contained input matrix requested order. Imagine three different matrices, created createMatrix(), another function package: matrix two three possible rows , b c two three possible columns x, y z. can now unify shape matrices means assertRowsAndColumns(), specifying rows columns required: Missing rows columns inserted filled value given argument fill_value (defaulting 0, can seen ). Now, matrices can e.g. summed : , can put three dimensional array: Check Functions","code":"(m_1 <- kwb.utils::createMatrix(c(\"a\", \"c\"), c(\"x\", \"y\"), value = 1)) #>   x y #> a 1 1 #> c 1 1 (m_2 <- kwb.utils::createMatrix(c(\"a\", \"b\"), c(\"x\", \"z\"), value = 2)) #>   x z #> a 2 2 #> b 2 2 (m_3 <- kwb.utils::createMatrix(c(\"b\", \"c\"), c(\"y\", \"z\"), value = 3)) #>   y z #> b 3 3 #> c 3 3 row_names <- c(\"a\", \"b\", \"c\") col_names <- c(\"x\", \"y\", \"z\")  (m_1 <- kwb.utils::assertRowsAndColumns(m_1, row_names, col_names)) #>   x y z #> a 1 1 0 #> b 0 0 0 #> c 1 1 0 (m_2 <- kwb.utils::assertRowsAndColumns(m_2, row_names, col_names)) #>   x y z #> a 2 0 2 #> b 2 0 2 #> c 0 0 0 (m_3 <- kwb.utils::assertRowsAndColumns(m_3, row_names, col_names)) #>   x y z #> a 0 0 0 #> b 0 3 3 #> c 0 3 3 m_1 + m_2 + m_3 #>   x y z #> a 3 1 2 #> b 2 3 5 #> c 1 4 3 array_3d <- array(   c(m_1, m_2, m_3),    dimnames = list(row_names, col_names, 1:3),    dim = c(3, 3, 3) )  array_3d #> , , 1 #>  #>   x y z #> a 1 1 0 #> b 0 0 0 #> c 1 1 0 #>  #> , , 2 #>  #>   x y z #> a 2 0 2 #> b 2 0 2 #> c 0 0 0 #>  #> , , 3 #>  #>   x y z #> a 0 0 0 #> b 0 3 3 #> c 0 3 3"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_conversion.html","id":"function-ascolumnlist","dir":"Articles","previous_headings":"","what":"Function asColumnList()","title":"Conversion Functions","text":"function converts matrix list columns. useful want loop columns matrix m lapply(). also loop columns apply(m, MARGINS = 2). However, usage lapply() preferred usage apply(), demonstrated following example: first function, two approaches return identical results: However, second function, two approaches return differing results: first approach using lapply() returns list, whereas second approach using apply() returns vector. first approach preferred user can trust result always list, independent function called within loop. preferred function lapply() requires object can loop asColumnList() provides!","code":"# Define and show a very simple matrix (m <- matrix(1:6, nrow = 2)) #>      [,1] [,2] [,3] #> [1,]    1    3    5 #> [2,]    2    4    6  # Define functions that return/count the values above a threshold. # These functions are to be applied to each column of the matrix  get_above <- function(x, threshold) x[x > threshold] count_above <- function(x, threshold) sum(x > threshold) # Approach 1: loop through columns using asColumnList() and lapply() result_1 <- lapply(kwb.utils::asColumnList(m), get_above, 3) str(result_1) #> List of 3 #>  $ : int(0)  #>  $ : int 4 #>  $ : int [1:2] 5 6  # Approach 2: loop through columns using apply() result_2 <- apply(m, 2, get_above, 3) str(result_2) #> List of 3 #>  $ : int(0)  #>  $ : int 4 #>  $ : int [1:2] 5 6 # Approach 1: loop through columns using asColumnList() and lapply() result_1 <- lapply(kwb.utils::asColumnList(m), count_above, 3) str(result_1) #> List of 3 #>  $ : int 0 #>  $ : int 1 #>  $ : int 2  # Approach 2: loop through columns using apply() result_2 <- apply(m, 2, count_above, 3) str(result_2) #>  int [1:3] 0 1 2"},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_conversion.html","id":"function-asrowlist","dir":"Articles","previous_headings":"","what":"Function asRowList()","title":"Conversion Functions","text":"function converts matrix list rows. See asColumnList() explanation may useful.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_data_frame.html","id":"function-addrowwithname","dir":"Articles","previous_headings":"","what":"Function addRowWithName()","title":"Functions Working on Data Frames","text":"function adding row data frame rbind giving name:","code":"x <- data.frame(value = 10:11)  new_row <- data.frame(value = sum(x$value))  kwb.utils::addRowWithName(x, new_row, row.name = \"total\") #>       value #> 1        10 #> 2        11 #> total    21"},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_data_frame.html","id":"function-addsuffixtocolumns","dir":"Articles","previous_headings":"","what":"Function addSuffixToColumns()","title":"Functions Working on Data Frames","text":"function adds postfix column names data frame. may useful column-binding data frames. function can used indicate origin column giving suffix related data frame originates .","code":"# Define a first data frame data_frame_1 <- data.frame(   id = 1:2,    first = c(\"Peter\", \"Mary\"),    last = c(\"Miller\", \"Smith\") )  # Define a second data frame data_frame_2 <- data.frame(   height_cm = c(181, 171),   weigth_kg = c(68, 59) )  # Column-bind the data frames, after giving their columns a unique suffix cbind(   kwb.utils::addSuffixToColumns(data_frame_1, \"_1\"),   kwb.utils::addSuffixToColumns(data_frame_2, \"_2\") ) #>   id_1 first_1 last_1 height_cm_2 weigth_kg_2 #> 1    1   Peter Miller         181          68 #> 2    2    Mary  Smith         171          59"},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_data_frame.html","id":"function-asnofactordataframe","dir":"Articles","previous_headings":"","what":"Function asNoFactorDataFrame","title":"Functions Working on Data Frames","text":"function shortcut .data.frame(..., stringsAsFactors = FALSE). Using function may slightly improve readability script (number arguments passed function reduced): Functions Working Data Frames","code":"m <- matrix(letters[1:6], nrow = 2)  result_1 <- kwb.utils::asNoFactorDataFrame(m) result_2 <- as.data.frame(m, stringsAsFactors = FALSE)  identical(result_1, result_2) #> [1] TRUE"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_debug.html","id":"function-assignglobally","dir":"Articles","previous_headings":"","what":"Function assignGlobally()","title":"Debug Functions","text":"Deprecated. Use instead: assign(x, value, envir = .GlobalEnv)","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_debug.html","id":"function-getglobally","dir":"Articles","previous_headings":"","what":"Function getGlobally()","title":"Debug Functions","text":"Compare Objects ### Function compareDataFrames() ### Function compareSets()","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_in_out.html","id":"function-hspreppdf","dir":"Articles","previous_headings":"","what":"Function hsPrepPdf()","title":"Input and Output Functions","text":"Deprecated. Use preparePdf() instead.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_logical.html","id":"function-allareequal","dir":"Articles","previous_headings":"","what":"Function allAreEqual()","title":"Functions Returning Logical","text":"function checks values vector equal :","code":"kwb.utils::allAreEqual(c(1, 1, 1, 1)) #> [1] TRUE kwb.utils::allAreEqual(c(1, 1, 1, 2)) #> [1] FALSE"},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_logical.html","id":"function-allareidentical","dir":"Articles","previous_headings":"","what":"Function allAreIdentical()","title":"Functions Returning Logical","text":"function checks elements list identical . may useful checking whether different versions function (may, e.g., created code cleaning) return exactly , given inputs.","code":"# Define different functions that are intended to do the same get_list_1 <- function(a, b) list(a = a, b = b) get_list_2 <- function(a, b) stats::setNames(list(a, b), c(\"a\", \"b\")) get_list_3 <- function(a, b) c(list(a = a), b = b) get_list_4 <- function(a, b) c(list(a = a), list(b = b))  # Call the functions with identical arguments and put the results into a list results <- list(   get_list_1(1, 2:3),    get_list_2(1, 2:3),    get_list_3(1, 2:3),   get_list_4(1, 2:3) )  # Not all results are the same... kwb.utils::allAreIdentical(results) #> [1] FALSE  # ... but all except the third: kwb.utils::allAreIdentical(results[-3]) #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_logical.html","id":"function-almostequal","dir":"Articles","previous_headings":"","what":"Function almostEqual()","title":"Functions Returning Logical","text":"Take care comparing floating point numbers! Whether floating point numbers assumed equal , depends calculated. shown following example: almostEqual() numbers compared tolerating small difference numbers. difference can set argument tolerance.","code":"one_third_1 <- 1/3 one_third_2 <- 1 - 2/3  # Even though mathematically correct, they are not equal in R: one_third_1 == one_third_2 #> [1] FALSE # The numbers are almost equal (with the default tolerance of 1e-12): kwb.utils::almostEqual(one_third_1, one_third_2) #> [1] TRUE  # It depends on the tolerance if they are treated as equal: kwb.utils::almostEqual(one_third_1, one_third_2, tolerance = 1e-17) #> [1] FALSE"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_object.html","id":"function-addclass","dir":"Articles","previous_headings":"","what":"Function addClass()","title":"General Object Functions","text":"function addClass adds element class attribute object. may never heard class attribute. ’s ok. allows assign user-defined class object. , can nice stuff, example: General Object Functions","code":"# Define your own print function for objects of class \"birthday\" print.birthday <- function(x) {   print(sprintf(\"It's your birthday: %s!\", x)) }  # Define a birthday string and print it x <- \"January 14\" print(x) #> [1] \"January 14\"  # Now, set the class attribute to \"birthday\" and print again! x <- kwb.utils::addClass(x, \"birthday\") print(x) #> [1] \"It's your birthday: January 14!\""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_string.html","id":"function-appendsuffix","dir":"Articles","previous_headings":"","what":"Function appendSuffix()","title":"String Functions","text":"function adds suffix elements vector character. mainly shortcut paste0(values, suffix) allows define values omitted:","code":"# Define a vector of character values <- c(\"id\", letters[1:5])  # Add a suffix to all elements except \"id\" kwb.utils::appendSuffix(values, \"_value\", valuesToOmit = \"id\") #> [1] \"id\"      \"a_value\" \"b_value\" \"c_value\" \"d_value\" \"e_value\""},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_string.html","id":"function-collapsed","dir":"Articles","previous_headings":"","what":"Function collapsed()","title":"String Functions","text":"function call collapsed(x, sep) shortcut paste(x, collapse = sep). allows shorter code improved readability.","code":"kwb.utils::collapsed(1:10) #> [1] \"1 2 3 4 5 6 7 8 9 10\" kwb.utils::collapsed(1:10, \", \") #> [1] \"1, 2, 3, 4, 5, 6, 7, 8, 9, 10\" kwb.utils::collapsed(letters, \"|\") #> [1] \"a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z\""},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_string.html","id":"function-commacollapsed","dir":"Articles","previous_headings":"","what":"Function commaCollapsed()","title":"String Functions","text":"function call commaCollapsed(x) shortcut paste(x, collapse = \",\"). allows shorter code improved readability.","code":"kwb.utils::commaCollapsed(1:10) #> [1] \"1,2,3,4,5,6,7,8,9,10\" kwb.utils::commaCollapsed(letters) #> [1] \"a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z\""},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_string.html","id":"function-defaultlevels","dir":"Articles","previous_headings":"","what":"Function defaultLevels()","title":"String Functions","text":"given vector character, function returns sorted unique values input vector. given vector numeric differences multiple step argument (defaulting 1), step-incremented sequence values smallest highest value returned.","code":"# Vector of character -> The sorted unique values are returned  kwb.utils::defaultLevels(c(\"melon\", \"apple\", \"melon\", \"pear\", \"apple\")) #> [1] \"apple\" \"melon\" \"pear\"  # The differences between the values are not all a multiple of the step # -> Return sorted unique values kwb.utils::defaultLevels(c(5, 8, 1), step = 2) #> [1] 1 5 8  # The differences between the values are all a multiple of the step # -> Return step-incremented sequence between min and max kwb.utils::defaultLevels(c(1.5, 4.5, 10.5), step = 1.5) #> [1]  1.5  3.0  4.5  6.0  7.5  9.0 10.5"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_string.html","id":"function-stringstartswith","dir":"Articles","previous_headings":"","what":"Function stringStartsWith()","title":"String Functions","text":"Returns TRUE character strings starting given prefix. Since R version 3.3.0 function startsWith() base R need use function . pity.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/functions_ungrouped.html","id":"function-arglist","dir":"Articles","previous_headings":"","what":"Function arglist()","title":"Non-Categorised Functions","text":"ever seen something like following?  spot repetition? want change plot character pch type plot character extension factor cex plots time?  function arglist() merges contents one lists allowing overwrite existing list elements. example, list common arguments just extended. Elements list also overwritten, argument cex following:  pattern calling function extended argument list common wrote function callWith() allows write shorter:  explained later…","code":"x <- seq(-pi, pi, pi/10) par(mfrow = c(1, 2), mar = c(2, 2, 1, 1)) plot(x, sin(x), xlab = \"x\", ylab = \"sin(x)\", pch = 16, type = \"b\", cex = 0.5) plot(x, cos(x), xlab = \"x\", ylab = \"cos(x)\", pch = 16, type = \"b\", cex = 0.5) # Define common arguments common <- list(x = x, pch = 16, xlab = \"x\", type = \"b\", cex = 0.5)  # Call the plot function with the common arguments, extended by # call-specific arguments par(mfrow = c(1, 2), mar = c(2, 2, 1, 1)) do.call(plot, kwb.utils::arglist(common, y = sin(x), ylab = \"sin(x)\")) do.call(plot, kwb.utils::arglist(common, y = cos(x), ylab = \"cos(x)\")) do.call(   what = plot,    args = kwb.utils::arglist(common, y = sin(x), ylab = \"sin(x)\", cex = 1) ) kwb.utils::callWith(plot, common, y = sin(x), ylab = \"sin(x)\", cex = 1)"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"intention","dir":"Articles","previous_headings":"","what":"Intention","title":"Overview","text":"main purpose package “kwb.utils” provide functions allow writing cleaner safer code. One main characteristic clean code free least almost free duplication. hard goal achieve! try best! like start complete list names functions contained package. can get list?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"how-to-get-a-list-of-functions-in-a-package","dir":"Articles","previous_headings":"","what":"How to get a list of functions in a package?","title":"Overview","text":"fact, know () achieve . However, know package contains function assignPackageObjects() copies objects contained package (including functions) global environment. inspecting definition, .e. body, function, can learn function works. Therefore, just type function’s name, without parentheses, press Enter: code reveals, function loops values returned ls(getNamespace(package)) package name package. exacly need. can use code get names objects “kwb.utils” package. Let’s store names variable object_names: Wow! 299 objects (functions) defined package. start? make somehow scientific, let’s look distribution function names, grouped first letter:  Even though highest peak, lot function names starting h. Among functions prefixed hs. find names functions function stringStartsWith(), provided package (see String Functions, ). , since R version 3.3.0, function startsWith() base R, use one instead: functions prefixed hs oldest. started writing functions, thought important indicate functions user-defined functions, opposed base R functions. Reading book Clean Code Robert C. Martin convinced use clean names can pronounced easily.","code":"kwb.utils::assignPackageObjects #> function (package)  #> { #>     for (name in ls(getNamespace(package))) { #>         object <- get(name, envir = asNamespace(package), inherits = FALSE) #>         assign(name, object, envir = .GlobalEnv) #>     } #> } #> <bytecode: 0x7fea73eb7d20> #> <environment: namespace:kwb.utils> object_names <- ls(getNamespace(\"kwb.utils\"))  length(object_names) #> [1] 299 letter_distribution <- table(substr(sort(tolower(object_names)), 1, 1)) barplot(letter_distribution, horiz = TRUE, las = 1) object_names[startsWith(object_names, \"hs\")] #>  [1] \"hsAddMissingCols\"      \"hsChrToNum\"            \"hsCountInStr\"          #>  [4] \"hsDelEmptyCols\"        \"hsMatrixToListForm\"    \"hsMovingMean\"          #>  [7] \"hsOpenWindowsExplorer\" \"hsPrepPdf\"             \"hsQuoteChr\"            #> [10] \"hsRenameColumns\"       \"hsResolve\"             \"hsRestoreAttributes\"   #> [13] \"hsSafeName\"            \"hsShell\"               \"hsShowPdf\"             #> [16] \"hsStringToDate\"        \"hsStringToDouble\"      \"hsSubstSpecChars\"      #> [19] \"hsSystem\"              \"hsTrim\"                \"hsValidValue\""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"functions-by-category","dir":"Articles","previous_headings":"","what":"Functions by Category","title":"Overview","text":"tried group package functions per topic per type object either work return. groups listed described detail one dedicated article per group.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"logical","dir":"Articles","previous_headings":"Functions by Category","what":"Functions Returning Logical","title":"Overview","text":"functions take different types arguments input common return vector logical. functions just shortcut rather long expression aiming making code readable avoiding duplication, allAreEqual(), allAreIdentical(), almostEqual(), isNaOrEmpty() isNullOrEmpty(). Others complex things, matchesCriteria() evaluates set conditions data frame, returning TRUE FALSE depending whether row matches conditions . Another complex function hsValidValue() checks vector character seems contain numerical values. details, see Functions Returning Logical.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"string","dir":"Articles","previous_headings":"Functions by Category","what":"String Functions","title":"Overview","text":"functions prefixed string wrappers around simple grep expressions exist since former trainee asked provide functions. details, see String Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"input-and-output-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Input and Output Functions","title":"Overview","text":"details, see Input Output Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"mathematical-or-statistical-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Mathematical or Statistical Functions","title":"Overview","text":"details, see Mathematical Statistical Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"functions-working-on-data-frames","dir":"Articles","previous_headings":"Functions by Category","what":"Functions Working on Data Frames","title":"Overview","text":"details, see Functions Working Data Frames.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"functions-working-on-lists","dir":"Articles","previous_headings":"Functions by Category","what":"Functions Working on Lists","title":"Overview","text":"details, see Functions Working Lists.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"arraymatrix-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Array/Matrix Functions","title":"Overview","text":"details, see Array/Matrix Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"vector-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Vector Functions","title":"Overview","text":"details, see Vector Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"general-object-functions","dir":"Articles","previous_headings":"Functions by Category","what":"General Object Functions","title":"Overview","text":"details, see General Object Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"conversion-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Conversion Functions","title":"Overview","text":"details, see Conversion Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"shortcut-functions-to-if-statements","dir":"Articles","previous_headings":"Functions by Category","what":"Shortcut Functions to if-statements","title":"Overview","text":"details, see Shortcut Functions -statements.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"operating-system-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Operating System Functions","title":"Overview","text":"details, see Operating System Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"check-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Check Functions","title":"Overview","text":"details, see Check Functions.: Functions check prerequisites","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"debug-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Debug Functions","title":"Overview","text":"details, see Debug Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"compare-objects","dir":"Articles","previous_headings":"Functions by Category","what":"Compare Objects","title":"Overview","text":"details, see Compare Objects.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"calling-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Calling Functions","title":"Overview","text":"details, see Calling Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"cryptographic-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Cryptographic Functions","title":"Overview","text":"details, see Cryptographic Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"grammardictionary-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Grammar/Dictionary Functions","title":"Overview","text":"details, see Grammar/Dictionary Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/articles/overview.html","id":"non-categorised-functions","dir":"Articles","previous_headings":"Functions by Category","what":"Non-Categorised Functions","title":"Overview","text":"details, see Non-Categorised Functions.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Hauke Sonnenberg. Author, maintainer. Michael Rustler. Contributor. . Copyright holder.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Sonnenberg H (2022). kwb.utils: General Utility Functions Developed KWB. R package version 0.13.0, https://github.com/kwb-r/kwb.utils.","code":"@Manual{,   title = {kwb.utils: General Utility Functions Developed at KWB},   author = {Hauke Sonnenberg},   year = {2022},   note = {R package version 0.13.0},   url = {https://github.com/kwb-r/kwb.utils}, }"},{"path":"https://kwb-r.github.io/kwb.utils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"General Utility Functions Developed at KWB","text":"installing latest release R package run following code :","code":"# Enable repository from kwb-r options(repos = c(   kwbr = 'https://kwb-r.r-universe.dev',   CRAN = 'https://cloud.r-project.org'))    # Download and install kwb.utils in R install.packages('kwb.utils')  # Browse the kwb.swmm manual pages help(package = 'kwb.utils')"},{"path":"https://kwb-r.github.io/kwb.utils/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"General Utility Functions Developed at KWB","text":"Checkout available articles use R package.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/DIN.A4.html","id":null,"dir":"Reference","previous_headings":"","what":"Width and Height of a DIN A4 Paper — DIN.A4","title":"Width and Height of a DIN A4 Paper — DIN.A4","text":"Width Height DIN A4 Paper","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/DIN.A4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Width and Height of a DIN A4 Paper — DIN.A4","text":"","code":"DIN.A4()"},{"path":"https://kwb-r.github.io/kwb.utils/reference/addClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Class to an Object — addClass","title":"Add a Class to an Object — addClass","text":"Extend class attribute given class name","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/addClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Class to an Object — addClass","text":"","code":"addClass(x, className, first = TRUE, dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/addClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Class to an Object — addClass","text":"x R object className name class added x first TRUE (default) className prepended vector existing class names, otherwise appended end vector dbg TRUE (default), debug messages shown.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/addClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Class to an Object — addClass","text":"x class attributed extended className (x yet inherit className)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/addRowWithName.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Row with a Name — addRowWithName","title":"Add a Row with a Name — addRowWithName","text":"add row data frame give row name time","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/addRowWithName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Row with a Name — addRowWithName","text":"","code":"addRowWithName(x, y, row.name)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/addRowWithName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Row with a Name — addRowWithName","text":"x data frame row appended y data frame containing row appended (exacly one row expected) row.name name row given result data frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/addRowWithName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Row with a Name — addRowWithName","text":"x row y (named row.name) appended ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/addSuffixToColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Suffix to Column Names — addSuffixToColumns","title":"Add Suffix to Column Names — addSuffixToColumns","text":"Add Suffix Column Names","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/addSuffixToColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Suffix to Column Names — addSuffixToColumns","text":"","code":"addSuffixToColumns(data, suffix, except = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/addSuffixToColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Suffix to Column Names — addSuffixToColumns","text":"data data frame suffix suffix added column name except columns given except except names columns suffix given","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/addSuffixToColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Suffix to Column Names — addSuffixToColumns","text":"data renamed columns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/addSuffixToColumns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Suffix to Column Names — addSuffixToColumns","text":"","code":"d1 <- data.frame(id = 1, a = 2, b = 3) d2 <- data.frame(id = 1, c = 2, d = 3)  # Using merge the origin of the column gets lost merge(d1, d2) #>   id a b c d #> 1  1 2 3 2 3  # Add a suffix before merging merge(   addSuffixToColumns(d1, \".first\", except = \"id\"),    addSuffixToColumns(d2, \".second\", except = \"id\"),    by = \"id\" ) #>   id a.first b.first c.second d.second #> 1  1       2       3        2        3"},{"path":"https://kwb-r.github.io/kwb.utils/reference/allAreEqual.html","id":null,"dir":"Reference","previous_headings":"","what":"are all elements in x the same? — allAreEqual","title":"are all elements in x the same? — allAreEqual","text":"elements x ?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/allAreEqual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"are all elements in x the same? — allAreEqual","text":"","code":"allAreEqual(x, method = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/allAreEqual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"are all elements in x the same? — allAreEqual","text":"x vector elements compared method Select one two methods. 1: check length unique elements equal one, 2: check elements equal first element.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/allAreEqual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"are all elements in x the same? — allAreEqual","text":"TRUE elements x equal ,   otherwise FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/allAreIdentical.html","id":null,"dir":"Reference","previous_headings":"","what":"Are all list elements identical to each other? — allAreIdentical","title":"Are all list elements identical to each other? — allAreIdentical","text":"list elements identical ?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/allAreIdentical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are all list elements identical to each other? — allAreIdentical","text":"","code":"allAreIdentical(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/allAreIdentical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are all list elements identical to each other? — allAreIdentical","text":"x list","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/allAreIdentical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are all list elements identical to each other? — allAreIdentical","text":"TRUE elements x identical, otherwise  FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/almostEqual.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare Numerical Vectors with Tolerance — almostEqual","title":"Compare Numerical Vectors with Tolerance — almostEqual","text":"Compare numerical vectors accepting tolerance","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/almostEqual.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare Numerical Vectors with Tolerance — almostEqual","text":"","code":"almostEqual(x, y, tolerance = 1e-12)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/almostEqual.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare Numerical Vectors with Tolerance — almostEqual","text":"x vector numerical y vector numerical tolerance tolerance, .e. accepted difference values x y. Default: 1e-12","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/almostEqual.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare Numerical Vectors with Tolerance — almostEqual","text":"vector logical","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/appendSuffix.html","id":null,"dir":"Reference","previous_headings":"","what":"Append Suffix to (Selected) Character Values — appendSuffix","title":"Append Suffix to (Selected) Character Values — appendSuffix","text":"Append Suffix (Selected) Character Values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/appendSuffix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append Suffix to (Selected) Character Values — appendSuffix","text":"","code":"appendSuffix(values, suffix, valuesToOmit = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/appendSuffix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append Suffix to (Selected) Character Values — appendSuffix","text":"values vector character values suffix appended suffix (character) suffix pasted values valuesToOmit valuesToOmit vector values values suffix appended","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/appendSuffix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append Suffix to (Selected) Character Values — appendSuffix","text":"values suffix appended values   valuesToOmit","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/appendSuffix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append Suffix to (Selected) Character Values — appendSuffix","text":"","code":"values <- c(\"a\", \"b\", \"c\")    # Append \".1\" to all values appendSuffix(values, \".1\") #> [1] \"a.1\" \"b.1\" \"c.1\"    # Append \".1\" to all values but \"c\" appendSuffix(values, \".1\", valuesToOmit = \"c\") #> [1] \"a.1\" \"b.1\" \"c\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/arglist.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Argument Lists or Arguments — arglist","title":"Merge Argument Lists or Arguments — arglist","text":"Creates list arguments given argument lists arguments. function allows create argument lists function calls. may start basic argument list merge argument lists single argument assignments list. Merging means elements name overriden elements new names appended.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/arglist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Argument Lists or Arguments — arglist","text":"","code":"arglist(..., warn.on.NULL = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/arglist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Argument Lists or Arguments — arglist","text":"... list arguments function. unnamed arguments assumed argument lists merged using mergeLists first. named arguments merged list. warn..NULL TRUE (default FALSE) warning given arguments given function NULL","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/arglist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Argument Lists or Arguments — arglist","text":"merged list arguments","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/arglist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Argument Lists or Arguments — arglist","text":"","code":"# define some default arguments args.default <- list(xlim = c(0, 10), ylim = c(0, 10), col = \"red\", lwd = 2)  # call plot with the default arguments do.call(plot, arglist(args.default, x = 1:10))   # call plot with the default arguments but override the colour do.call(plot, arglist(args.default, x = 1:10, col = \"blue\"))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/argsCsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Language Abbreviation to ","title":"Language Abbreviation to ","text":"Language Abbreviation \"sep\" \"dec\" argument","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/argsCsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Language Abbreviation to ","text":"","code":"argsCsv(lng = \"de\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/argsCsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Language Abbreviation to ","text":"lng \"de\" German, \"en\" Englisch","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/argsCsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Language Abbreviation to ","text":"list elements sep (column separator), dec  (character used decimal points)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/arrayToDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Array to Data Frame — arrayToDataFrame","title":"Convert Array to Data Frame — arrayToDataFrame","text":"Convert Array Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/arrayToDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Array to Data Frame — arrayToDataFrame","text":"","code":"arrayToDataFrame(x, name = deparse(substitute(x)))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/arrayToDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Array to Data Frame — arrayToDataFrame","text":"x array name name given value column","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/arrayToDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Array to Data Frame — arrayToDataFrame","text":"data frame many rows elements input array x. data frame one column per dimension x  containing dimension names one additional column called according   name containing array values.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/arrayToDataFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Array to Data Frame — arrayToDataFrame","text":"","code":"x <- array(1:24, dim = c(2, 3, 4), dimnames = list(   c(\"a\", \"b\"),    c(\"x\", \"y\", \"z\"),    c(\"r\", \"s\", \"t\", \"u\") ))  arrayToDataFrame(x) #>    Var1 Var2 Var3  x #> 1     a    x    r  1 #> 2     b    x    r  2 #> 3     a    y    r  3 #> 4     b    y    r  4 #> 5     a    z    r  5 #> 6     b    z    r  6 #> 7     a    x    s  7 #> 8     b    x    s  8 #> 9     a    y    s  9 #> 10    b    y    s 10 #> 11    a    z    s 11 #> 12    b    z    s 12 #> 13    a    x    t 13 #> 14    b    x    t 14 #> 15    a    y    t 15 #> 16    b    y    t 16 #> 17    a    z    t 17 #> 18    b    z    t 18 #> 19    a    x    u 19 #> 20    b    x    u 20 #> 21    a    y    u 21 #> 22    b    y    u 22 #> 23    a    z    u 23 #> 24    b    z    u 24"},{"path":"https://kwb-r.github.io/kwb.utils/reference/asColumnList.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix to List of Matrix Columns — asColumnList","title":"Matrix to List of Matrix Columns — asColumnList","text":"Matrix List Matrix Columns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/asColumnList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix to List of Matrix Columns — asColumnList","text":"","code":"asColumnList(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/asColumnList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix to List of Matrix Columns — asColumnList","text":"x matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/asColumnList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix to List of Matrix Columns — asColumnList","text":"list many elements columns x   element representing one column","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/asColumnList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix to List of Matrix Columns — asColumnList","text":"","code":"x <- matrix(1:12, nrow = 3)  column_list <- asColumnList(x)  for (i in 1:ncol(x)) print(identical(column_list[[i]], x[, i])) #> [1] TRUE #> [1] TRUE #> [1] TRUE #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/asNoFactorDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to Data Frame without Factors — asNoFactorDataFrame","title":"Convert to Data Frame without Factors — asNoFactorDataFrame","text":"Use .data.frame stringsAsFactors = FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/asNoFactorDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to Data Frame without Factors — asNoFactorDataFrame","text":"","code":"asNoFactorDataFrame(...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/asNoFactorDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to Data Frame without Factors — asNoFactorDataFrame","text":"... passed .data.frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/asNoFactorDataFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to Data Frame without Factors — asNoFactorDataFrame","text":"","code":"data_matrix <- matrix(LETTERS[1:6], nrow = 2)  # as.data.frame() by default converts character to factor str(as.data.frame(data_matrix)) #> 'data.frame':\t2 obs. of  3 variables: #>  $ V1: chr  \"A\" \"B\" #>  $ V2: chr  \"C\" \"D\" #>  $ V3: chr  \"E\" \"F\"  # asNoFactorDataFrame keeps character as character str(asNoFactorDataFrame(data_matrix)) #> 'data.frame':\t2 obs. of  3 variables: #>  $ V1: chr  \"A\" \"B\" #>  $ V2: chr  \"C\" \"D\" #>  $ V3: chr  \"E\" \"F\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/asRowList.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix to List of Matrix Rows — asRowList","title":"Matrix to List of Matrix Rows — asRowList","text":"Matrix List Matrix Rows","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/asRowList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix to List of Matrix Rows — asRowList","text":"","code":"asRowList(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/asRowList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix to List of Matrix Rows — asRowList","text":"x matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/asRowList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix to List of Matrix Rows — asRowList","text":"list many elements rows x   element representing one row","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/asRowList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix to List of Matrix Rows — asRowList","text":"","code":"x <- matrix(1:12, nrow = 3)  row_list <- asRowList(x)  for (i in 1:nrow(x)) print(identical(row_list[[i]], x[i, ])) #> [1] TRUE #> [1] TRUE #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/assertFinalSlash.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Sure that Strings End With Slash — assertFinalSlash","title":"Make Sure that Strings End With Slash — assertFinalSlash","text":"Make Sure Strings End Slash","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assertFinalSlash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Sure that Strings End With Slash — assertFinalSlash","text":"","code":"assertFinalSlash(x, method = 1L)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/assertFinalSlash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Sure that Strings End With Slash — assertFinalSlash","text":"x vector character method integer value specifying implementation method. 1 (default): Find strings without ending slash append slash strings. 2: Remove one slashes end append slash strings. 3: Append slash strings replace multiple occurrences slash end one slash. Method 1 fastest replace multiple trailing slashes one trailing slash  (see examples).","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assertFinalSlash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make Sure that Strings End With Slash — assertFinalSlash","text":"","code":"assertFinalSlash(c(\"a\", \"b\", \"c\")) #> [1] \"a/\" \"b/\" \"c/\" assertFinalSlash(c(\"a/\", \"b/\", \"c/\")) #> [1] \"a/\" \"b/\" \"c/\" assertFinalSlash(c(\"a//\", \"b\", \"c/\")) #> [1] \"a//\" \"b/\"  \"c/\"   # Use method 2 or 3 to replace multiple slashes with one slash assertFinalSlash(c(\"a//\", \"b\", \"c/\"), method = 2) #> [1] \"a/\" \"b/\" \"c/\" assertFinalSlash(c(\"a//\", \"b\", \"c/\"), method = 3) #> [1] \"a/\" \"b/\" \"c/\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assertRowsAndColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Assert Row and Column Names of a Matrix — assertRowsAndColumns","title":"Assert Row and Column Names of a Matrix — assertRowsAndColumns","text":"Make sure matrix contains rows columns given names given order.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assertRowsAndColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assert Row and Column Names of a Matrix — assertRowsAndColumns","text":"","code":"assertRowsAndColumns(x, row_names = NULL, col_names = NULL, fill_value = 0)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/assertRowsAndColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assert Row and Column Names of a Matrix — assertRowsAndColumns","text":"x matrix row_names character vector row names col_names character vector column names fill_value value fill row column row column exist x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assertRowsAndColumns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assert Row and Column Names of a Matrix — assertRowsAndColumns","text":"","code":"m <- matrix(1:12, nrow = 3, ncol = 4, dimnames = list(   rows = paste0(\"row\", 1:3), cols = paste0(\"col\", 1:4) ))  # Add two rows, reverse order of rows, add one column, remove one column assertRowsAndColumns(   m,   row_names = paste0(\"row\", 4:0),   col_names = paste0(\"col\", 0:2) ) #>       cols #> rows   col0 col1 col2 #>   row4    0    0    0 #>   row3    0    3    6 #>   row2    0    2    5 #>   row1    0    1    4 #>   row0    0    0    0"},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Call assign for each List Element — assignAll","title":"Call assign for each List Element — assignAll","text":"Provide assignments list objects environment","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call assign for each List Element — assignAll","text":"","code":"assignAll(x, pos = 1, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call assign for each List Element — assignAll","text":"x list key = value assignments pos passed assign, ... arguments passed assign","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignArgumentDefaults.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign Argument Default Values in the Global Environment — assignArgumentDefaults","title":"Assign Argument Default Values in the Global Environment — assignArgumentDefaults","text":"Assign Argument Default Values Global Environment","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignArgumentDefaults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign Argument Default Values in the Global Environment — assignArgumentDefaults","text":"","code":"assignArgumentDefaults(FUN)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignArgumentDefaults.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign Argument Default Values in the Global Environment — assignArgumentDefaults","text":"FUN function (closure primitive). FUN character string function name found used.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignArgumentDefaults.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign Argument Default Values in the Global Environment — assignArgumentDefaults","text":"","code":"# Assign the default values of breakInSequence() in the global environment assignArgumentDefaults(kwb.utils::breakInSequence)  # The argument \"expectedDiff\" is now in the global environment ls() #> character(0)  # Its value is 1 which is the default value defined in the function definition expectedDiff #> [1] 1"},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignGlobally.html","id":null,"dir":"Reference","previous_headings":"","what":"assignGlobally — assignGlobally","title":"assignGlobally — assignGlobally","text":"assign variable .GlobalEnv","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignGlobally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assignGlobally — assignGlobally","text":"","code":"assignGlobally(x, value)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignGlobally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assignGlobally — assignGlobally","text":"x name variable value value variable","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignPackageObjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign all Package Objects to the Global Environment — assignPackageObjects","title":"Assign all Package Objects to the Global Environment — assignPackageObjects","text":"Assign Package Objects Global Environment","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignPackageObjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign all Package Objects to the Global Environment — assignPackageObjects","text":"","code":"assignPackageObjects(package)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignPackageObjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign all Package Objects to the Global Environment — assignPackageObjects","text":"package package name","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/assignPackageObjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign all Package Objects to the Global Environment — assignPackageObjects","text":"","code":"assignPackageObjects(\"kwb.utils\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/atLeastOneRowIn.html","id":null,"dir":"Reference","previous_headings":"","what":"At least one row in data frame — atLeastOneRowIn","title":"At least one row in data frame — atLeastOneRowIn","text":"returns TRUE data frame least one row, else FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/atLeastOneRowIn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"At least one row in data frame — atLeastOneRowIn","text":"","code":"atLeastOneRowIn(dframe)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/atLeastOneRowIn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"At least one row in data frame — atLeastOneRowIn","text":"dframe data frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/backspace.html","id":null,"dir":"Reference","previous_headings":"","what":"String of n Backspaces — backspace","title":"String of n Backspaces — backspace","text":"String n Backspaces","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/backspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"String of n Backspaces — backspace","text":"","code":"backspace(n)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/backspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"String of n Backspaces — backspace","text":"n number backspace characters","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/backspace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"String of n Backspaces — backspace","text":"vector character length one","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/backspace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"String of n Backspaces — backspace","text":"","code":"update <- function(x) cat(backspace(3), x) x <- \"value: 123\" cat(x) #> value: 123 cat(paste0(x, backspace(3), \"987\")) #> value: 123987"},{"path":"https://kwb-r.github.io/kwb.utils/reference/breakInSequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Find ","title":"Find ","text":"Find \"Breaks\" Sequence Numbers","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/breakInSequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find ","text":"","code":"breakInSequence(x, expectedDiff = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/breakInSequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find ","text":"x vector numeric expectedDiff expected difference elements x. bigger difference recognised break. Default: 1","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/breakInSequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find ","text":"index elements break occurs integer(0)   break occurs ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/callWith.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a Function with Given Arguments — callWith","title":"Call a Function with Given Arguments — callWith","text":"Call function given arguments. Unnamed arguments expected lists containing argument assignments. Multiple argument lists merged using arglist order appearence.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/callWith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a Function with Given Arguments — callWith","text":"","code":"callWith(FUN, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/callWith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a Function with Given Arguments — callWith","text":"FUN function called ... (unnamed) lists containing argument assignments passed FUN (named) arguments passed FUN","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/callWith.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call a Function with Given Arguments — callWith","text":"return value return value function FUN.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/callWith.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call a Function with Given Arguments — callWith","text":"","code":"# define some default arguments args.default <- list(xlim = c(0, 10), ylim = c(0, 10), col = \"red\", lwd = 2)  # call plot with the default arguments callWith(plot, x = 1:10, args.default)   # call plot with the default arguments but override the colour callWith(plot, x = 1:10, args.default, col = \"blue\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/callWithStringsAsFactors.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a Function with Option ","title":"Call a Function with Option ","text":"Set option \"stringsAsFactors\", run function reset option.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/callWithStringsAsFactors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a Function with Option ","text":"","code":"callWithStringsAsFactors(stringsAsFactors, FUN, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/callWithStringsAsFactors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a Function with Option ","text":"stringsAsFactors TRUE FALSE. calling FUN option \"stringsAsFactors\" set value given . function call option reset . FUN function called ... arguments passed FUN","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/callWithStringsAsFactors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call a Function with Option ","text":"function returns FUN returns called   arguments given ...","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/callWithStringsAsFactors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call a Function with Option ","text":"","code":"option.bak <- getOption(\"stringsAsFactors\")    d1 <- callWithStringsAsFactors(   TRUE,   rbind,   data.frame(id = 1, name = \"Peter\"),   data.frame(id = 2, name = \"Paul\"),   data.frame(id = 3, name = \"Mary\") ) #> Warning: 'options(stringsAsFactors = TRUE)' is deprecated and will be disabled    d2 <- callWithStringsAsFactors(   FALSE,   rbind,   data.frame(id = 1, name = \"Peter\"),   data.frame(id = 2, name = \"Paul\"),   data.frame(id = 3, name = \"Mary\") )    str(d1) #> 'data.frame':\t3 obs. of  2 variables: #>  $ id  : num  1 2 3 #>  $ name: chr  \"Peter\" \"Paul\" \"Mary\" str(d2) #> 'data.frame':\t3 obs. of  2 variables: #>  $ id  : num  1 2 3 #>  $ name: chr  \"Peter\" \"Paul\" \"Mary\"    # The option \"stringsAsFactors\" has not changed! stopifnot(option.bak == getOption(\"stringsAsFactors\"))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/catAndRun.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Debug Messages Before and After Running Code — catAndRun","title":"Print Debug Messages Before and After Running Code — catAndRun","text":"Print Debug Messages Running Code","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catAndRun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Debug Messages Before and After Running Code — catAndRun","text":"","code":"catAndRun(   messageText = \"Running code\",   expr,   newLine = 2L,   dbg = TRUE,   log_time = TRUE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/catAndRun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Debug Messages Before and After Running Code — catAndRun","text":"messageText text printed running code expr expressions run. Enclose one expression curly braces newLine integer controlling new lines. 0: extra new line, 1: new line messageText, 2: new line \"ok.\", 3: new line , messageText \"ok.\" dbg logical. FALSE, output suppressed. log_time logical. TRUE, time elapsed  evaluation expr printed.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catAndRun.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Debug Messages Before and After Running Code — catAndRun","text":"function returns evaluation expr. result   returned invisibly result assignment last    expression exprt show console.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catAndRun.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Debug Messages Before and After Running Code — catAndRun","text":"","code":"for (newLine in 0:3) {    catAndRun(\"work hard\", newLine = newLine, {     cat(\"hard\\nworking\\n\")   })    cat(\"here.\\n\\n\") } #> work hard ... hard #> working #> ok. (0.00s) here. #>  #> work hard ...  #> hard #> working #> ok. (0.00s) here. #>  #> work hard ... hard #> working #> ok. (0.00s)  #> here. #>  #> work hard ...  #> hard #> working #> ok. (0.00s)  #> here. #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/catChanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Differences Between Two Vectors — catChanges","title":"Print Differences Between Two Vectors — catChanges","text":"Print Differences Two Vectors","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catChanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Differences Between Two Vectors — catChanges","text":"","code":"catChanges(x, y)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/catChanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Differences Between Two Vectors — catChanges","text":"x vector y vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catChanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Differences Between Two Vectors — catChanges","text":"","code":"catChanges(c(1, 2, 3), c(1, 22, 3)) #> 2 -> 22"},{"path":"https://kwb-r.github.io/kwb.utils/reference/catChangesIf.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Differences Between Two Vectors if Condition is Met — catChangesIf","title":"Print Differences Between Two Vectors if Condition is Met — catChangesIf","text":"Print Differences Two Vectors Condition Met","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catChangesIf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Differences Between Two Vectors if Condition is Met — catChangesIf","text":"","code":"catChangesIf(dbg, x, y)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/catChangesIf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Differences Between Two Vectors if Condition is Met — catChangesIf","text":"dbg TRUE catChanges called x y x vector y vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catIf.html","id":null,"dir":"Reference","previous_headings":"","what":"Call cat If Condition Is Met — catIf","title":"Call cat If Condition Is Met — catIf","text":"Call cat Condition Met","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catIf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call cat If Condition Is Met — catIf","text":"","code":"catIf(condition, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/catIf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call cat If Condition Is Met — catIf","text":"condition TRUE, cat called, else ... arguments passed cat","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Character Vector to the Console — catLines","title":"Print Character Vector to the Console — catLines","text":"Call cat character vector, pasted collapse = <new line>","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Character Vector to the Console — catLines","text":"","code":"catLines(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/catLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Character Vector to the Console — catLines","text":"x vector character representing text lines printed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catNewLineIf.html","id":null,"dir":"Reference","previous_headings":"","what":"Print New Line Character to the Console if Condition is Met — catNewLineIf","title":"Print New Line Character to the Console if Condition is Met — catNewLineIf","text":"Print New Line Character Console Condition Met","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catNewLineIf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print New Line Character to the Console if Condition is Met — catNewLineIf","text":"","code":"catNewLineIf(condition)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/catNewLineIf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print New Line Character to the Console if Condition is Met — catNewLineIf","text":"condition TRUE new line printed else ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/catNewLineIf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print New Line Character to the Console if Condition is Met — catNewLineIf","text":"Returns condition, invisibly can reused","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/checkForMissingColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Column Existence — checkForMissingColumns","title":"Check for Column Existence — checkForMissingColumns","text":"Stops data frame frm contain columns  names given reqCols.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/checkForMissingColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Column Existence — checkForMissingColumns","text":"","code":"checkForMissingColumns(   frm,   reqCols,   do.stop = TRUE,   dataFrameName = deparse(substitute(frm)) )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/checkForMissingColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Column Existence — checkForMissingColumns","text":"frm data frame reqCols vector names existence frm shall checked .stop TRUE, stop() called else warning() column missing dataFrameName name data frame shown error message column missing","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/checkForMissingColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Column Existence — checkForMissingColumns","text":"TRUE required columns available, else FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/clearConsole.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear the R Console — clearConsole","title":"Clear the R Console — clearConsole","text":"Clear R Console","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/clearConsole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear the R Console — clearConsole","text":"","code":"clearConsole()"},{"path":"https://kwb-r.github.io/kwb.utils/reference/clipMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Leading/Trailing Empty Rows/Columns from Matrix — clipMatrix","title":"Remove Leading/Trailing Empty Rows/Columns from Matrix — clipMatrix","text":"Remove Leading/Trailing Empty Rows/Columns Matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/clipMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Leading/Trailing Empty Rows/Columns from Matrix — clipMatrix","text":"","code":"clipMatrix(m)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/clipMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Leading/Trailing Empty Rows/Columns from Matrix — clipMatrix","text":"m matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/clipMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Leading/Trailing Empty Rows/Columns from Matrix — clipMatrix","text":"m leading trailing empty rows (full NA) removed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/cmdLinePath.html","id":null,"dir":"Reference","previous_headings":"","what":"Path in Quotes for Usage in Command Line — cmdLinePath","title":"Path in Quotes for Usage in Command Line — cmdLinePath","text":"Set given path quotes can used command line","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/cmdLinePath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path in Quotes for Usage in Command Line — cmdLinePath","text":"","code":"cmdLinePath(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/cmdLinePath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path in Quotes for Usage in Command Line — cmdLinePath","text":"x path quoted","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/colMaxima.html","id":null,"dir":"Reference","previous_headings":"","what":"Columnwise Maxima — colMaxima","title":"Columnwise Maxima — colMaxima","text":"Calculate maxima within column","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/colMaxima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Columnwise Maxima — colMaxima","text":"","code":"colMaxima(dataFrame, na.rm = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/colMaxima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Columnwise Maxima — colMaxima","text":"dataFrame data frame calculate columnwise maxima na.rm passed max function","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/colMinima.html","id":null,"dir":"Reference","previous_headings":"","what":"Columnwise Minima — colMinima","title":"Columnwise Minima — colMinima","text":"Calculate minima within column","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/colMinima.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Columnwise Minima — colMinima","text":"","code":"colMinima(dataFrame, na.rm = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/colMinima.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Columnwise Minima — colMinima","text":"dataFrame data frame calculate columnwise minima na.rm passed min function","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/colNaNumbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Columnwise Number of NA — colNaNumbers","title":"Columnwise Number of NA — colNaNumbers","text":"Calculate number NA values within column","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/colNaNumbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Columnwise Number of NA — colNaNumbers","text":"","code":"colNaNumbers(dataFrame)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/colNaNumbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Columnwise Number of NA — colNaNumbers","text":"dataFrame data frame calculate columnwise NA values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/colStatisticOneFunction.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Function to All Columns — colStatisticOneFunction","title":"Apply Function to All Columns — colStatisticOneFunction","text":"Applies statistical function columns data frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/colStatisticOneFunction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Function to All Columns — colStatisticOneFunction","text":"","code":"colStatisticOneFunction(dataFrame, FUN, na.rm = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/colStatisticOneFunction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Function to All Columns — colStatisticOneFunction","text":"dataFrame data frame statistics calculated FUN statistical function applied column dataFrame  possible values: \"sum\", \"mean\", \"min\", \"max\", \"number.na\" (number NA  values), \"length\" (number values) na.rm TRUE, NA values removed applying statistical function","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/colStatistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Column Statistics — colStatistics","title":"Column Statistics — colStatistics","text":"applies statistical functions columns data frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/colStatistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column Statistics — colStatistics","text":"","code":"colStatistics(   dataFrame,   functions = c(\"sum\", \"mean\", \"min\", \"max\", \"number.na\", \"length\"),   na.rm = FALSE,   functionColumn = FALSE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/colStatistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column Statistics — colStatistics","text":"dataFrame data frame numeric columns functions vector statistical functions applied column dataFrame possible values: \"sum\", \"mean\", \"min\", \"max\", \"number.na\" (number NA values), \"length\" (number values) na.rm TRUE, NA values removed applying statistical function(s) functionColumn TRUE, column containing function name contained result data frame, otherwise function names become row names result data frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/collapsed.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut to paste(x, collapse = collapse) — collapsed","title":"Shortcut to paste(x, collapse = collapse) — collapsed","text":"just shortcut paste(x, collapse = collapse)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/collapsed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut to paste(x, collapse = collapse) — collapsed","text":"","code":"collapsed(x, collapse = \" \")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/collapsed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcut to paste(x, collapse = collapse) — collapsed","text":"x vector character collapse character string separate elements x (passed  paste)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnDescriptor.html","id":null,"dir":"Reference","previous_headings":"","what":"Column Descriptor — columnDescriptor","title":"Column Descriptor — columnDescriptor","text":"Column Descriptor","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnDescriptor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Column Descriptor — columnDescriptor","text":"","code":"columnDescriptor(match = \".*\", fixed = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnDescriptor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Column Descriptor — columnDescriptor","text":"match pattern fixed text match header line fixed TRUE, match taken fixed string looked header line, otherwise interpreded regular expression","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnToDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Column in Data Frame To Date — columnToDate","title":"Convert Column in Data Frame To Date — columnToDate","text":"Convert Column Data Frame Date","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnToDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Column in Data Frame To Date — columnToDate","text":"","code":"columnToDate(df, column, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnToDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Column in Data Frame To Date — columnToDate","text":"df data frame column name column x dbg TRUE debug message shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnToDate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Column in Data Frame To Date — columnToDate","text":"df column converted class Date .Date","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnToDate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Column in Data Frame To Date — columnToDate","text":"","code":"df <- data.frame(id = 1:2, date = c(\"2018-10-23\", \"2018-10-23\")) str(df) #> 'data.frame':\t2 obs. of  2 variables: #>  $ id  : int  1 2 #>  $ date: chr  \"2018-10-23\" \"2018-10-23\"  df <- columnToDate(df, \"date\") #> Converting column 'date' to Date ... ok. (0.00s)  str(df) #> 'data.frame':\t2 obs. of  2 variables: #>  $ id  : int  1 2 #>  $ date: Date, format: \"2018-10-23\" \"2018-10-23\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnwisePercentage.html","id":null,"dir":"Reference","previous_headings":"","what":"Columnwise Percentage — columnwisePercentage","title":"Columnwise Percentage — columnwisePercentage","text":"Calculate percentage (value divided sum values column)  column","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnwisePercentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Columnwise Percentage — columnwisePercentage","text":"","code":"columnwisePercentage(x, default = 0, digits = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnwisePercentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Columnwise Percentage — columnwisePercentage","text":"x two dimensional numeric data structure default default value used calculated percentage  NA. digits number digits (default: 1) resulting  percentages rounded. Set NA suppress rounding","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/columnwisePercentage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Columnwise Percentage — columnwisePercentage","text":"","code":"# Create a random matrix of integer values M1 <- matrix(sample(100, 12), nrow = 4, dimnames = list(LETTERS[1:4], 1:3))  # Introduce some NA values <- as.numeric(M1) values[sample(length(values), 3)] <- NA M2 <- matrix(values, nrow = nrow(M1), dimnames = dimnames(M1))  M1 #>     1  2  3 #> A 100 46 22 #> B  21 66 62 #> C  23 18 75 #> D  82 70 42 columnwisePercentage(M1) #>      1  2    3 #> A 44.2 23 10.9 #> B  9.3 33 30.8 #> C 10.2  9 37.3 #> D 36.3 35 20.9  M2 #>    1  2  3 #> A NA NA 22 #> B 21 66 62 #> C 23 18 75 #> D 82 NA 42 columnwisePercentage(M2) #>      1    2    3 #> A  0.0  0.0 10.9 #> B 16.7 78.6 30.8 #> C 18.3 21.4 37.3 #> D 65.1  0.0 20.9 columnwisePercentage(M2, default = 0) #>      1    2    3 #> A  0.0  0.0 10.9 #> B 16.7 78.6 30.8 #> C 18.3 21.4 37.3 #> D 65.1  0.0 20.9"},{"path":"https://kwb-r.github.io/kwb.utils/reference/combineAlternatingly.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine Two Vectors Alternatingly — combineAlternatingly","title":"Combine Two Vectors Alternatingly — combineAlternatingly","text":"Combine Two Vectors Alternatingly","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/combineAlternatingly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine Two Vectors Alternatingly — combineAlternatingly","text":"","code":"combineAlternatingly(a, b)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/combineAlternatingly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine Two Vectors Alternatingly — combineAlternatingly","text":"first vector b second vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/combineAlternatingly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine Two Vectors Alternatingly — combineAlternatingly","text":"vector x x[c(1, 3, 5, ...)] == x[c(2, 4, 6, ...)] == b","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/combineAlternatingly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine Two Vectors Alternatingly — combineAlternatingly","text":"","code":"a <- paste0(\"a\", 1:5) b <- paste0(\"b\", 1:5)  combineAlternatingly(a, b) #>  [1] \"a1\" \"b1\" \"a2\" \"b2\" \"a3\" \"b3\" \"a4\" \"b4\" \"a5\" \"b5\" combineAlternatingly(b, a) #>  [1] \"b1\" \"a1\" \"b2\" \"a2\" \"b3\" \"a3\" \"b4\" \"a4\" \"b5\" \"a5\"  combineAlternatingly(list(a = 1, b = 2), list(c = 3, d = 4)) #> $a #> [1] 1 #>  #> $c #> [1] 3 #>  #> $b #> [1] 2 #>  #> $d #> [1] 4 #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/commaCollapsed.html","id":null,"dir":"Reference","previous_headings":"","what":"Paste With Collapse = ","title":"Paste With Collapse = ","text":"Paste Collapse = \",\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/commaCollapsed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paste With Collapse = ","text":"","code":"commaCollapsed(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/commaCollapsed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paste With Collapse = ","text":"x vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/commonNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Common Names in two Objects with Names Attribute — commonNames","title":"Common Names in two Objects with Names Attribute — commonNames","text":"Common Names two Objects Names Attribute","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/commonNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Common Names in two Objects with Names Attribute — commonNames","text":"","code":"commonNames(x, y)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/commonNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Common Names in two Objects with Names Attribute — commonNames","text":"x object names attribute, e.g. data.frame, named vector y object names attribute, e.g. data.frame, named vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/commonNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Common Names in two Objects with Names Attribute — commonNames","text":"vector names occurring x y","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/commonNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Common Names in two Objects with Names Attribute — commonNames","text":"","code":"x <- data.frame(a = 1:2, b = 2:3) y <- c(a = 1, c = 2)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/compareDataFrames.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare two data frames by columns — compareDataFrames","title":"Compare two data frames by columns — compareDataFrames","text":"Compare two data frames columns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/compareDataFrames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare two data frames by columns — compareDataFrames","text":"","code":"compareDataFrames(   x,   y,   dbg = FALSE,   xname = deparse(substitute(x)),   yname = deparse(substitute(y)) )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/compareDataFrames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare two data frames by columns — compareDataFrames","text":"x first data frame y second data frame dbg TRUE (default) result comparing dimensions column names printed screen xname name first data frame appear output dbg = TRUE yname name second data frame appear output dbg = TRUE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/compareDataFrames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare two data frames by columns — compareDataFrames","text":"list logical","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/compareDataFrames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare two data frames by columns — compareDataFrames","text":"","code":"x <- data.frame(a = 1:2, b = 2:3) y <- x  test1 <- all(unlist(compareDataFrames(x, y)))  z <- compareDataFrames(x, y[, c(\"b\", \"a\")]) expectedFalse <- c(\"identical\", \"identicalExceptAttributes\", \"sameColumnNames\") test2 <- all(names(which(!unlist(z))) == expectedFalse)  test1 && test2 #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/compareSets.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare the values in two vectors — compareSets","title":"Compare the values in two vectors — compareSets","text":"Prints result comparing values two vectors  (values first vector second one  values second vector first one) screen.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/compareSets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare the values in two vectors — compareSets","text":"","code":"compareSets(   x,   y,   subject = \"Values\",   xname = deparse(substitute(x)),   yname = deparse(substitute(y)) )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/compareSets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare the values in two vectors — compareSets","text":"x first vector y second vector subject name objects compared appear  message. Default: \"Values\". xname optional name first vector used message yname optional name second vector used message","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/compareSets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare the values in two vectors — compareSets","text":"","code":"compareSets(1:10, 3:13) #> Values in 1:10 that are not in 3:13: 1, 2 #> Values in 3:13 that are not in 1:10: 11, 12, 13 compareSets(1:10, 3:13, \"numbers\", \"set 1\", \"set 2\") #> numbers in set 1 that are not in set 2: 1, 2 #> numbers in set 2 that are not in set 1: 11, 12, 13"},{"path":"https://kwb-r.github.io/kwb.utils/reference/containsNulString.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for nul String in File — containsNulString","title":"Check for nul String in File — containsNulString","text":"Check nul String File","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/containsNulString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for nul String in File — containsNulString","text":"","code":"containsNulString(filepath)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/containsNulString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for nul String in File — containsNulString","text":"filepath full path file checked","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/containsNulString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for nul String in File — containsNulString","text":"TRUE first two bytes file <FF><FE>, else  FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/convertCsvFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify the format of a CSV file — convertCsvFile","title":"Modify the format of a CSV file — convertCsvFile","text":"function allows change format (column delimiter,  decimal character) CSV file. uses read.table read  CSV file write.table rewrite file modified format new file. arguments read.table write.table supported. Arguments provided functions appear two arguments <argument_name>_in  <argument_name>_out function.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/convertCsvFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify the format of a CSV file — convertCsvFile","text":"","code":"convertCsvFile(   file_in,   sep_in = formals(utils::read.table)$sep,   sep_out = sep_in,   dec_in = formals(utils::read.table)$dec,   dec_out = dec_in,   file_out = NULL,   header = TRUE,   quote_in = formals(utils::read.table)$quote,   quote_out = formals(utils::write.table)$quote,   row.names_in = formals(utils::read.table)$row.names,   col.names_in = formals(utils::read.table)$col.names,   row.names_out = FALSE,   col.names_out = TRUE,   fileEncoding_in = formals(utils::read.table)$fileEncoding,   fileEncoding_out = fileEncoding_in,   dbg = TRUE,   ... )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/convertCsvFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify the format of a CSV file — convertCsvFile","text":"file_in path input file sep_in column separator input file sep_out column separator output file dec_in decimal character input file dec_out decimal character inoutput file file_out path output file header passed read.table quote_in passed quote read.table quote_out passed quote write.table row.names_in passed row.names read.table col.names_in passed col.names read.table row.names_out passed row.names write.table col.names_out passed col.names write.table fileEncoding_in passed fileEncoding read.table fileEncoding_out passed fileEncoding write.table dbg TRUE (default) debug messages shown ... arguments passed either read.table  write.table","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/convertCsvFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify the format of a CSV file — convertCsvFile","text":"path created CSV file","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/convertCsvFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify the format of a CSV file — convertCsvFile","text":"","code":"# Write the iris dataset to a temporary file with \",\" as column separator csv_in <- tempfile(fileext = \".csv\") write.table(iris, csv_in, row.names = FALSE)  # Review the first lines of the file catLines(readLines(csv_in, 6)) #> \"Sepal.Length\" \"Sepal.Width\" \"Petal.Length\" \"Petal.Width\" \"Species\" #> 5.1 3.5 1.4 0.2 \"setosa\" #> 4.9 3 1.4 0.2 \"setosa\" #> 4.7 3.2 1.3 0.2 \"setosa\" #> 4.6 3.1 1.5 0.2 \"setosa\" #> 5 3.6 1.4 0.2 \"setosa\"  # Convert the column separator (from \" \" which was the default) to \";\" csv_out <- convertCsvFile(csv_in, sep_out = \";\") #> Reading from '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpmFnsry/fileab71c83d4c3.csv' ... ok. #> Writing to '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpmFnsry/fileab71c83d4c3_new.csv' ... ok.  # Review the result catLines(readLines(csv_out, 6)) #> \"Sepal.Length\";\"Sepal.Width\";\"Petal.Length\";\"Petal.Width\";\"Species\" #> 5.1;3.5;1.4;0.2;\"setosa\" #> 4.9;3;1.4;0.2;\"setosa\" #> 4.7;3.2;1.3;0.2;\"setosa\" #> 4.6;3.1;1.5;0.2;\"setosa\" #> 5;3.6;1.4;0.2;\"setosa\"  # Delete the file so that it can be recreated unlink(csv_out)  # Convert the column separator and the decimal character csv_out <- convertCsvFile(csv_in, sep_out = \";\", dec_out = \",\") #> Reading from '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpmFnsry/fileab71c83d4c3.csv' ... ok. #> Writing to '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpmFnsry/fileab71c83d4c3_new.csv' ... ok.  # Review the result catLines(readLines(csv_out, 6)) #> \"Sepal.Length\";\"Sepal.Width\";\"Petal.Length\";\"Petal.Width\";\"Species\" #> 5,1;3,5;1,4;0,2;\"setosa\" #> 4,9;3;1,4;0,2;\"setosa\" #> 4,7;3,2;1,3;0,2;\"setosa\" #> 4,6;3,1;1,5;0,2;\"setosa\" #> 5;3,6;1,4;0,2;\"setosa\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyAttributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Attributes Between Two Objects — copyAttributes","title":"Copy Attributes Between Two Objects — copyAttributes","text":"Copy Attributes Two Objects","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyAttributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Attributes Between Two Objects — copyAttributes","text":"","code":"copyAttributes(x, y, attrNames)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyAttributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Attributes Between Two Objects — copyAttributes","text":"x object copy attributes y y object copy attributes x attrNames vector character containing names attributes  y copied x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyAttributes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy Attributes Between Two Objects — copyAttributes","text":"","code":"x <- structure(1, a = 2, b = 3) y <- structure(2, c = 4) copyAttributes(x, y, \"c\") #> [1] 1 #> attr(,\"a\") #> [1] 2 #> attr(,\"b\") #> [1] 3 #> attr(,\"c\") #> [1] 4"},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyDirectoryStructure.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Directory Structure — copyDirectoryStructure","title":"Copy Directory Structure — copyDirectoryStructure","text":"Copy full directory structure source directory target  directory","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyDirectoryStructure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Directory Structure — copyDirectoryStructure","text":"","code":"copyDirectoryStructure(   sourcedir,   targetdir,   excludePattern = \"^$\",   recursive = TRUE,   dbg = TRUE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyDirectoryStructure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy Directory Structure — copyDirectoryStructure","text":"sourcedir path source directory targetdir path target directory excludePattern pattern matching directory names excluded copying process recursive TRUE (default) full tree directories subdirectories copied, otherwise top-level directories dbg TRUE (default) debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyDirectoryStructure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy Directory Structure — copyDirectoryStructure","text":"function invisibly returns vector character containing   full paths directories created.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyListElements.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy List Elements into a List of Lists — copyListElements","title":"Copy List Elements into a List of Lists — copyListElements","text":"Copy List Elements List Lists","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyListElements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy List Elements into a List of Lists — copyListElements","text":"","code":"copyListElements(x, y, name = deparse(substitute(y)))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyListElements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Copy List Elements into a List of Lists — copyListElements","text":"x list lists y list elements name name target list element","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyListElements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Copy List Elements into a List of Lists — copyListElements","text":"x sublist extended list element name  taken y","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/copyListElements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Copy List Elements into a List of Lists — copyListElements","text":"","code":"x <- list(list(a = 1), list(b = 2), list(c = 3)) y <- list(\"b1\", \"b2\", \"b3\") str(copyListElements(x, y, \"b\")) #> List of 3 #>  $ :List of 2 #>   ..$ a: num 1 #>   ..$ b: chr \"b1\" #>  $ :List of 1 #>   ..$ b: chr \"b2\" #>  $ :List of 2 #>   ..$ c: num 3 #>   ..$ b: chr \"b3\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/countNaInColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Count NA in one Column of a Data Frame — countNaInColumn","title":"Count NA in one Column of a Data Frame — countNaInColumn","text":"Count NA one Column Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/countNaInColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count NA in one Column of a Data Frame — countNaInColumn","text":"","code":"countNaInColumn(data, column)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/countNaInColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count NA in one Column of a Data Frame — countNaInColumn","text":"data data frame column column name","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/countNaInColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count NA in one Column of a Data Frame — countNaInColumn","text":"number NA column data","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/countOrSum.html","id":null,"dir":"Reference","previous_headings":"","what":"Count or Sum Up Values Within Groups of rows — countOrSum","title":"Count or Sum Up Values Within Groups of rows — countOrSum","text":"Count Sum Values Within Groups rows","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/countOrSum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count or Sum Up Values Within Groups of rows — countOrSum","text":"","code":"countOrSum(x, by = NULL, sum.up = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/countOrSum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count or Sum Up Values Within Groups of rows — countOrSum","text":"x data frame vector names columns x grouped sum.name column x containing numeric values summed . NULL (default) rows within groups counted instead summing values within group","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/countOrSum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count or Sum Up Values Within Groups of rows — countOrSum","text":"object class xtabs many dimensions   values ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/countOrSum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count or Sum Up Values Within Groups of rows — countOrSum","text":"","code":"# Create a data frame with example data x <- data.frame(   Group = rep(c(\"A\", \"B\", \"C\"), 4),   Even = rep(c(FALSE, TRUE), 6),   Value = seq_len(12) )  # Count the number of rows for each group countOrSum(x, \"Group\") #> Group #> A B C  #> 4 4 4  countOrSum(x, c(\"Group\", \"Even\")) #>      Even #> Group FALSE TRUE #>     A     2    2 #>     B     2    2 #>     C     2    2  # Sum up the values in column \"Value\" for each group countOrSum(x, \"Group\", sum.up = \"Value\") #> Group #>  A  B  C  #> 22 26 30  countOrSum(x, c(\"Group\", \"Even\"), sum.up = \"Value\") #>      Even #> Group FALSE TRUE #>     A     8   14 #>     B    16   10 #>     C    12   18"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createAccessor.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Function to Safely Access Data Frame Columns or List Elements — createAccessor","title":"Create Function to Safely Access Data Frame Columns or List Elements — createAccessor","text":"Create Function Safely Access Data Frame Columns List Elements","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createAccessor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Function to Safely Access Data Frame Columns or List Elements — createAccessor","text":"","code":"createAccessor(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createAccessor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Function to Safely Access Data Frame Columns or List Elements — createAccessor","text":"x data frame list","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createAccessor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Function to Safely Access Data Frame Columns or List Elements — createAccessor","text":"","code":"getcol <- createAccessor(data.frame(a = 1:2, b = 2:3)) getcol(\"a\") #> [1] 1 2 getcol(\"b\") #> [1] 2 3 getcol(c(\"b\", \"a\")) #>   b a #> 1 2 1 #> 2 3 2 # getcol(\"c\") # error with info about existing columns"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirAndReturnPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Directory including required ","title":"Create a Directory including required ","text":"Create Directory including required \"upward\" Folders","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirAndReturnPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Directory including required ","text":"","code":"createDirAndReturnPath(path, dbg = TRUE, confirm = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirAndReturnPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Directory including required ","text":"path character string representing path directory created dbg TRUE messages created found directories shown confirm TRUE (default FALSE!) user asked confirm creation directory","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirAndReturnPath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Directory including required ","text":"created path NULL path created","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirectories.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Directories — createDirectories","title":"Create Directories — createDirectories","text":"Create Directories","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirectories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Directories — createDirectories","text":"","code":"createDirectories(paths, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirectories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Directories — createDirectories","text":"paths paths directories created ... arguments passed createDirectory","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirectories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Directories — createDirectories","text":"paths created directories","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Directory if it does not exist — createDirectory","title":"Create Directory if it does not exist — createDirectory","text":"Create Directory exist","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Directory if it does not exist — createDirectory","text":"","code":"createDirectory(dir.to.create, dbg = TRUE, confirm = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Directory if it does not exist — createDirectory","text":"dir..create character string representing path directory created dbg TRUE messages created found directories shown confirm TRUE (default FALSE!) user asked confirm creation directory","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createDirectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Directory if it does not exist — createDirectory","text":"created path NULL path created","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createFunctionExtdataFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Function to Compose Path in Package — createFunctionExtdataFile","title":"Create Function to Compose Path in Package — createFunctionExtdataFile","text":"Create Function Compose Path Package","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createFunctionExtdataFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Function to Compose Path in Package — createFunctionExtdataFile","text":"","code":"createFunctionExtdataFile(package)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createFunctionExtdataFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Function to Compose Path in Package — createFunctionExtdataFile","text":"package name package create shortcut system.file(\"extdata\", ..., package = package)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createFunctionExtdataFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Function to Compose Path in Package — createFunctionExtdataFile","text":"function returns function internally calls system.file(\"extdata\", ..., package = package)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createFunctionExtdataFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Function to Compose Path in Package — createFunctionExtdataFile","text":"","code":"extdataFile <- createFunctionExtdataFile(\"kwb.utils\") dir(extdataFile()) #> [1] \"dictionary.txt\"     \"reorganise-tests.R\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createIdAlong.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Unique Identifiers along Input Vector — createIdAlong","title":"Create Unique Identifiers along Input Vector — createIdAlong","text":"function helps create strings can used identifiers.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createIdAlong.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Unique Identifiers along Input Vector — createIdAlong","text":"","code":"createIdAlong(x, base_name = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createIdAlong.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Unique Identifiers along Input Vector — createIdAlong","text":"x vector objects create identifiers base_name base string hexadecimal suffixes appended. default name object x, \"s\" end removed, used. example, passing vector called \"files\" function results ids \"file_01\", \"file_02\", ...","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createIdAlong.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Unique Identifiers along Input Vector — createIdAlong","text":"vector character long x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createIdAlong.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Unique Identifiers along Input Vector — createIdAlong","text":"","code":"# Create ids for 32 numbers createIdAlong(1:32, \"number\") #>  [1] \"number_01\" \"number_02\" \"number_03\" \"number_04\" \"number_05\" \"number_06\" #>  [7] \"number_07\" \"number_08\" \"number_09\" \"number_0a\" \"number_0b\" \"number_0c\" #> [13] \"number_0d\" \"number_0e\" \"number_0f\" \"number_10\" \"number_11\" \"number_12\" #> [19] \"number_13\" \"number_14\" \"number_15\" \"number_16\" \"number_17\" \"number_18\" #> [25] \"number_19\" \"number_1a\" \"number_1b\" \"number_1c\" \"number_1d\" \"number_1e\" #> [31] \"number_1f\" \"number_20\" # Take base name from x, with the plural's \"s\" removed numbers <- 1:32 createIdAlong(numbers) #>  [1] \"number_01\" \"number_02\" \"number_03\" \"number_04\" \"number_05\" \"number_06\" #>  [7] \"number_07\" \"number_08\" \"number_09\" \"number_0a\" \"number_0b\" \"number_0c\" #> [13] \"number_0d\" \"number_0e\" \"number_0f\" \"number_10\" \"number_11\" \"number_12\" #> [19] \"number_13\" \"number_14\" \"number_15\" \"number_16\" \"number_17\" \"number_18\" #> [25] \"number_19\" \"number_1a\" \"number_1b\" \"number_1c\" \"number_1d\" \"number_1e\" #> [31] \"number_1f\" \"number_20\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Matrix with Row and Column Names — createMatrix","title":"Matrix with Row and Column Names — createMatrix","text":"Create matrix giving row column names elements  set default value","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Matrix with Row and Column Names — createMatrix","text":"","code":"createMatrix(   rowNames,   colNames = rowNames,   value = 0,   name.row = NULL,   name.col = NULL )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Matrix with Row and Column Names — createMatrix","text":"rowNames character vector row names given matrix colNames character vector column names given matrix value value given matrix element name.row optional. Name given row dimension name.col optional. Name given column dimension","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Matrix with Row and Column Names — createMatrix","text":"matrix rowNames row names colNames   column names, filled value position","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Matrix with Row and Column Names — createMatrix","text":"","code":"## Initialise a matrix with rows A to E and columns x to z of value -1 createMatrix(c(\"A\", \"B\", \"C\", \"D\", \"E\"), c(\"x\", \"y\", \"z\"), -1) #>    x  y  z #> A -1 -1 -1 #> B -1 -1 -1 #> C -1 -1 -1 #> D -1 -1 -1 #> E -1 -1 -1  ## By default the column names are assumed to be equal to the row names createMatrix(c(\"A\", \"B\", \"C\")) #>   A B C #> A 0 0 0 #> B 0 0 0 #> C 0 0 0  ## Initialise a square matrix with NA createMatrix(c(\"A\", \"B\", \"C\"), value = NA) #>    A  B  C #> A NA NA NA #> B NA NA NA #> C NA NA NA  ## Give a name to the row dimension createMatrix(c(\"A\", \"B\", \"C\"), name.row = \"Letters\") #>         #> Letters A B C #>       A 0 0 0 #>       B 0 0 0 #>       C 0 0 0"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createPasswordFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a File Storing a Password in Encrypted Form — createPasswordFile","title":"Create a File Storing a Password in Encrypted Form — createPasswordFile","text":"Create File Storing Password Encrypted Form","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createPasswordFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a File Storing a Password in Encrypted Form — createPasswordFile","text":"","code":"createPasswordFile(account = NULL, keyFile, passwordFile, password = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createPasswordFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a File Storing a Password in Encrypted Form — createPasswordFile","text":"account optional. Name account user asked enter  password . used input prompt. keyFile path file containing encryption/decryption key, generated generateKeyFile passwordFile path password file created. existing file overwritten! password password account. NULL (default) user asked enter password console","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/createStorage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Storage Object to Save/Load .rds or .RData files — createStorage","title":"Create Storage Object to Save/Load .rds or .RData files — createStorage","text":"function returns object implements methods list(),  save(), load(), remove() list, store, load  remove, respectively .rds .RData files. object associated  folder given function.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createStorage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Storage Object to Save/Load .rds or .RData files — createStorage","text":"","code":"createStorage(path, type = \"rds\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/createStorage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Storage Object to Save/Load .rds or .RData files — createStorage","text":"path path folder store RDS files. folder  exist attempted created. type one \"rds\", \"RData\", specifying format used store R objects.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createStorage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Storage Object to Save/Load .rds or .RData files — createStorage","text":"list \"member functions\" list(), save(),  load(), remove(), variables path, type","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/createStorage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Storage Object to Save/Load .rds or .RData files — createStorage","text":"","code":"# Create an empty test folder path <- file.path(tempdir(), \"test\") dir.create(path)  # Create a storage object pointing to a temporary test folder storage <- kwb.utils::createStorage(path) #> The directory \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpmFnsry/test\" already exists.  # At the beginning, the storage is empty storage$list() #> character(0)  # Store objects apple <- 5 storage$save(apple, banana = list(\"Hello\", \"World\"))  if (FALSE) { # List the objects storage$list()  # Retrieve an object storage$load(\"banana\")  # Remove objects storage$remove(\"apple\") storage$remove(\"banana\")  # The storage is empty again storage$list() }"},{"path":"https://kwb-r.github.io/kwb.utils/reference/csvTextToDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"CSV Text to Data Frame — csvTextToDataFrame","title":"CSV Text to Data Frame — csvTextToDataFrame","text":"CSV Text Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/csvTextToDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CSV Text to Data Frame — csvTextToDataFrame","text":"","code":"csvTextToDataFrame(text, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/csvTextToDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CSV Text to Data Frame — csvTextToDataFrame","text":"text character vector representing lines comma separated values ... arguments passed read.table","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/decode.html","id":null,"dir":"Reference","previous_headings":"","what":"Decode a Vector of Character — decode","title":"Decode a Vector of Character — decode","text":"example see encode.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/decode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decode a Vector of Character — decode","text":"","code":"decode(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/decode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decode a Vector of Character — decode","text":"x vector encoded character strings returned  encode","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/decode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decode a Vector of Character — decode","text":"vector decoded character strings","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Value if Object is NA — defaultIfNA","title":"Default Value if Object is NA — defaultIfNA","text":"Return given object default value object NA","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Value if Object is NA — defaultIfNA","text":"","code":"defaultIfNA(x, default, count = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Value if Object is NA — defaultIfNA","text":"x vector possibly containing NA values default default value returned x NA count TRUE (default FALSE) number replaced values returned attributes count","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Value if Object is NA — defaultIfNA","text":"x x NA default otherwise","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfNA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default Value if Object is NA — defaultIfNA","text":"","code":"defaultIfNA(NA, \"default\") # returns the default value #> [1] \"default\" defaultIfNA(\"actual\", \"default\") # returns the \"actual\" value #> [1] \"actual\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfNULL.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Value if Object is NULL — defaultIfNULL","title":"Default Value if Object is NULL — defaultIfNULL","text":"Return given object default value object NULL","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfNULL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Value if Object is NULL — defaultIfNULL","text":"","code":"defaultIfNULL(x, default, count = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfNULL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Value if Object is NULL — defaultIfNULL","text":"x R object checked NULL default default value returned x NULL count TRUE (default FALSE) number replaced values returned attributes count","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfNULL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Value if Object is NULL — defaultIfNULL","text":"x x NULL default otherwise","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfNULL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default Value if Object is NULL — defaultIfNULL","text":"","code":"defaultIfNULL(NULL, \"default\") # returns the default value #> [1] \"default\" defaultIfNULL(\"actual\", \"default\") # returns the \"actual\" value #> [1] \"actual\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfZero.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Value if Object is 0 (zero) — defaultIfZero","title":"Default Value if Object is 0 (zero) — defaultIfZero","text":"Return given object default value object 0 (zero)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfZero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Value if Object is 0 (zero) — defaultIfZero","text":"","code":"defaultIfZero(x, default, count = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfZero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Value if Object is 0 (zero) — defaultIfZero","text":"x vector possibly containing zeroes default value used instead zero count TRUE (default FALSE) number replaced values returned attributes count","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfZero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Value if Object is 0 (zero) — defaultIfZero","text":"x x 0 default otherwise.   returned object attribute count containing number   values set default value.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultIfZero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default Value if Object is 0 (zero) — defaultIfZero","text":"","code":"defaultIfZero(c(1, 2, 0, 4, 5, 0, 6), NA) # returns the default value (NA)  #> [1]  1  2 NA  4  5 NA  6 (out <- defaultIfZero(1:6, NA, count = TRUE)) # returns the \"actual\" values #> [1] 1 2 3 4 5 6 #> attr(,\"count\") #> [1] 0  # The number of values that were zero is returned in the attribute \"count\"  attr(out, \"count\") #> [1] 0"},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Factor Levels — defaultLevels","title":"Default Factor Levels — defaultLevels","text":"x numeric values whole numbers use sequence smallest highest value","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Factor Levels — defaultLevels","text":"","code":"defaultLevels(x, step = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default Factor Levels — defaultLevels","text":"x numeric character vector step step used sequence generation","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultLevels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default Factor Levels — defaultLevels","text":"x numeric sequence lowest highest   value x given step returned. x    vector character strings, sorted unique values returned.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultLevels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default Factor Levels — defaultLevels","text":"","code":"defaultLevels(c(1, 3, 4, 5, 4)) #> [1] 1 2 3 4 5 defaultLevels(c(1920, 1950, 1970), step = 10) #> [1] 1920 1930 1940 1950 1960 1970"},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultWindowsProgramFolders.html","id":null,"dir":"Reference","previous_headings":"","what":"Default Windows Program Folders — defaultWindowsProgramFolders","title":"Default Windows Program Folders — defaultWindowsProgramFolders","text":"Default Windows Program Folders","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/defaultWindowsProgramFolders.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default Windows Program Folders — defaultWindowsProgramFolders","text":"","code":"defaultWindowsProgramFolders()"},{"path":"https://kwb-r.github.io/kwb.utils/reference/desktop.html","id":null,"dir":"Reference","previous_headings":"","what":"Path to Your Desktop — desktop","title":"Path to Your Desktop — desktop","text":"Get path desktop","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/desktop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Path to Your Desktop — desktop","text":"","code":"desktop(osType = .OStype())"},{"path":"https://kwb-r.github.io/kwb.utils/reference/desktop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Path to Your Desktop — desktop","text":"osType Optional. Type operating system, one \"unix\", \"windows\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/desktop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Path to Your Desktop — desktop","text":"character string representing path desktop","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/diffrows.html","id":null,"dir":"Reference","previous_headings":"","what":"Differences between Matrix Rows — diffrows","title":"Differences between Matrix Rows — diffrows","text":"Differences Matrix Rows","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/diffrows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Differences between Matrix Rows — diffrows","text":"","code":"diffrows(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/diffrows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Differences between Matrix Rows — diffrows","text":"x matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/diffrows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Differences between Matrix Rows — diffrows","text":"matrix one row less input matrix x row  representing difference x[+1, ]-x[, ] rows +1 x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/diffrows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Differences between Matrix Rows — diffrows","text":"","code":"x <- matrix(1:12, nrow = 3)  d <- diffrows(x)  x[2, ] - x[1, ] == d[1, ] #> [1] TRUE TRUE TRUE TRUE x[3, ] - x[2, ] == d[2, ] #> [1] TRUE TRUE TRUE TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-OStype.html","id":null,"dir":"Reference","previous_headings":"","what":"see tools:::.OStype — .OStype","title":"see tools:::.OStype — .OStype","text":"copy tools:::.OStype. redefined can used within package. R CMD build complain used tools:::.OStype!","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-OStype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"see tools:::.OStype — .OStype","text":"","code":".OStype()"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-defaultIf.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a Default Value for Values Meeting a Condition — .defaultIf","title":"Return a Default Value for Values Meeting a Condition — .defaultIf","text":"Return Default Value Values Meeting Condition","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-defaultIf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a Default Value for Values Meeting a Condition — .defaultIf","text":"","code":".defaultIf(FUN.test, x, default, count = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-defaultIf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a Default Value for Values Meeting a Condition — .defaultIf","text":"FUN.test function returning vector logical, applied  x x vector set default values default value set x positions  FUN.text returns TRUE count TRUE (default FALSE) number replaced values returned attributes count","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-guessSeparator.1.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess Column Separator (Version 1) — .guessSeparator.1","title":"Guess Column Separator (Version 1) — .guessSeparator.1","text":"Guess Column Separator (Version 1)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-guessSeparator.1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess Column Separator (Version 1) — .guessSeparator.1","text":"","code":".guessSeparator.1(textlines, separators, comment.char = \"#\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-guessSeparator.1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess Column Separator (Version 1) — .guessSeparator.1","text":"textlines vector character representing first lines file separators vector possible column separator characters file checked comment.char comment character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-guessSeparator.2.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess Column Separator (Version 2) — .guessSeparator.2","title":"Guess Column Separator (Version 2) — .guessSeparator.2","text":"Guess Column Separator (Version 2)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-guessSeparator.2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess Column Separator (Version 2) — .guessSeparator.2","text":"","code":".guessSeparator.2(textlines, separators)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-guessSeparator.2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess Column Separator (Version 2) — .guessSeparator.2","text":"textlines vector character representing first lines file separators vector possible column separator characters file checked ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-isNetworkPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the Path Represent a Network Path? — .isNetworkPath","title":"Does the Path Represent a Network Path? — .isNetworkPath","text":"Path Represent Network Path?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-isNetworkPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the Path Represent a Network Path? — .isNetworkPath","text":"","code":".isNetworkPath(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-isNetworkPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the Path Represent a Network Path? — .isNetworkPath","text":"x vector character representing paths","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-isNetworkPath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does the Path Represent a Network Path? — .isNetworkPath","text":"","code":".isNetworkPath(\"//server/folder/file.txt\") #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-log.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Log Message to Console — .log","title":"Write Log Message to Console — .log","text":"Write Log Message Console","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Log Message to Console — .log","text":"","code":".log(...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Log Message to Console — .log","text":"... parts message passed cat","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-logline.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Log Message and New Line Character to Console — .logline","title":"Write Log Message and New Line Character to Console — .logline","text":"Write Log Message New Line Character Console","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-logline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Log Message and New Line Character to Console — .logline","text":"","code":".logline(...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-logline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Log Message and New Line Character to Console — .logline","text":"... parts message passed cat","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-logok.html","id":null,"dir":"Reference","previous_headings":"","what":"Write ","title":"Write ","text":"Write \"ok\" New Line Character Console","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-logok.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write ","text":"","code":".logok(dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-logok.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write ","text":"dbg logical switch logging (dbg = TRUE) (dbg = FALSE)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-logstart.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Log Message to Console if in Debugging Mode — .logstart","title":"Write Log Message to Console if in Debugging Mode — .logstart","text":"Write Log Message Console Debugging Mode","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-logstart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Log Message to Console if in Debugging Mode — .logstart","text":"","code":".logstart(dbg = TRUE, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dot-logstart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Log Message to Console if in Debugging Mode — .logstart","text":"dbg logical switch logging (dbg = TRUE) (dbg = FALSE) ... parts message passed catIf","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dropDim.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop Array Dimension(s) of Length One — dropDim","title":"Drop Array Dimension(s) of Length One — dropDim","text":"Drop Array Dimension(s) Length One","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dropDim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop Array Dimension(s) of Length One — dropDim","text":"","code":"dropDim(x, dimension = which(dim(x) == 1))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dropDim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop Array Dimension(s) of Length One — dropDim","text":"x array dimension number(s) dimension(s) length one removed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dropDim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop Array Dimension(s) of Length One — dropDim","text":"array dimensions numbers given dimension removed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dropDim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop Array Dimension(s) of Length One — dropDim","text":"","code":"# Define an array of two matrices A <- array( 1:8, dim = c(2, 2, 2), dimnames = list(     paste0(\"x\", 1:2), paste0(\"y\", 1:2), paste0(\"z\", 1:2)) )  # The aim is to select the first column of the first matrix with # the matrix structure being kept. This cannot be done with the # standard \"[\" operator. It has indeed a \"drop\" argument but this # acts on all dimensions:  # By default, drop is TRUE. The result is a named vector A[, 1, 1] #> x1 x2  #>  1  2   # With drop = FALSE we get a 3D-array again and not a matrix A[, 1, 1, drop = FALSE] #> , , z1 #>  #>    y1 #> x1  1 #> x2  2 #>   # Use dropDim to remove the third dimension of an array that # has already one dimension of length one dropDim(A[, 1, 1, drop = FALSE], dimension = 3) #>    y1 #> x1  1 #> x2  2"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dropUnusedFactorLevels.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop Unused Factor Levels in all Factor Columns — dropUnusedFactorLevels","title":"Drop Unused Factor Levels in all Factor Columns — dropUnusedFactorLevels","text":"Drop Unused Factor Levels Factor Columns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dropUnusedFactorLevels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop Unused Factor Levels in all Factor Columns — dropUnusedFactorLevels","text":"","code":"dropUnusedFactorLevels(data, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/dropUnusedFactorLevels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop Unused Factor Levels in all Factor Columns — dropUnusedFactorLevels","text":"data data frame remove unused levels columns  factors dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dropUnusedFactorLevels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop Unused Factor Levels in all Factor Columns — dropUnusedFactorLevels","text":"data unused factors removed columns factors","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/dropUnusedFactorLevels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop Unused Factor Levels in all Factor Columns — dropUnusedFactorLevels","text":"","code":"# Create an example data frame with two factor columns data <- data.frame(   id = 1:3,    factor_1 = factor(c(\"a\", \"b\", \"a\"), levels = c(\"a\", \"b\", \"c\")),   factor_2 = factor(c(\"x\", \"x\", \"y\"), levels = c(\"x\", \"y\", \"z\")),   no_factor = c(\"A\", \"B\", \"C\"),   stringsAsFactors = FALSE )  # Review the structure of the data frame str(data) #> 'data.frame':\t3 obs. of  4 variables: #>  $ id       : int  1 2 3 #>  $ factor_1 : Factor w/ 3 levels \"a\",\"b\",\"c\": 1 2 1 #>  $ factor_2 : Factor w/ 3 levels \"x\",\"y\",\"z\": 1 1 2 #>  $ no_factor: chr  \"A\" \"B\" \"C\"  # Review the structure of the data frame with unused factors removed str(dropUnusedFactorLevels(data)) #> Removing unused factors from data$factor_1 ... ok. (0.00s)  #> Removing unused factors from data$factor_2 ... ok. (0.00s)  #> 'data.frame':\t3 obs. of  4 variables: #>  $ id       : int  1 2 3 #>  $ factor_1 : Factor w/ 2 levels \"a\",\"b\": 1 2 1 #>  $ factor_2 : Factor w/ 2 levels \"x\",\"y\": 1 1 2 #>  $ no_factor: chr  \"A\" \"B\" \"C\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/encode.html","id":null,"dir":"Reference","previous_headings":"","what":"Encode a Vector of Character — encode","title":"Encode a Vector of Character — encode","text":"Encode Vector Character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/encode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Encode a Vector of Character — encode","text":"","code":"encode(x, level = 1, chars = printable_chars(level))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/encode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Encode a Vector of Character — encode","text":"x vector character level one 1, 2, 3 defining character set use  encoding, see printable_chars. chars vector characters used encoding","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/encode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Encode a Vector of Character — encode","text":"vector character long x element containing   encoded version corresponding element x. returned   vector attribute codes named vector. vector    contains unique values x elements. element named   code used encode corresponding element.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/encode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Encode a Vector of Character — encode","text":"","code":"x <- c(\"very-long-word\", \"very-long-word\", \"very-very-long-word\") encoded <- encode(x) encoded #> [1] \"1\" \"1\" \"2\" #> attr(,\"codes\") #>                     1                     2  #>      \"very-long-word\" \"very-very-long-word\"  decode(encoded) #> [1] \"very-long-word\"      \"very-long-word\"      \"very-very-long-word\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/enlargeVector.html","id":null,"dir":"Reference","previous_headings":"","what":"Enlarge a Vector to Given Length — enlargeVector","title":"Enlarge a Vector to Given Length — enlargeVector","text":"Enlarge vector given length, filling given element","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/enlargeVector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enlarge a Vector to Given Length — enlargeVector","text":"","code":"enlargeVector(x, length.out, fill.with = \"\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/enlargeVector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enlarge a Vector to Given Length — enlargeVector","text":"x vector length.desired length output vector fill.element fill vector (default: \"\")","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/enlargeVector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enlarge a Vector to Given Length — enlargeVector","text":"x, filled fill.final length length.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/enlargeVector.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enlarge a Vector to Given Length — enlargeVector","text":"","code":"kwb.utils::enlargeVector(1:5, 10, fill.with = 0)  #>  [1] 1 2 3 4 5 0 0 0 0 0 kwb.utils::enlargeVector(1:5, 10, fill.with = NA)  #>  [1]  1  2  3  4  5 NA NA NA NA NA kwb.utils::enlargeVector(c(\"a\", \"b\", \"c\"), 10)  #>  [1] \"a\" \"b\" \"c\" \"\"  \"\"  \"\"  \"\"  \"\"  \"\"  \"\"  kwb.utils::enlargeVector(c(\"a\", \"b\", \"c\"), 10, fill.with = \"?\") #>  [1] \"a\" \"b\" \"c\" \"?\" \"?\" \"?\" \"?\" \"?\" \"?\" \"?\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/excludeNULL.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude all NULL Entries from a List — excludeNULL","title":"Exclude all NULL Entries from a List — excludeNULL","text":"Exclude NULL Entries List","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/excludeNULL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude all NULL Entries from a List — excludeNULL","text":"","code":"excludeNULL(x, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/excludeNULL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude all NULL Entries from a List — excludeNULL","text":"x list dbg TRUE (default) message shown elements  removed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/excludeNULL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude all NULL Entries from a List — excludeNULL","text":"list x NULL entries excluded","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/excludeNULL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude all NULL Entries from a List — excludeNULL","text":"","code":"L <- list(a = 1, b = NULL, c = \"three\") L #> $a #> [1] 1 #>  #> $b #> NULL #>  #> $c #> [1] \"three\" #>   excludeNULL(L) #> Removing 1 list elements that are NULL ... ok. (0.00s)  #> $a #> [1] 1 #>  #> $c #> [1] \"three\" #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/expandGrid.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around expand.grid — expandGrid","title":"Wrapper around expand.grid — expandGrid","text":"expand.grid stringsAsFactors = FALSE default values first argument changed last, first.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/expandGrid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around expand.grid — expandGrid","text":"","code":"expandGrid(..., stringsAsFactors = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/expandGrid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around expand.grid — expandGrid","text":"... arguments passed expand.grid,  reversed order stringsAsFactors passed expand.grid","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/expandGrid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Wrapper around expand.grid — expandGrid","text":"","code":"persons <- c(\"Peter\", \"Paul\", \"Mary\") fruits <- c(\"apple\", \"pear\")  # With expand.grid() the values of the first argument change first... (grid_1 <- expand.grid(person = persons, fruit = fruits)) #>   person fruit #> 1  Peter apple #> 2   Paul apple #> 3   Mary apple #> 4  Peter  pear #> 5   Paul  pear #> 6   Mary  pear  #... with expandGrid() they change last. (grid_2 <- expandGrid(person = persons, fruit = fruits)) #>   person fruit #> 1  Peter apple #> 2  Peter  pear #> 3   Paul apple #> 4   Paul  pear #> 5   Mary apple #> 6   Mary  pear  # With expand.grid() character strings are converted to factors by default... str(grid_1) #> 'data.frame':\t6 obs. of  2 variables: #>  $ person: Factor w/ 3 levels \"Peter\",\"Paul\",..: 1 2 3 1 2 3 #>  $ fruit : Factor w/ 2 levels \"apple\",\"pear\": 1 1 1 2 2 2 #>  - attr(*, \"out.attrs\")=List of 2 #>   ..$ dim     : Named int [1:2] 3 2 #>   .. ..- attr(*, \"names\")= chr [1:2] \"person\" \"fruit\" #>   ..$ dimnames:List of 2 #>   .. ..$ person: chr [1:3] \"person=Peter\" \"person=Paul\" \"person=Mary\" #>   .. ..$ fruit : chr [1:2] \"fruit=apple\" \"fruit=pear\"  # ... with expandGrid() character strings are not converted by default. # Also, there is no attribute \"out.attrs\" as it is set by expand.grid(). str(grid_2) #> 'data.frame':\t6 obs. of  2 variables: #>  $ person: chr  \"Peter\" \"Peter\" \"Paul\" \"Paul\" ... #>  $ fruit : chr  \"apple\" \"pear\" \"apple\" \"pear\" ..."},{"path":"https://kwb-r.github.io/kwb.utils/reference/extendLimits.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend the Limits of a Range Vector — extendLimits","title":"Extend the Limits of a Range Vector — extendLimits","text":"Extend Limits Range Vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/extendLimits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend the Limits of a Range Vector — extendLimits","text":"","code":"extendLimits(limits, left = 0.05, right = left, absolute = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/extendLimits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend the Limits of a Range Vector — extendLimits","text":"limits vector two elements e.g. used xlim ylim left percentage limit range (absolute == FALSE) absolute value (absolute == TRUE) left limit extended left. right percentage limit range (absolute == FALSE) absolute value (absolute == TRUE) right limit extended right. absolute Default: FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/extractRowRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Row Ranges by Pattern — extractRowRanges","title":"Extract Row Ranges by Pattern — extractRowRanges","text":"Extract Row Ranges Pattern","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/extractRowRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Row Ranges by Pattern — extractRowRanges","text":"","code":"extractRowRanges(   x,   pattern,   column = NULL,   starts = NULL,   startOffset = 1L,   stopOffset = 1L,   nameByMatch = FALSE,   nameColumnsByMatch = TRUE,   renumber = TRUE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/extractRowRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Row Ranges by Pattern — extractRowRanges","text":"x data frame matrix vector character (representing e.g.  rows read text file) pattern pattern searched , either [, column] (x data frame matrix) x (x  vector character) column name column search pattern  x data frame matrix starts optional. Vector indices representing starts row ranges extracted. argument overrides pattern. Instead using pattern find start indices, indices given  used. startOffset row offset added row number pattern matches stopOffset row offset subtracted row number pattern matches nameByMatch logical. TRUE, elements result list named matching values. Defaults FALSE. nameColumnsByMatch TRUE (default) columns result data frames matrices named (x data frame matrix) renumber TRUE (default) x data frame  matrix row names result data frames matrices reset  NULL, .e. rows renumbered","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/extractRowRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Row Ranges by Pattern — extractRowRanges","text":"list data frames list matrices list vectors   character. list element represents one section input, found   two consecutive matches pattern.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/extractRowRanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Row Ranges by Pattern — extractRowRanges","text":"","code":"textLines <- c(   \"Date,Value\",   \"1.1.,1\",   \"2.1.,2\",   \",\",   \"Date,Value\",   \"3.1.,3\",   \"4.1.,4\",   \",\",   \"Date,Value\",   \"5.1.,5\",   \"6.1.,6\" )  # Convert textLines to data frame. The function should be able to handle both. (dataFrame <- read.table(text = textLines, sep = \",\", stringsAsFactors = FALSE)) #>      V1    V2 #> 1  Date Value #> 2  1.1.     1 #> 3  2.1.     2 #> 4             #> 5  Date Value #> 6  3.1.     3 #> 7  4.1.     4 #> 8             #> 9  Date Value #> 10 5.1.     5 #> 11 6.1.     6  # stopOffset = 2L: skip empty line at the bottom of each sub-table extractRowRanges(   textLines,   pattern = \"Date\",    stopOffset = 2L, ) #> [[1]] #> [1] \"1.1.,1\" \"2.1.,2\" #>  #> [[2]] #> [1] \"3.1.,3\" \"4.1.,4\" #>  #> [[3]] #> [1] \"5.1.,5\" \"6.1.,6\" #>   extractRowRanges(   dataFrame,   pattern = \"Date\",   column = \"V1\",   stopOffset = 2L ) #> [[1]] #>   Date Value #> 1 1.1.     1 #> 2 2.1.     2 #>  #> [[2]] #>   Date Value #> 1 3.1.     3 #> 2 4.1.     4 #>  #> [[3]] #>   Date Value #> 1 5.1.     5 #> 2 6.1.     6 #>   # Extract sections after a header line # startOffset = 2L: skip empty line after header \"topic: ...\" textLines <- c(   \"topic: A\",   \"\",   \" a.1\",   \" a.2\",   \" a.3\",   \"topic: B\",   \"\",   \" b.1\",   \"topic: C\",   \"\",   \" c.1\",   \" c.2\" )  extractRowRanges(   textLines,   pattern = \"topic\",    startOffset = 2L,   nameByMatch = TRUE ) #> $topic_A #> [1] \" a.1\" \" a.2\" \" a.3\" #>  #> $topic_B #> [1] \" b.1\" #>  #> $topic_C #> [1] \" c.1\" \" c.2\" #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/extractSubstring.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Substrings Defined by Regular Expressions — extractSubstring","title":"Extract Substrings Defined by Regular Expressions — extractSubstring","text":"Extract substrings defined regular expressions vector strings","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/extractSubstring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Substrings Defined by Regular Expressions — extractSubstring","text":"","code":"extractSubstring(pattern, x, index, stringsAsFactors = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/extractSubstring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Substrings Defined by Regular Expressions — extractSubstring","text":"pattern regular expression containing parts pairs opening closing parentheses defining part(s) extracted x vector character strings index index(es) parenthesized subexpression(s) extracted. length x greater one data frame returned column containing substrings matching subexpression corresponding index. index named, names used column names. stringsAsFactors TRUE (default FALSE) data frame returned columns returned data frame factors, otherwise vectors character.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/extractSubstring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Substrings Defined by Regular Expressions — extractSubstring","text":"","code":"# Define pattern matching a date pattern <- \"([^ ]+), ([0-9]+) of ([^ ]+)\"  # Extract single sub expressions from one string datestring <- \"Thursday, 8 of December\" extractSubstring(pattern, datestring, 1) # \"\"Thursday\"\" #> [1] \"Thursday\" extractSubstring(pattern, datestring, 2) # \"8\" #> [1] \"8\" extractSubstring(pattern, datestring, 3) # \"December\" #> [1] \"December\"  # Extract single sub expressions from a vector of strings datestrings <- c(\"Thursday, 8 of December\", \"Tuesday, 14 of January\") extractSubstring(pattern, datestrings, 1) # \"Thursday\" \"Tuesday\" #> [1] \"Thursday\" \"Tuesday\"  extractSubstring(pattern, datestrings, 2) # \"8\"  \"14\" #> [1] \"8\"  \"14\" extractSubstring(pattern, datestrings, 3) # \"December\" \"January\"  #> [1] \"December\" \"January\"   # Extract more than one subexpression at once -> data.frame extractSubstring(pattern, datestrings, 1:3) #>   subexp.1 subexp.2 subexp.3 #> 1 Thursday        8 December #> 2  Tuesday       14  January  #   subexp.1 subexp.2 subexp.3 #   1 Thursday        8 December #   2  Tuesday       14  January  # Name the sub expressions by naming their number in index (3rd argument) extractSubstring(pattern, datestrings, index = c(weekday = 1, 2, month = 3)) #>    weekday subexp.2    month #> 1 Thursday        8 December #> 2  Tuesday       14  January #   weekday subexp.2    month #   1 Thursday        8 December #   2  Tuesday       14  January"},{"path":"https://kwb-r.github.io/kwb.utils/reference/fileExtension.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Extension of Full File Paths — fileExtension","title":"Get Extension of Full File Paths — fileExtension","text":"Get Extension Full File Paths","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/fileExtension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Extension of Full File Paths — fileExtension","text":"","code":"fileExtension(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/fileExtension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Extension of Full File Paths — fileExtension","text":"x vector file paths","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/fileExtension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Extension of Full File Paths — fileExtension","text":"","code":"# Define example paths paths <- c(\"C:/example/file.csv\", \"file2.txt\", \"D:/e/f/ghi.jkl.zip\")  # Get the file name extensions fileExtension(paths) #> [1] \"csv\" \"txt\" \"zip\"  # Empty string is returned for paths without file name extensions fileExtension(\"C:/NEWS\") #> [1] \"\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/findChanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Value Changes in a Vector — findChanges","title":"Find Value Changes in a Vector — findChanges","text":"Finds positions vector value changes returns \"index regions\", .e. regions indices starts_at ends_at whithin value change, .e.  length(unique(x[starts_at:ends_at])) == 1L TRUE.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/findChanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Value Changes in a Vector — findChanges","text":"","code":"findChanges(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/findChanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Value Changes in a Vector — findChanges","text":"x vector atomic mode (e.g. logical, numeric, character)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/findChanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Value Changes in a Vector — findChanges","text":"data frame one row value changes x. value x change one index   next, assumed belong index region. value   changes, new index region begins. result data frame index   region given starts_at ends_at   indices first last element, respectively, index region.   function returns NULL input vectors x length 0.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/findChanges.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Find Value Changes in a Vector — findChanges","text":"input vector x must contain NA clear handle . function stops error NA x.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/findChanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Value Changes in a Vector — findChanges","text":"","code":"findChanges(c(1,2,2,3,3,3)) #>   starts_at ends_at value #> 1         1       1     1 #> 2         2       3     2 #> 3         4       6     3 findChanges(c(\"a\", \"a\", \"b\", \"c\", \"c\", \"d\")) #>   starts_at ends_at value #> 1         1       2     a #> 2         3       3     b #> 3         4       5     c #> 4         6       6     d findChanges(c(TRUE, TRUE, TRUE, FALSE, FALSE, TRUE, FALSE, FALSE)) #>   starts_at ends_at value #> 1         1       3  TRUE #> 2         4       5 FALSE #> 3         6       6  TRUE #> 4         7       8 FALSE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/findPartialDuplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Paritally Duplicated Rows in a Data Frame — findPartialDuplicates","title":"Find Paritally Duplicated Rows in a Data Frame — findPartialDuplicates","text":"Find Rows data frame identical key columns identical columns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/findPartialDuplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Paritally Duplicated Rows in a Data Frame — findPartialDuplicates","text":"","code":"findPartialDuplicates(data, key_columns, skip_columns = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/findPartialDuplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Paritally Duplicated Rows in a Data Frame — findPartialDuplicates","text":"data data frame key_columns names columns data look duplicated (combined) values skip_columns names columns skipped looking duplicated rows","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/findPartialDuplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Paritally Duplicated Rows in a Data Frame — findPartialDuplicates","text":"NULL rows data identical   values key_columns groups rows   identical values key_columns also identical   columns (except named skip_columns). Otherwise   list returned one element per duplicate key columns.   list elements subsets data representing rows data identical key columns different least   one columns.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/findPartialDuplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Paritally Duplicated Rows in a Data Frame — findPartialDuplicates","text":"","code":"findPartialDuplicates(key_columns = \"id\", data = rbind(   data.frame(id = 1, value = 1),   data.frame(id = 2, value = 2),   data.frame(id = 2, value = 3),   data.frame(id = 3, value = 3),   data.frame(id = 3, value = 3),   data.frame(id = 3, value = 3.1) )) #> [[1]] #>   id value #> 2  2     2 #> 3  2     3 #>  #> [[2]] #>   id value #> 4  3   3.0 #> 5  3   3.0 #> 6  3   3.1 #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/finishAndShowPdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Close Device and Open PDF File in Viewer — finishAndShowPdf","title":"Close Device and Open PDF File in Viewer — finishAndShowPdf","text":"Close PDF device (default: dev.cur()) open PDF file PDF viewer","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/finishAndShowPdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Close Device and Open PDF File in Viewer — finishAndShowPdf","text":"","code":"finishAndShowPdf(PDF, which = grDevices::dev.cur(), ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/finishAndShowPdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Close Device and Open PDF File in Viewer — finishAndShowPdf","text":"PDF full path PDF file opened PDF Viewer passed grDevices::dev.... arguments passed hsShowPdf","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/finishAndShowPdfIf.html","id":null,"dir":"Reference","previous_headings":"","what":"Finish and Display PDF File if Condition is Met — finishAndShowPdfIf","title":"Finish and Display PDF File if Condition is Met — finishAndShowPdfIf","text":"Finish Display PDF File Condition Met","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/finishAndShowPdfIf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finish and Display PDF File if Condition is Met — finishAndShowPdfIf","text":"","code":"finishAndShowPdfIf(to.pdf, PDF, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/finishAndShowPdfIf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finish and Display PDF File if Condition is Met — finishAndShowPdfIf","text":".pdf TRUE pdf device closed pdf file opened viewer PDF path opened pdf file ... arguments passed finishAndShowPdf","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/firstElement.html","id":null,"dir":"Reference","previous_headings":"","what":"First Element — firstElement","title":"First Element — firstElement","text":"Returns first element using function head","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/firstElement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First Element — firstElement","text":"","code":"firstElement(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/firstElement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"First Element — firstElement","text":"x object","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/firstElement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"First Element — firstElement","text":"first element: x[1]","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/firstPosixColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"data/time column of data frame — firstPosixColumn","title":"data/time column of data frame — firstPosixColumn","text":"data/time column data frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/firstPosixColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"data/time column of data frame — firstPosixColumn","text":"","code":"firstPosixColumn(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/firstPosixColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"data/time column of data frame — firstPosixColumn","text":"x data frame find column class \"POSIXt\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/frenchToAscii.html","id":null,"dir":"Reference","previous_headings":"","what":"French Unicode Letter to ASCII Letter(s) — frenchToAscii","title":"French Unicode Letter to ASCII Letter(s) — frenchToAscii","text":"French Unicode Letter ASCII Letter(s)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/frenchToAscii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"French Unicode Letter to ASCII Letter(s) — frenchToAscii","text":"","code":"frenchToAscii()"},{"path":"https://kwb-r.github.io/kwb.utils/reference/frenchToAscii.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"French Unicode Letter to ASCII Letter(s) — frenchToAscii","text":"list ASCII characters (list elements) replacing unicode characters   (element names)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/frequencyTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of value occurrences in columns — frequencyTable","title":"Number of value occurrences in columns — frequencyTable","text":"Counts number occurrences different values column data frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/frequencyTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of value occurrences in columns — frequencyTable","text":"","code":"frequencyTable(   data,   columns = names(data),   orderByLeastLevels = TRUE,   as.data.frame = TRUE,   useNA = c(\"no\", \"ifany\", \"always\")[2] )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/frequencyTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of value occurrences in columns — frequencyTable","text":"data data frame columns columns data included frequency analysis. Default: columns data orderByLeastLevels TRUE (default) list elements output list represents one column data sections rows output data frame orderd length(unique(data[[column]])) .data.frame TRUE (default) result data frame, otherwise list (see ) useNA passed table see . Default: \"ifany\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/frequencyTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of value occurrences in columns — frequencyTable","text":".data.frame = FALSE list data frames    represents frequency statistics one column data.    data frame columns column (name column data), value (value occurring column data), count (number occurrences). .data.frame = TRUE one   data frame result rbind-ing together data frames.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/frequencyTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of value occurrences in columns — frequencyTable","text":"","code":"# Some example data (data <- data.frame(   A = c(\"a1\", \"a2\", \"a1\", \"a1\", \"a2\", \"\", \"a2\", NA, \"a1\"),   B = c(\"b1\", \"b1\", NA, \"b2\", \"b2\", \"b1\", \" \", \"b3\", \"b2\") )) #>      A    B #> 1   a1   b1 #> 2   a2   b1 #> 3   a1 <NA> #> 4   a1   b2 #> 5   a2   b2 #> 6        b1 #> 7   a2      #> 8 <NA>   b3 #> 9   a1   b2  frequencyTable(data) # results in a data frame #>   column value count #> 1      A    a1     4 #> 2      A    a2     3 #> 3      A           1 #> 4      A  <NA>     1 #> 5      B    b1     3 #> 6      B    b2     3 #> 7      B           1 #> 8      B    b3     1 #> 9      B  <NA>     1  frequencyTable(data, as.data.frame = FALSE) # results in a list #> $A #>   column value count #> 1      A    a1     4 #> 2      A    a2     3 #> 3      A           1 #> 4      A  <NA>     1 #>  #> $B #>   column value count #> 1      B    b1     3 #> 2      B    b2     3 #> 3      B           1 #> 4      B    b3     1 #> 5      B  <NA>     1 #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/fullySorted.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort a Data Frame by all of its Columns — fullySorted","title":"Sort a Data Frame by all of its Columns — fullySorted","text":"Sort Data Frame Columns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/fullySorted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort a Data Frame by all of its Columns — fullySorted","text":"","code":"fullySorted(x, decreasing = FALSE, ..., renumber.rows = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/fullySorted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort a Data Frame by all of its Columns — fullySorted","text":"x data frame decreasing passed order ... arguments passed order renumber.rows TRUE (default) rows returned data frame renumbered 1 number rows x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/fullySorted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sort a Data Frame by all of its Columns — fullySorted","text":"","code":"fullySorted(head(iris)) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          4.6         3.1          1.5         0.2  setosa #> 2          4.7         3.2          1.3         0.2  setosa #> 3          4.9         3.0          1.4         0.2  setosa #> 4          5.0         3.6          1.4         0.2  setosa #> 5          5.1         3.5          1.4         0.2  setosa #> 6          5.4         3.9          1.7         0.4  setosa fullySorted(head(iris), decreasing = TRUE) #>   Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> 1          5.4         3.9          1.7         0.4  setosa #> 2          5.1         3.5          1.4         0.2  setosa #> 3          5.0         3.6          1.4         0.2  setosa #> 4          4.9         3.0          1.4         0.2  setosa #> 5          4.7         3.2          1.3         0.2  setosa #> 6          4.6         3.1          1.5         0.2  setosa fullySorted(head(iris[, 5:1])) #>   Species Petal.Width Petal.Length Sepal.Width Sepal.Length #> 1  setosa         0.2          1.3         3.2          4.7 #> 2  setosa         0.2          1.4         3.0          4.9 #> 3  setosa         0.2          1.4         3.5          5.1 #> 4  setosa         0.2          1.4         3.6          5.0 #> 5  setosa         0.2          1.5         3.1          4.6 #> 6  setosa         0.4          1.7         3.9          5.4 fullySorted(head(iris[, 5:1]), decreasing = TRUE) #>   Species Petal.Width Petal.Length Sepal.Width Sepal.Length #> 1  setosa         0.4          1.7         3.9          5.4 #> 2  setosa         0.2          1.5         3.1          4.6 #> 3  setosa         0.2          1.4         3.6          5.0 #> 4  setosa         0.2          1.4         3.5          5.1 #> 5  setosa         0.2          1.4         3.0          4.9 #> 6  setosa         0.2          1.3         3.2          4.7"},{"path":"https://kwb-r.github.io/kwb.utils/reference/generateKeyFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a Decryption Key File — generateKeyFile","title":"Generate a Decryption Key File — generateKeyFile","text":"Generate Decryption Key File","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/generateKeyFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a Decryption Key File — generateKeyFile","text":"","code":"generateKeyFile(target)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/generateKeyFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a Decryption Key File — generateKeyFile","text":"target full path file key shall written","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/getAttribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Safely get the Attribute of an Object — getAttribute","title":"Safely get the Attribute of an Object — getAttribute","text":"Safely get attribute object. error given attribute  exist (.stop = TRUE)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getAttribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Safely get the Attribute of an Object — getAttribute","text":"","code":"getAttribute(x, attributeName, do.stop = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getAttribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Safely get the Attribute of an Object — getAttribute","text":"x object take attribute attributeName name attribute returned .stop TRUE (default) error raised attribute exist.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getAttribute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Safely get the Attribute of an Object — getAttribute","text":"","code":"x <- structure(1, a = 2) # getAttribute(x, \"b\") # gives a clear error message identical(getAttribute(x, \"a\"), attr(x, \"a\")) # is TRUE #> [1] TRUE  # Get an attribute's attribute by means of a \"path\" notation y <- structure(1, a = structure(2, b = 3)) z <- structure(4, y = y)  str(y) #>  num 1 #>  - attr(*, \"a\")= num 2 #>   ..- attr(*, \"b\")= num 3 str(z) #>  num 4 #>  - attr(*, \"y\")= num 1 #>   ..- attr(*, \"a\")= num 2 #>   .. ..- attr(*, \"b\")= num 3  kwb.utils::getAttribute(y, \"a/b\") #> [1] 3 kwb.utils::getAttribute(z, \"y/a/b\") #> [1] 3"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getByPositiveOrNegativeIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Vector Elements by Positive or Negative Index — getByPositiveOrNegativeIndex","title":"Get Vector Elements by Positive or Negative Index — getByPositiveOrNegativeIndex","text":"Get element vector, counting head tail","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getByPositiveOrNegativeIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Vector Elements by Positive or Negative Index — getByPositiveOrNegativeIndex","text":"","code":"getByPositiveOrNegativeIndex(elements, index)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getByPositiveOrNegativeIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Vector Elements by Positive or Negative Index — getByPositiveOrNegativeIndex","text":"elements vector elements index positive negative index(es) absolute value 1 length(elements)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getByPositiveOrNegativeIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Vector Elements by Positive or Negative Index — getByPositiveOrNegativeIndex","text":"element(s) elements corresponding index(es)   given index","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getElementLengths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Lenghts of List Elements — getElementLengths","title":"Get the Lenghts of List Elements — getElementLengths","text":"Get Lenghts List Elements","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getElementLengths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Lenghts of List Elements — getElementLengths","text":"","code":"getElementLengths(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getElementLengths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Lenghts of List Elements — getElementLengths","text":"x list","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getElementLengths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Lenghts of List Elements — getElementLengths","text":"vector integer","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getElementLengths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the Lenghts of List Elements — getElementLengths","text":"","code":"x <- list(a = 1:3, b = list(x = 1, y = 2), c = 1:100) getElementLengths(x) #>   a   b   c  #>   3   2 100"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getEvenNumbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get even Numbers out of a Vector of Integers — getEvenNumbers","title":"Get even Numbers out of a Vector of Integers — getEvenNumbers","text":"Get even Numbers Vector Integers","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getEvenNumbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get even Numbers out of a Vector of Integers — getEvenNumbers","text":"","code":"getEvenNumbers(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getEvenNumbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get even Numbers out of a Vector of Integers — getEvenNumbers","text":"x vector integer","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getFunctionValueOrDefault.html","id":null,"dir":"Reference","previous_headings":"","what":"Function Value or Default if NA — getFunctionValueOrDefault","title":"Function Value or Default if NA — getFunctionValueOrDefault","text":"Take function value default value function value NA","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getFunctionValueOrDefault.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function Value or Default if NA — getFunctionValueOrDefault","text":"","code":"getFunctionValueOrDefault(values, FUN, default, warningMessage = NA)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getFunctionValueOrDefault.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function Value or Default if NA — getFunctionValueOrDefault","text":"values vector values given FUN FUN function values passed offers argument \"na.rm\" default default value returned values NA warningMessage Warning message given default taken","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getGlobally.html","id":null,"dir":"Reference","previous_headings":"","what":"getGlobally — getGlobally","title":"getGlobally — getGlobally","text":"gat variable .GlobalEnv","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getGlobally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"getGlobally — getGlobally","text":"","code":"getGlobally(x, default = NULL, create.if.not.existing = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getGlobally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"getGlobally — getGlobally","text":"x name variable default default value variable assigned (create...existing = TRUE) case yet exist. Default: NULL create...existing TRUE variable yet exist, created initialised value given default. Default: TRUE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getKeywordPositions.html","id":null,"dir":"Reference","previous_headings":"","what":"Localise Keywords in Data Frame — getKeywordPositions","title":"Localise Keywords in Data Frame — getKeywordPositions","text":"Localise Keywords Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getKeywordPositions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Localise Keywords in Data Frame — getKeywordPositions","text":"","code":"getKeywordPositions(dataFrame, keywords, asDataFrame = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getKeywordPositions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Localise Keywords in Data Frame — getKeywordPositions","text":"dataFrame data frame matrix search given keywords keywords (list ) keywords looked data frame asDataFrame TRUE (default), data frame returned, otherwise matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getKeywordPositions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Localise Keywords in Data Frame — getKeywordPositions","text":"data frame (asDataFrame = TRUE) matrix one column   per keyword given keywords. first row contains   row numbers second row contains column numbers, respectively,   fields dataFrame corresponding keywords    found.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getNamesOfObjectsInRDataFiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated. Use listObjects instead. — getNamesOfObjectsInRDataFiles","title":"Deprecated. Use listObjects instead. — getNamesOfObjectsInRDataFiles","text":"Deprecated. Use listObjects instead.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getNamesOfObjectsInRDataFiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated. Use listObjects instead. — getNamesOfObjectsInRDataFiles","text":"","code":"getNamesOfObjectsInRDataFiles(files.rdata)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getNamesOfObjectsInRDataFiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated. Use listObjects instead. — getNamesOfObjectsInRDataFiles","text":"files.rdata vector full paths .RData files","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getObjectFromRDataFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated. Please use loadObject instead. — getObjectFromRDataFile","title":"Deprecated. Please use loadObject instead. — getObjectFromRDataFile","text":"Deprecated. Please use loadObject instead.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getObjectFromRDataFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated. Please use loadObject instead. — getObjectFromRDataFile","text":"","code":"getObjectFromRDataFile(file, objectname = NULL, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getObjectFromRDataFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated. Please use loadObject instead. — getObjectFromRDataFile","text":"file path .RData file objectname name object loaded dbg TRUE message object loaded  file shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getObjectFromRDataFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated. Please use loadObject instead. — getObjectFromRDataFile","text":"R object specified objectname. object name   exist .RData file error thrown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getOddNumbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get odd Numbers out of a Vector of Integers — getOddNumbers","title":"Get odd Numbers out of a Vector of Integers — getOddNumbers","text":"Get odd Numbers Vector Integers","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getOddNumbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get odd Numbers out of a Vector of Integers — getOddNumbers","text":"","code":"getOddNumbers(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getOddNumbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get odd Numbers out of a Vector of Integers — getOddNumbers","text":"x vector integer","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getPassword.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Encrypted Password from File Using Key — getPassword","title":"Get Encrypted Password from File Using Key — getPassword","text":"Given path file containing encrypted password given path file containing key used encryption  function returns original password, invisibly.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getPassword.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Encrypted Password from File Using Key — getPassword","text":"","code":"getPassword(passwordFile, keyFile)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getPassword.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Encrypted Password from File Using Key — getPassword","text":"passwordFile path password file, generated  createPasswordFile. keyFile path key file, generated  generateKeyFile.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getPassword.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Encrypted Password from File Using Key — getPassword","text":"password (character) NA password stored,   invisibly.","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/getPathsAndValuesFromRecursiveList.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Paths and String Values from Recursive List — getPathsAndValuesFromRecursiveList","title":"Get Paths and String Values from Recursive List — getPathsAndValuesFromRecursiveList","text":"Get Paths String Values Recursive List","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getPathsAndValuesFromRecursiveList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Paths and String Values from Recursive List — getPathsAndValuesFromRecursiveList","text":"","code":"getPathsAndValuesFromRecursiveList(x, path = \"\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getPathsAndValuesFromRecursiveList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Paths and String Values from Recursive List — getPathsAndValuesFromRecursiveList","text":"x list path start path","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getPathsAndValuesFromRecursiveList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Paths and String Values from Recursive List — getPathsAndValuesFromRecursiveList","text":"data frame columns path value.  data frame contains non-list elements contained x,  coerced character, column value, together sequence element names \"leading\" value starting x. example, path element x$$a1 //a1 (see example).","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getPathsAndValuesFromRecursiveList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Paths and String Values from Recursive List — getPathsAndValuesFromRecursiveList","text":"","code":"# Define a recursive list x <- list(   a = list(a1 = \"A1\", a2 = \"A2\"),   b = list(b1 = \"B1\", b2 = \"B2\", b3 = \"B3\"),   c = list(c1 = list(c11 = \"C11\"), c2 = list(c21 = \"C21\", c22 = \"C22\")) )  # Get all non-list-elements and their \"path\" as a data frame getPathsAndValuesFromRecursiveList(x) #>       path value #> 1     a/a1    A1 #> 2     a/a2    A2 #> 3     b/b1    B1 #> 4     b/b2    B2 #> 5     b/b3    B3 #> 6 c/c1/c11   C11 #> 7 c/c2/c21   C21 #> 8 c/c2/c22   C22"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getTagNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Find <tag>-tags in string — getTagNames","title":"Find <tag>-tags in string — getTagNames","text":"Return tags form <tag> contained string x.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/getTagNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find <tag>-tags in string — getTagNames","text":"","code":"getTagNames(x, bt = c(\"<>\", \"[]\")[1], dbg = FALSE, expected.length = length(x))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/getTagNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find <tag>-tags in string — getTagNames","text":"x vector character bt bracket type, must one c(\"<>\", \"[]\"). Default: \"<>\" dbg TRUE (default FALSE) debug messages shown expected.length given different length x error thrown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/get_homedir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get File Path of User's Home Directory — get_homedir","title":"Get File Path of User's Home Directory — get_homedir","text":"Get File Path User's Home Directory","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/get_homedir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get File Path of User's Home Directory — get_homedir","text":"","code":"get_homedir(osType = .OStype())"},{"path":"https://kwb-r.github.io/kwb.utils/reference/get_homedir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get File Path of User's Home Directory — get_homedir","text":"osType Optional. Type operating system, one \"unix\", \"windows\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/get_homedir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get File Path of User's Home Directory — get_homedir","text":"path user's home directory windows (full path home directory   path without '/Documents') linux","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/guessSeparator.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess Column Separator Used in File — guessSeparator","title":"Guess Column Separator Used in File — guessSeparator","text":"Guess Column Separator Used File","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/guessSeparator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess Column Separator Used in File — guessSeparator","text":"","code":"guessSeparator(csvFile, n = 10, separators = c(\";\", \",\", \"\\t\"))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/guessSeparator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess Column Separator Used in File — guessSeparator","text":"csvFile full path text file containing 'comma separated values' n number first lines file looked separators vector possible column separator characters file checked ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hasFinalSlash.html","id":null,"dir":"Reference","previous_headings":"","what":"Does a String End with Slash? — hasFinalSlash","title":"Does a String End with Slash? — hasFinalSlash","text":"String End Slash?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hasFinalSlash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does a String End with Slash? — hasFinalSlash","text":"","code":"hasFinalSlash(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hasFinalSlash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does a String End with Slash? — hasFinalSlash","text":"x vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hasFinalSlash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does a String End with Slash? — hasFinalSlash","text":"vector boolean TRUE indices elements x end slash (\"/\")","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hasFinalSlash.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does a String End with Slash? — hasFinalSlash","text":"","code":"(is_directory <- hasFinalSlash(c(\"a\", \"b/\", \"c\", \"d/\"))) #> [1] FALSE  TRUE FALSE  TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/headtail.html","id":null,"dir":"Reference","previous_headings":"","what":"Print First and Last Rows of a Data Frame — headtail","title":"Print First and Last Rows of a Data Frame — headtail","text":"Print first last rows data frame using head tail,  respectively. Print number omitted rows","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/headtail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print First and Last Rows of a Data Frame — headtail","text":"","code":"headtail(x, n = 6, pattern = \"[%d rows omitted]\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/headtail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print First and Last Rows of a Data Frame — headtail","text":"x data frame n total number rows printed. pattern pattern given sprintf containing %d placeholder print number omitted rows","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/headtail.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print First and Last Rows of a Data Frame — headtail","text":"number omitted rows, invisibly","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/headtail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print First and Last Rows of a Data Frame — headtail","text":"","code":"x <- data.frame(number = 1:26, letter = LETTERS) headtail(x) #>   number letter #> 1      1      A #> 2      2      B #> 3      3      C #> [20 rows omitted]  #>    number letter #> 24     24      X #> 25     25      Y #> 26     26      Z headtail(x, 10) #>   number letter #> 1      1      A #> 2      2      B #> 3      3      C #> 4      4      D #> 5      5      E #> [16 rows omitted]  #>    number letter #> 22     22      V #> 23     23      W #> 24     24      X #> 25     25      Y #> 26     26      Z headtail(x, 16) #>   number letter #> 1      1      A #> 2      2      B #> 3      3      C #> 4      4      D #> 5      5      E #> 6      6      F #> 7      7      G #> 8      8      H #> [10 rows omitted]  #>    number letter #> 19     19      S #> 20     20      T #> 21     21      U #> 22     22      V #> 23     23      W #> 24     24      X #> 25     25      Y #> 26     26      Z headtail(x[10:20, ], 10) #>    number letter #> 10     10      J #> 11     11      K #> 12     12      L #> 13     13      M #> 14     14      N #> [1 rows omitted]  #>    number letter #> 16     16      P #> 17     17      Q #> 18     18      R #> 19     19      S #> 20     20      T"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsAddMissingCols.html","id":null,"dir":"Reference","previous_headings":"","what":"Add missing Columns to a Data Frame — hsAddMissingCols","title":"Add missing Columns to a Data Frame — hsAddMissingCols","text":"Adds missing columns given data frame resulting data frame contains columns given vector colNames. Added columns filled NA values.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsAddMissingCols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add missing Columns to a Data Frame — hsAddMissingCols","text":"","code":"hsAddMissingCols(dataFrame, colNames, fill.value = NA)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsAddMissingCols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add missing Columns to a Data Frame — hsAddMissingCols","text":"dataFrame data frame column names appended colNames vector containing names columns shall contained dataFrame fill.value value inserted newly created columns. Default: NA","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsAddMissingCols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add missing Columns to a Data Frame — hsAddMissingCols","text":"data frame columns listed colNames","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsChrToNum.html","id":null,"dir":"Reference","previous_headings":"","what":"Character to Numeric — hsChrToNum","title":"Character to Numeric — hsChrToNum","text":"Conversion text representing number valid number","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsChrToNum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Character to Numeric — hsChrToNum","text":"","code":"hsChrToNum(x, country, stopOnError = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsChrToNum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Character to Numeric — hsChrToNum","text":"x (vector ) text value(s) converted numeric country \"en\" value(s) x ()  given English format (decimal point \".\", thousands separator \",\") \"de\" value given German format (decimal point \",\", thousands separator \".\"). stopOnError TRUE (default) program stops given values converted.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsChrToNum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Character to Numeric — hsChrToNum","text":"vector numeric(s). case conversion function stops ( stopOnError = TRUE) returns NA indices   conversion failed. latter case attribute \"errorIndices\"    containing corresponding indices assigned result vector.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsCountInStr.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Pattern in String — hsCountInStr","title":"Count Pattern in String — hsCountInStr","text":"Count occurrences chr str","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsCountInStr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Pattern in String — hsCountInStr","text":"","code":"hsCountInStr(chr, str)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsCountInStr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Pattern in String — hsCountInStr","text":"chr character string (pattern) looked counted  str str character string count chr","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsCountInStr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Pattern in String — hsCountInStr","text":"number occurrences char str","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsDelEmptyCols.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete empty Columns of Data Frame — hsDelEmptyCols","title":"Delete empty Columns of Data Frame — hsDelEmptyCols","text":"Returns data frame empty columns (NA rows) removed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsDelEmptyCols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete empty Columns of Data Frame — hsDelEmptyCols","text":"","code":"hsDelEmptyCols(dataFrame, FUN = function(x) all(is.na(x)), drop = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsDelEmptyCols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete empty Columns of Data Frame — hsDelEmptyCols","text":"dataFrame data frame empty columns (NA rows) removed FUN function applied column decide whether column empty . Default: function(x) (.na(x)) drop TRUE (default FALSE) one dimension  dropped (vector returned instead data frame) case  one columns removed.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsDelEmptyCols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete empty Columns of Data Frame — hsDelEmptyCols","text":"copy input data frame empty columns removed","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsMatrixToListForm.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert ","title":"Convert ","text":"Converts data frame \"matrix form\" data frame \"list form\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsMatrixToListForm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert ","text":"","code":"hsMatrixToListForm(   df,   keyFields,   parFields = setdiff(names(df), keyFields),   colNamePar = \"parName\",   colNameVal = \"parVal\",   stringsAsFactors = FALSE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsMatrixToListForm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert ","text":"df data frame keyFields names key fields (e.g. date/time) parFields names fields representing differen parameters. Default: column names keyFields colNamePar name column result data frame contain parameter names colNameVal name column result data frame contain parameter values stringsAsFactors TRUE, columns type character result data frame converted factors. Parameter passed cbind, rbind.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsMatrixToListForm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert ","text":"data frame \"list form\" (long format)","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsMovingMean.html","id":null,"dir":"Reference","previous_headings":"","what":"Moving Mean — hsMovingMean","title":"Moving Mean — hsMovingMean","text":"Calculate moving mean n values \"around\" values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsMovingMean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Moving Mean — hsMovingMean","text":"","code":"hsMovingMean(x, n, na.rm = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsMovingMean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Moving Mean — hsMovingMean","text":"x vector values moving mean calculated n number values \"around\" values x, including values x, mean calculated. odd numbers 1, 3, 5, ... allowed. x[] x moving mean calculated :  (x[-(n-1)/2] + ... + x[-1] + x[] + x[+1] + ... + x[+(n-1)/2]) / n na.rm logical. missing values (including NaN) omitted calculations?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsMovingMean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Moving Mean — hsMovingMean","text":"Vector moving means number values x. na.rm FALSE, first (n-1)/2 values last  (n-1)/2 values NA since enough values start   end vector calculate mean.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsMovingMean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Moving Mean — hsMovingMean","text":"","code":"x <- rnorm(30)  plot(x, type = \"b\", main = \"Moving mean over 3, 5, 7 points\")  times <- 2:4  for (i in times) {   lines(hsMovingMean(x, n = 2*i - 1), col = i, type = \"b\", lwd =  2) }  legend(\"topright\", fill = times, legend = sprintf(\"n = %d\", 2*times - 1))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsOpenWindowsExplorer.html","id":null,"dir":"Reference","previous_headings":"","what":"Open Windows Explorer — hsOpenWindowsExplorer","title":"Open Windows Explorer — hsOpenWindowsExplorer","text":"Open Windows Explorer","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsOpenWindowsExplorer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open Windows Explorer — hsOpenWindowsExplorer","text":"","code":"hsOpenWindowsExplorer(   startdir = tempdir(),   use.shell.exec = !.isNetworkPath(startdir) )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsOpenWindowsExplorer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open Windows Explorer — hsOpenWindowsExplorer","text":"startdir directory opened Windows Explorer use.shell.exec TRUE shell.exec used instead running system command cmd /C explorer","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsPrepPdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Writing of PDF File — hsPrepPdf","title":"Prepare Writing of PDF File — hsPrepPdf","text":"Deprecated. Please use preparePdf instead.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsPrepPdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Writing of PDF File — hsPrepPdf","text":"","code":"hsPrepPdf(   strPdf = tempfile(fileext = \".pdf\"),   boolLandscape = TRUE,   bordW = 2,   bordH = 2,   makeCur = TRUE,   ... )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsPrepPdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Writing of PDF File — hsPrepPdf","text":"strPdf see argument pdfFile preparePdf boolLandscape see argument landscape preparePdf bordW see argument borderWidth.cm preparePdf bordH see argument borderHeight.cm preparePdf makeCur see argument makeCurrent preparePdf ... see ... preparePdf","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsQuoteChr.html","id":null,"dir":"Reference","previous_headings":"","what":"Quote Character Strings — hsQuoteChr","title":"Quote Character Strings — hsQuoteChr","text":"quotes objects type character quoting character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsQuoteChr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quote Character Strings — hsQuoteChr","text":"","code":"hsQuoteChr(x, qchar = \"'\", escapeMethod = c(\"double\", \"backslash\", \"none\"))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsQuoteChr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quote Character Strings — hsQuoteChr","text":"x vector list character strings qchar quoting character used. Default: single quote \"'\" escapeMethod one \"double\", \"backslash\", \"none\" deciding treat quote character occurs within string quoted","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsRenameColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Columns in a Data Frame (deprecated) — hsRenameColumns","title":"Rename Columns in a Data Frame (deprecated) — hsRenameColumns","text":"Rename Columns Data Frame (deprecated, use renameColumns instead)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsRenameColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Columns in a Data Frame (deprecated) — hsRenameColumns","text":"","code":"hsRenameColumns(dframe, renames)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsRenameColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Columns in a Data Frame (deprecated) — hsRenameColumns","text":"dframe data.frame renames list named elements defines column rename form <old-name> = <new-name>","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsResolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve Placeholders in Dictionary — hsResolve","title":"Resolve Placeholders in Dictionary — hsResolve","text":"Resolve strings according substitutions defined dictionary","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsResolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve Placeholders in Dictionary — hsResolve","text":"","code":"hsResolve(x, dict = NULL, ..., dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsResolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve Placeholders in Dictionary — hsResolve","text":"x (vector ) string expression(s) resolved using dictionary dict. dict dictionary: list named elements element name represents key element value represents value assigned key. ... additional named arguments added dict resolving dbg TRUE (default FALSE) debug messages  shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsResolve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resolve Placeholders in Dictionary — hsResolve","text":"(resolved) value returned","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsRestoreAttributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Restore Object Attributes — hsRestoreAttributes","title":"Restore Object Attributes — hsRestoreAttributes","text":"Restore given attributes object attributes ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsRestoreAttributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Restore Object Attributes — hsRestoreAttributes","text":"","code":"hsRestoreAttributes(x, attribs)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsRestoreAttributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Restore Object Attributes — hsRestoreAttributes","text":"x object attribs former attributes x (retrieved attributes(x)) restored","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSafeName.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-existing desired name — hsSafeName","title":"Non-existing desired name — hsSafeName","text":"Returns name yet contained vector myNames   existing names.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSafeName.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-existing desired name — hsSafeName","text":"","code":"hsSafeName(myName, myNames)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSafeName.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Non-existing desired name — hsSafeName","text":"myName desired name. myNames vector existing names.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSafeName.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Non-existing desired name — hsSafeName","text":"myName contained myNames returned.   Otherwise myName modified myName_01, myName_02,   ... non-existing name found returned.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSafeName.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Non-existing desired name — hsSafeName","text":"","code":"existing <- c(\"a\", \"b\") myName <- hsSafeName(\"c\", existing) myName                               # \"c\" #> [1] \"c\" myName <- hsSafeName(\"a\", existing) myName                               # \"a_1\" #> [1] \"a_1\" hsSafeName(\"a\", c(existing, myName)) # \"a_2\" #> [1] \"a_2\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsShell.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around ","title":"Wrapper around ","text":"Wrapper around \"shell\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsShell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around ","text":"","code":"hsShell(commandLine, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsShell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around ","text":"commandLine character string passed shell ... additional arguments passed shell","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsShowPdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Open PDF file in PDF viewer — hsShowPdf","title":"Open PDF file in PDF viewer — hsShowPdf","text":"Opens PDF file full path given Pdf   PDF viewer.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsShowPdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open PDF file in PDF viewer — hsShowPdf","text":"","code":"hsShowPdf(Pdf, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsShowPdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open PDF file in PDF viewer — hsShowPdf","text":"Pdf full path PDF file dbg TRUE (default) command used open PDF file shown","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsShowPdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open PDF file in PDF viewer — hsShowPdf","text":"","code":"# Set path to PDF file and open PDF device tmpPdf <- tempfile(\"ex_hsFinishPdf\", fileext = \".pdf\")   preparePdf(tmpPdf) #> [1] \"/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpmFnsry/ex_hsFinishPdfab75d2cdbfd.pdf\"  # Plot something plot(x <- seq(-pi,pi,pi/100), sin(x), type = \"l\")  # Finish PDF file. grDevices::dev.off() #> agg_png  #>       2   if (FALSE) { # Open PDF file in viewer. hsShowPdf(tmpPdf) }"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsStringToDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert String to Date — hsStringToDate","title":"Convert String to Date — hsStringToDate","text":"Convert date string string stop failure","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsStringToDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert String to Date — hsStringToDate","text":"","code":"hsStringToDate(strDate, dateFormat)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsStringToDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert String to Date — hsStringToDate","text":"strDate (vector ) string(s) representing date(s) dateFormat date format specifier describing format dates represented csv file. Use placeholders , \"%d\" (day),  \"%m\" (month), \"%y\" (2-digit year), \"%Y\" (4-digit year) describe date format. \"%d.%m.%Y\",  \"%d/%m/%y\", \"%Y-%m-%d\" examples valid format specifiers.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsStringToDate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert String to Date — hsStringToDate","text":"(vector ) Date object(s)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsStringToDouble.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert String to Double — hsStringToDouble","title":"Convert String to Double — hsStringToDouble","text":"Convert string double considering given decimal sign input string","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsStringToDouble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert String to Double — hsStringToDouble","text":"","code":"hsStringToDouble(strDbl, dec = \".\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsStringToDouble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert String to Double — hsStringToDouble","text":"strDbl character string representing double value dec decimal character (default: \".\")","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsStringToDouble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert String to Double — hsStringToDouble","text":"double representation input string strDbl","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSubstSpecChars.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated. Use substSpecialChars instead. — hsSubstSpecChars","title":"Deprecated. Use substSpecialChars instead. — hsSubstSpecChars","text":"Deprecated. Use substSpecialChars instead.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSubstSpecChars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated. Use substSpecialChars instead. — hsSubstSpecChars","text":"","code":"hsSubstSpecChars(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSubstSpecChars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deprecated. Use substSpecialChars instead. — hsSubstSpecChars","text":"x string containing special characters substituted","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSubstSpecChars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated. Use substSpecialChars instead. — hsSubstSpecChars","text":"input string x special characters substituted    meaningful represenation underscore, multiple underscores replaced   single underscore multiple underscores end removed.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around ","title":"Wrapper around ","text":"Wrapper around \"system\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around ","text":"","code":"hsSystem(commandLine, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around ","text":"commandLine character string passed system ... additional arguments passed system","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsTrim.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Leading and Trailing Spaces — hsTrim","title":"Remove Leading and Trailing Spaces — hsTrim","text":"Remove leading, trailing (, requested, duplicate) spaces","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsTrim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Leading and Trailing Spaces — hsTrim","text":"","code":"hsTrim(str, trim.multiple.spaces = TRUE, dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsTrim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Leading and Trailing Spaces — hsTrim","text":"str vector character containing strings trimmed trim.multiple.spaces TRUE (default), multiple consecutive spaces replaced one space dbg TRUE (default FALSE) debut messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsTrim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Leading and Trailing Spaces — hsTrim","text":"input string str without leading trailing spaces   multiple consecutive spaces replaced single space","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsValidValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Value in Correct English/German Notation? — hsValidValue","title":"Value in Correct English/German Notation? — hsValidValue","text":"Returns TRUE text representation number correct format    terms decimal character (optionally) thousand's separator character.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsValidValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value in Correct English/German Notation? — hsValidValue","text":"","code":"hsValidValue(x, lng, dbg = FALSE, accept.na = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/hsValidValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Value in Correct English/German Notation? — hsValidValue","text":"x vector character strings lng language code: \"en\" English \"de\" German dbg TRUE (default FALSE) debug messages shown accept.na TRUE (default) TRUE returned  NA values within x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/inRange.html","id":null,"dir":"Reference","previous_headings":"","what":"check for values within minimum and maximum value — inRange","title":"check for values within minimum and maximum value — inRange","text":"check values within minimum maximum value","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/inRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check for values within minimum and maximum value — inRange","text":"","code":"inRange(values, min.value, max.value, rng = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/inRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check for values within minimum and maximum value — inRange","text":"values vector values min.value minimum value (inclusive) max.value maximum value (inclusive) rng optional. Vector two elements representing min.value max.value, respectively","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/inRange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check for values within minimum and maximum value — inRange","text":"vector boolean","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/indent.html","id":null,"dir":"Reference","previous_headings":"","what":"Indentat a String (Add Spaces to the Left) — indent","title":"Indentat a String (Add Spaces to the Left) — indent","text":"Indentat String (Add Spaces Left)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/indent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indentat a String (Add Spaces to the Left) — indent","text":"","code":"indent(x, depth = 0L, tabLength = 2L)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/indent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indentat a String (Add Spaces to the Left) — indent","text":"x vector character depth indentation level. Default: 0 tabLength number spaces per indentation level. Default: 2","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/insertColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert new Column(s) into a Data Frame — insertColumns","title":"Insert new Column(s) into a Data Frame — insertColumns","text":"Insert one new columns data frame given  column","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/insertColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert new Column(s) into a Data Frame — insertColumns","text":"","code":"insertColumns(   Data,   ...,   before = \"\",   after = \"\",   stringsAsFactors = defaultIfNULL(options()$stringsAsFactors, FALSE) )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/insertColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert new Column(s) into a Data Frame — insertColumns","text":"Data data frame ... named objects new column data frame. object must many elements Data rows. name column insert new column(s) name column insert new column(s) stringsAsFactors passed data.frame() cbind()","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/insertColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert new Column(s) into a Data Frame — insertColumns","text":"data frame Data new columns inserted column   named given column named given  ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/insertColumns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert new Column(s) into a Data Frame — insertColumns","text":"","code":"Data <- data.frame(A = 1:5, B = 2:6)  # Insert new columns X and Y before column \"B\" insertColumns(Data, before = \"B\", X = paste0(\"x\", 1:5), Y = paste0(\"y\", 1:5)) #>   A  X  Y B #> 1 1 x1 y1 2 #> 2 2 x2 y2 3 #> 3 3 x3 y3 4 #> 4 4 x4 y4 5 #> 5 5 x5 y5 6  # This is the same as inserting new columns X and Y after column \"A\": insertColumns(Data, after = \"A\", X = paste0(\"x\", 1:5), Y = paste0(\"y\", 1:5)) #>   A  X  Y B #> 1 1 x1 y1 2 #> 2 2 x2 y2 3 #> 3 3 x3 y3 4 #> 4 4 x4 y4 5 #> 5 5 x5 y5 6  # You may also insert before the first... insertColumns(Data, before = \"A\", X = paste0(\"x\", 1:5), Y = paste0(\"y\", 1:5)) #>    X  Y A B #> 1 x1 y1 1 2 #> 2 x2 y2 2 3 #> 3 x3 y3 3 4 #> 4 x4 y4 4 5 #> 5 x5 y5 5 6  # ... or after the last column insertColumns(Data, after = \"B\", X = paste0(\"x\", 1:5), Y = paste0(\"y\", 1:5)) #>   A B  X  Y #> 1 1 2 x1 y1 #> 2 2 3 x2 y2 #> 3 3 4 x3 y3 #> 4 4 5 x4 y4 #> 5 5 6 x5 y5"},{"path":"https://kwb-r.github.io/kwb.utils/reference/intToNumeralSystem.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Integers to Numeral System — intToNumeralSystem","title":"Convert Integers to Numeral System — intToNumeralSystem","text":"Convert Integers Numeral System","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/intToNumeralSystem.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Integers to Numeral System — intToNumeralSystem","text":"","code":"intToNumeralSystem(x, base)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/intToNumeralSystem.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Integers to Numeral System — intToNumeralSystem","text":"x vector integers base base numeral system","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/intToNumeralSystem.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Integers to Numeral System — intToNumeralSystem","text":"matrix many rows elements x    many columns digits required represent integers  x numeral system base base. elements  x appear row names whereas powers base appear   column names.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/intToNumeralSystem.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Integers to Numeral System — intToNumeralSystem","text":"","code":"intToNumeralSystem(1:16, base = 2) # binary system #>    16 8 4 2 1 #> 1   0 0 0 0 1 #> 2   0 0 0 1 0 #> 3   0 0 0 1 1 #> 4   0 0 1 0 0 #> 5   0 0 1 0 1 #> 6   0 0 1 1 0 #> 7   0 0 1 1 1 #> 8   0 1 0 0 0 #> 9   0 1 0 0 1 #> 10  0 1 0 1 0 #> 11  0 1 0 1 1 #> 12  0 1 1 0 0 #> 13  0 1 1 0 1 #> 14  0 1 1 1 0 #> 15  0 1 1 1 1 #> 16  1 0 0 0 0 intToNumeralSystem(1:16, base = 10) # decimal system #>    10 1 #> 1   0 1 #> 2   0 2 #> 3   0 3 #> 4   0 4 #> 5   0 5 #> 6   0 6 #> 7   0 7 #> 8   0 8 #> 9   0 9 #> 10  1 0 #> 11  1 1 #> 12  1 2 #> 13  1 3 #> 14  1 4 #> 15  1 5 #> 16  1 6 intToNumeralSystem(1:16, base = 8) # octal system #>    8 1 #> 1  0 1 #> 2  0 2 #> 3  0 3 #> 4  0 4 #> 5  0 5 #> 6  0 6 #> 7  0 7 #> 8  1 0 #> 9  1 1 #> 10 1 2 #> 11 1 3 #> 12 1 4 #> 13 1 5 #> 14 1 6 #> 15 1 7 #> 16 2 0"},{"path":"https://kwb-r.github.io/kwb.utils/reference/is.unnamed.html","id":null,"dir":"Reference","previous_headings":"","what":"Are List Elements Unnamed? — is.unnamed","title":"Are List Elements Unnamed? — is.unnamed","text":"returns vector logical long x holding TRUE indices list element indices named FALSE positions list element indices named.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/is.unnamed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are List Elements Unnamed? — is.unnamed","text":"","code":"is.unnamed(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/is.unnamed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are List Elements Unnamed? — is.unnamed","text":"x list","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/is.unnamed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are List Elements Unnamed? — is.unnamed","text":"vector logical","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/is.unnamed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are List Elements Unnamed? — is.unnamed","text":"","code":"is.unnamed(list(1, b = 2)) # TRUE FALSE #> [1]  TRUE FALSE is.unnamed(list(a = 1, 2)) # FALSE TRUE #> [1] FALSE  TRUE is.unnamed(list()) # logical(0) #> logical(0) is.unnamed(list(a = 1, 2, c = 3)) # FALSE  TRUE FALSE #> [1] FALSE  TRUE FALSE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isASCII.html","id":null,"dir":"Reference","previous_headings":"","what":"Do Strings Consist only of ASCII Characters? — isASCII","title":"Do Strings Consist only of ASCII Characters? — isASCII","text":"code \"stolen\" showNonASCII","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isASCII.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do Strings Consist only of ASCII Characters? — isASCII","text":"","code":"isASCII(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isASCII.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do Strings Consist only of ASCII Characters? — isASCII","text":"x vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isASCII.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do Strings Consist only of ASCII Characters? — isASCII","text":"vector logical TRUE positions x[] contains ASCII characters","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isASCII.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Do Strings Consist only of ASCII Characters? — isASCII","text":"","code":"months <- c(\"Januar\", \"Februar\", \"M\\ue4rz\")  cat(months, \"\\n\") #> Januar Februar März   isASCII(months) #> [1]  TRUE  TRUE FALSE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isDotOrDoubleDot.html","id":null,"dir":"Reference","previous_headings":"","what":"Does a string end with one or two dots (","title":"Does a string end with one or two dots (","text":"string end one two dots (\".\", \"..\")?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isDotOrDoubleDot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does a string end with one or two dots (","text":"","code":"isDotOrDoubleDot(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isDotOrDoubleDot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does a string end with one or two dots (","text":"x vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isDotOrDoubleDot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does a string end with one or two dots (","text":"vector logical","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isDotOrDoubleDot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does a string end with one or two dots (","text":"","code":"isDotOrDoubleDot(c(\"a\", \"b.\", \"c..\", \"d\", \"efg..h\")) #> [1] FALSE  TRUE  TRUE FALSE FALSE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isEvenNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Even Numbers — isEvenNumber","title":"Check for Even Numbers — isEvenNumber","text":"Check Even Numbers","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isEvenNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Even Numbers — isEvenNumber","text":"","code":"isEvenNumber(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isEvenNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Even Numbers — isEvenNumber","text":"x vector numeric","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isLoaded.html","id":null,"dir":"Reference","previous_headings":"","what":"Has a Script Been Loaded (with source)? — isLoaded","title":"Has a Script Been Loaded (with source)? — isLoaded","text":"Check whether script loaded (source) . information  read list stores logical value (TRUE FALSE) script name setLoaded called.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isLoaded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Has a Script Been Loaded (with source)? — isLoaded","text":"","code":"isLoaded(scriptName)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isLoaded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Has a Script Been Loaded (with source)? — isLoaded","text":"scriptName name script get \"loaded\" state","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/isLoaded.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Has a Script Been Loaded (with source)? — isLoaded","text":"","code":"# For an example see kwb.utils::setLoaded()...  # In fact, the information about loaded scripts is stored in the # R option \"kwb.utils.loaded\": setLoaded(\"myScript\")  options(\"kwb.utils.loaded\")[[1]] #> $myScript #> [1] TRUE #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaInAllColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"isNaInAllColumns — isNaInAllColumns","title":"isNaInAllColumns — isNaInAllColumns","text":"isNaInAllColumns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaInAllColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"isNaInAllColumns — isNaInAllColumns","text":"","code":"isNaInAllColumns(dataFrame)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaInAllColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"isNaInAllColumns — isNaInAllColumns","text":"dataFrame data frame matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaInAllColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"isNaInAllColumns — isNaInAllColumns","text":"logical vector many elements rows  dataFrame (TRUE rows elements NA, FALSE   rows least one non-NA element).","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaInAllRows.html","id":null,"dir":"Reference","previous_headings":"","what":"isNaInAllRows — isNaInAllRows","title":"isNaInAllRows — isNaInAllRows","text":"isNaInAllRows","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaInAllRows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"isNaInAllRows — isNaInAllRows","text":"","code":"isNaInAllRows(dataFrame)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaInAllRows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"isNaInAllRows — isNaInAllRows","text":"dataFrame data frame matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaInAllRows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"isNaInAllRows — isNaInAllRows","text":"logical vector many elements columns  dataFrame (TRUE columns elements NA, FALSE   columns least one non-NA element).","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaOrEmpty.html","id":null,"dir":"Reference","previous_headings":"","what":"NA or the empty string ","title":"NA or the empty string ","text":"object NA equal empty string \"\" (trimming)?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaOrEmpty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NA or the empty string ","text":"","code":"isNaOrEmpty(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaOrEmpty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NA or the empty string ","text":"x object tested NA empty (equal \"\", trimming)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNaOrEmpty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NA or the empty string ","text":"(vector ) logical, TRUE element x   NA empty string \"\" (trimming)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNullOrEmpty.html","id":null,"dir":"Reference","previous_headings":"","what":"isNullOrEmpty — isNullOrEmpty","title":"isNullOrEmpty — isNullOrEmpty","text":"isNullOrEmpty","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNullOrEmpty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"isNullOrEmpty — isNullOrEmpty","text":"","code":"isNullOrEmpty(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNullOrEmpty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"isNullOrEmpty — isNullOrEmpty","text":"x object tested NULL empty (vector list length 0 data frame rows)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isNullOrEmpty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"isNullOrEmpty — isNullOrEmpty","text":"TRUE x NULL x vector length 0 x data frame   rows.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isOddNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Odd Numbers — isOddNumber","title":"Check for Odd Numbers — isOddNumber","text":"Check Odd Numbers","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isOddNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Odd Numbers — isOddNumber","text":"","code":"isOddNumber(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isOddNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Odd Numbers — isOddNumber","text":"x vector numeric","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isTryError.html","id":null,"dir":"Reference","previous_headings":"","what":"Does an Object Inherit from ","title":"Does an Object Inherit from ","text":"Object Inherit \"try-error\"?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isTryError.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does an Object Inherit from ","text":"","code":"isTryError(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/isTryError.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does an Object Inherit from ","text":"x R object","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isTryError.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does an Object Inherit from ","text":"logical length one, TRUE x inherits \"try-error\",   otherwise FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/isTryError.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does an Object Inherit from ","text":"","code":"result <- try(stop(\"Stop!\"), silent = TRUE) isTryError(result) # TRUE #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/lastElement.html","id":null,"dir":"Reference","previous_headings":"","what":"Last Element — lastElement","title":"Last Element — lastElement","text":"Returns last element using function tail","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/lastElement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Last Element — lastElement","text":"","code":"lastElement(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/lastElement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Last Element — lastElement","text":"x object","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/lastElement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Last Element — lastElement","text":"last element object returned: x[[length(x)]]  x list (data frame), otherwise tail(x, 1).","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/left.html","id":null,"dir":"Reference","previous_headings":"","what":"Left Part of a String — left","title":"Left Part of a String — left","text":"Left Part String","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/left.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Left Part of a String — left","text":"","code":"left(x, n)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/left.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Left Part of a String — left","text":"x vector character n number characters kept beginning character string within x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/left.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Left Part of a String — left","text":"vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/left.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Left Part of a String — left","text":"","code":"left(\"Good Morning\", 4) #> [1] \"Good\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/leftSubstringEquals.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Left Substring of X Equal To Y? — leftSubstringEquals","title":"Is Left Substring of X Equal To Y? — leftSubstringEquals","text":"TODO: Simply use startsWith?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/leftSubstringEquals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Left Substring of X Equal To Y? — leftSubstringEquals","text":"","code":"leftSubstringEquals(x, y)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/leftSubstringEquals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is Left Substring of X Equal To Y? — leftSubstringEquals","text":"x String left part compared y y String compared left part x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/leftSubstringEquals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is Left Substring of X Equal To Y? — leftSubstringEquals","text":"","code":"leftSubstringEquals(\"Great job\", \"Great\") #> [1] TRUE leftSubstringEquals(\"Great car\", \"Great\") #> [1] TRUE leftSubstringEquals(\"Boring job\", \"Great\") #> [1] FALSE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/limitToRange.html","id":null,"dir":"Reference","previous_headings":"","what":"Limit Values to Interval — limitToRange","title":"Limit Values to Interval — limitToRange","text":"limit values x value lies within closed interval [left, right]","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/limitToRange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Limit Values to Interval — limitToRange","text":"","code":"limitToRange(x, left = .Machine$double.eps, right = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/limitToRange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Limit Values to Interval — limitToRange","text":"x vector numeric values left lower boundary right upper boundary","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/limitToRange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Limit Values to Interval — limitToRange","text":"","code":"limitToRange(1:20, left = 5, right = 15) #>  [1]  5  5  5  5  5  6  7  8  9 10 11 12 13 14 15 15 15 15 15 15"},{"path":"https://kwb-r.github.io/kwb.utils/reference/linearCombination.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Combination of a Matrix — linearCombination","title":"Linear Combination of a Matrix — linearCombination","text":"Calculate linear combination matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/linearCombination.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Combination of a Matrix — linearCombination","text":"","code":"linearCombination(x, coeffs, version = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/linearCombination.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Combination of a Matrix — linearCombination","text":"x numeric matrix coeffs numeric vector coefficients version 1 2 (default: 1). Allows two different versions calculation return !","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/linearCombination.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Combination of a Matrix — linearCombination","text":"","code":"(x <- randomMatrix(c(4, 2))) #>      [,1] [,2] #> [1,]   72   45 #> [2,]   76   24 #> [3,]   15   48 #> [4,]   75   74 (coeffs <- rnorm(ncol(x))) #> [1] -1.8178168  0.0457961    # Calculate the linear combination manually LC1 <- x[, 1] * coeffs[1] + x[, 2] * coeffs[2]  # Caluclate with linearCombination() LC2 <- linearCombination(x, coeffs)  # The result shoulc be the same! all.equal(LC1, LC2) # TRUE #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/listObjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Names of Objects in .RData files — listObjects","title":"Get Names of Objects in .RData files — listObjects","text":"Get Names Objects .RData files","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/listObjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Names of Objects in .RData files — listObjects","text":"","code":"listObjects(files)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/listObjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Names of Objects in .RData files — listObjects","text":"files vector full paths .RData files","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/listObjects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Names of Objects in .RData files — listObjects","text":"","code":"## Not run    ## Search for available .RData files below \"searchdir\" #searchdir <- \"Y:/SUW_Department/Projects/SEMA/WP/20_Braunschweig\" #files <- dir(searchdir, pattern = \"\\\\.RData$\", recursive = TRUE, full.names = TRUE)    ## Get the names of the objects in the .RData files #objectsInFiles <- listObjects(files)    ## Which file contains the object \"DataQ\"? #dataQ.found <- sapply(objectsInFiles, function(x) {\"DataQ\" %in% x})    #cat(\"DataQ was found in the following files:\", #    paste(files[dataQ.found], collapse = \"\\n  \"))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/listToDepth.html","id":null,"dir":"Reference","previous_headings":"","what":"List Elements Recursively up to Depth — listToDepth","title":"List Elements Recursively up to Depth — listToDepth","text":"List Elements Recursively Depth","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/listToDepth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Elements Recursively up to Depth — listToDepth","text":"","code":"listToDepth(   path,   max_depth = 0L,   full_info = FALSE,   FUN = listFiles,   ...,   depth = 0,   prob_mutate = 0,   template = NULL )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/listToDepth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Elements Recursively up to Depth — listToDepth","text":"path path element start listing max_depth maximal depth level list elements. value 0 means non-recursive listing, value NA represents fully recursive listing. full_info return path isdir information full information provided FUN(full_info = TRUE)? FUN function called get listing element given path. function must accept path first argument must define argument full_info second. may accept arguments. must always return data frame. full_info = FALSE data frame must columns file isdir (\"file\" directory?). full_info = TRUE function may return columns. function must provide empty data frame expected columns called character() first argument. function expected set attribute \"failed\" given path case path accessed (e.g. broken internet connection listing done remotely). See kwb.utils:::listFiles example implementation somehow simulates behaviour dir function. See kwb.dwd::list_url() advanced usage function order recursively list files FTP server (FTP = file transfer protocol). ... arguments passed FUN depth start depth recursion max_depth > 0. argument internal use intended set user! prob_mutate probability alter path becomes useless. zero default. Set value want test function behaves listing path fails. template empty data frame (zero rows) columns identical columns data frame returned FUN. provided function call FUN zero-length path argument expecting retrieve template expected .","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/listToDepth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Elements Recursively up to Depth — listToDepth","text":"data frame containing least columns file  isdir. full_info = TRUE result data frame may contain   columns, provided function given FUN full_info = TRUE.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/listToDepth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Elements Recursively up to Depth — listToDepth","text":"","code":"# Example list function provided in this package (file listing) FUN <- kwb.utils:::listFiles  # The list function must provide empty records when no path is given. The  # returned data frame must provide the columns \"file\" and \"isdir\" ... FUN() #> listing . #>                                        file isdir #> 1                               DIN.A4.html FALSE #> 2                              Rplot001.png FALSE #> 3                              Rplot002.png FALSE #> 4                             addClass.html FALSE #> 5                       addRowWithName.html FALSE #> 6                   addSuffixToColumns.html FALSE #> 7                          allAreEqual.html FALSE #> 8                      allAreIdentical.html FALSE #> 9                          almostEqual.html FALSE #> 10                        appendSuffix.html FALSE #> 11                            arglist-1.png FALSE #> 12                            arglist-2.png FALSE #> 13                             arglist.html FALSE #> 14                             argsCsv.html FALSE #> 15                    arrayToDataFrame.html FALSE #> 16                        asColumnList.html FALSE #> 17                 asNoFactorDataFrame.html FALSE #> 18                           asRowList.html FALSE #> 19                    assertFinalSlash.html FALSE #> 20                assertRowsAndColumns.html FALSE #> 21                           assignAll.html FALSE #> 22              assignArgumentDefaults.html FALSE #> 23                      assignGlobally.html FALSE #> 24                assignPackageObjects.html FALSE #> 25                     atLeastOneRowIn.html FALSE #> 26                           backspace.html FALSE #> 27                     breakInSequence.html FALSE #> 28                           callWith-1.png FALSE #> 29                           callWith-2.png FALSE #> 30                            callWith.html FALSE #> 31            callWithStringsAsFactors.html FALSE #> 32                           catAndRun.html FALSE #> 33                          catChanges.html FALSE #> 34                        catChangesIf.html FALSE #> 35                               catIf.html FALSE #> 36                            catLines.html FALSE #> 37                        catNewLineIf.html FALSE #> 38              checkForMissingColumns.html FALSE #> 39                        clearConsole.html FALSE #> 40                          clipMatrix.html FALSE #> 41                         cmdLinePath.html FALSE #> 42                           colMaxima.html FALSE #> 43                           colMinima.html FALSE #> 44                        colNaNumbers.html FALSE #> 45             colStatisticOneFunction.html FALSE #> 46                       colStatistics.html FALSE #> 47                           collapsed.html FALSE #> 48                    columnDescriptor.html FALSE #> 49                        columnToDate.html FALSE #> 50                columnwisePercentage.html FALSE #> 51                combineAlternatingly.html FALSE #> 52                      commaCollapsed.html FALSE #> 53                         commonNames.html FALSE #> 54                   compareDataFrames.html FALSE #> 55                         compareSets.html FALSE #> 56                   containsNulString.html FALSE #> 57                      convertCsvFile.html FALSE #> 58                      copyAttributes.html FALSE #> 59              copyDirectoryStructure.html FALSE #> 60                    copyListElements.html FALSE #> 61                     countNaInColumn.html FALSE #> 62                          countOrSum.html FALSE #> 63                      createAccessor.html FALSE #> 64              createDirAndReturnPath.html FALSE #> 65                   createDirectories.html FALSE #> 66                     createDirectory.html FALSE #> 67           createFunctionExtdataFile.html FALSE #> 68                       createIdAlong.html FALSE #> 69                        createMatrix.html FALSE #> 70                  createPasswordFile.html FALSE #> 71                       createStorage.html FALSE #> 72                  csvTextToDataFrame.html FALSE #> 73                              decode.html FALSE #> 74                         defaultIfNA.html FALSE #> 75                       defaultIfNULL.html FALSE #> 76                       defaultIfZero.html FALSE #> 77                       defaultLevels.html FALSE #> 78        defaultWindowsProgramFolders.html FALSE #> 79                             desktop.html FALSE #> 80                            diffrows.html FALSE #> 81                          dot-OStype.html FALSE #> 82                       dot-defaultIf.html FALSE #> 83                dot-guessSeparator.1.html FALSE #> 84                dot-guessSeparator.2.html FALSE #> 85                   dot-isNetworkPath.html FALSE #> 86                             dot-log.html FALSE #> 87                         dot-logline.html FALSE #> 88                           dot-logok.html FALSE #> 89                        dot-logstart.html FALSE #> 90                             dropDim.html FALSE #> 91              dropUnusedFactorLevels.html FALSE #> 92                              encode.html FALSE #> 93                       enlargeVector.html FALSE #> 94                         excludeNULL.html FALSE #> 95                          expandGrid.html FALSE #> 96                        extendLimits.html FALSE #> 97                    extractRowRanges.html FALSE #> 98                    extractSubstring.html FALSE #> 99                       fileExtension.html FALSE #> 100                        findChanges.html FALSE #> 101              findPartialDuplicates.html FALSE #> 102                   finishAndShowPdf.html FALSE #> 103                 finishAndShowPdfIf.html FALSE #> 104                       firstElement.html FALSE #> 105                   firstPosixColumn.html FALSE #> 106                      frenchToAscii.html FALSE #> 107                     frequencyTable.html FALSE #> 108                        fullySorted.html FALSE #> 109                    generateKeyFile.html FALSE #> 110                       getAttribute.html FALSE #> 111       getByPositiveOrNegativeIndex.html FALSE #> 112                  getElementLengths.html FALSE #> 113                     getEvenNumbers.html FALSE #> 114          getFunctionValueOrDefault.html FALSE #> 115                        getGlobally.html FALSE #> 116                getKeywordPositions.html FALSE #> 117      getNamesOfObjectsInRDataFiles.html FALSE #> 118             getObjectFromRDataFile.html FALSE #> 119                      getOddNumbers.html FALSE #> 120                        getPassword.html FALSE #> 121 getPathsAndValuesFromRecursiveList.html FALSE #> 122                        getTagNames.html FALSE #> 123                        get_homedir.html FALSE #> 124                     guessSeparator.html FALSE #> 125                      hasFinalSlash.html FALSE #> 126                           headtail.html FALSE #> 127                   hsAddMissingCols.html FALSE #> 128                         hsChrToNum.html FALSE #> 129                       hsCountInStr.html FALSE #> 130                     hsDelEmptyCols.html FALSE #> 131                 hsMatrixToListForm.html FALSE #> 132                      hsMovingMean-1.png FALSE #> 133                       hsMovingMean.html FALSE #> 134              hsOpenWindowsExplorer.html FALSE #> 135                          hsPrepPdf.html FALSE #> 136                         hsQuoteChr.html FALSE #> 137                    hsRenameColumns.html FALSE #> 138                          hsResolve.html FALSE #> 139                hsRestoreAttributes.html FALSE #> 140                         hsSafeName.html FALSE #> 141                            hsShell.html FALSE #> 142                          hsShowPdf.html FALSE #> 143                     hsStringToDate.html FALSE #> 144                   hsStringToDouble.html FALSE #> 145                   hsSubstSpecChars.html FALSE #> 146                           hsSystem.html FALSE #> 147                             hsTrim.html FALSE #> 148                       hsValidValue.html FALSE #> 149                            inRange.html FALSE #> 150                             indent.html FALSE #> 151                              index.html FALSE #> 152                      insertColumns.html FALSE #> 153                 intToNumeralSystem.html FALSE #> 154                         is.unnamed.html FALSE #> 155                            isASCII.html FALSE #> 156                   isDotOrDoubleDot.html FALSE #> 157                       isEvenNumber.html FALSE #> 158                           isLoaded.html FALSE #> 159                   isNaInAllColumns.html FALSE #> 160                      isNaInAllRows.html FALSE #> 161                        isNaOrEmpty.html FALSE #> 162                      isNullOrEmpty.html FALSE #> 163                        isOddNumber.html FALSE #> 164                         isTryError.html FALSE #> 165                        lastElement.html FALSE #> 166                               left.html FALSE #> 167                leftSubstringEquals.html FALSE #> 168                       limitToRange.html FALSE #> 169                  linearCombination.html FALSE #> 170                        listObjects.html FALSE FUN(full_info = TRUE) #> listing . #>                                        file isdir   size mode #> 1                               DIN.A4.html FALSE   8219  644 #> 2                              Rplot001.png FALSE   1011  644 #> 3                              Rplot002.png FALSE   5908  644 #> 4                             addClass.html FALSE   9357  644 #> 5                       addRowWithName.html FALSE   9073  644 #> 6                   addSuffixToColumns.html FALSE  11665  644 #> 7                          allAreEqual.html FALSE   9028  644 #> 8                      allAreIdentical.html FALSE   8861  644 #> 9                          almostEqual.html FALSE   9044  644 #> 10                        appendSuffix.html FALSE  10620  644 #> 11                            arglist-1.png FALSE  18498  644 #> 12                            arglist-2.png FALSE  18423  644 #> 13                             arglist.html FALSE  12842  644 #> 14                             argsCsv.html FALSE   8904  644 #> 15                    arrayToDataFrame.html FALSE  13424  644 #> 16                        asColumnList.html FALSE  10866  644 #> 17                 asNoFactorDataFrame.html FALSE  11176  644 #> 18                           asRowList.html FALSE  10750  644 #> 19                    assertFinalSlash.html FALSE  11783  644 #> 20                assertRowsAndColumns.html FALSE  12269  644 #> 21                           assignAll.html FALSE   8866  644 #> 22              assignArgumentDefaults.html FALSE  10182  644 #> 23                      assignGlobally.html FALSE   8556  644 #> 24                assignPackageObjects.html FALSE   9101  644 #> 25                     atLeastOneRowIn.html FALSE   8632  644 #> 26                           backspace.html FALSE  10333  644 #> 27                     breakInSequence.html FALSE   9007  644 #> 28                           callWith-1.png FALSE  18498  644 #> 29                           callWith-2.png FALSE  18423  644 #> 30                            callWith.html FALSE  11942  644 #> 31            callWithStringsAsFactors.html FALSE  14217  644 #> 32                           catAndRun.html FALSE  12602  644 #> 33                          catChanges.html FALSE   9470  644 #> 34                        catChangesIf.html FALSE   8928  644 #> 35                               catIf.html FALSE   8589  644 #> 36                            catLines.html FALSE   8694  644 #> 37                        catNewLineIf.html FALSE   8941  644 #> 38              checkForMissingColumns.html FALSE   9764  644 #> 39                        clearConsole.html FALSE   8151  644 #> 40                          clipMatrix.html FALSE   8882  644 #> 41                         cmdLinePath.html FALSE   8667  644 #> 42                           colMaxima.html FALSE   8679  644 #> 43                           colMinima.html FALSE   8679  644 #> 44                        colNaNumbers.html FALSE   8617  644 #> 45             colStatisticOneFunction.html FALSE   9104  644 #> 46                       colStatistics.html FALSE   9653  644 #> 47                           collapsed.html FALSE   8872  644 #> 48                    columnDescriptor.html FALSE   8783  644 #> 49                        columnToDate.html FALSE  11219  644 #> 50                columnwisePercentage.html FALSE  14524  644 #> 51                combineAlternatingly.html FALSE  11870  644 #> 52                      commaCollapsed.html FALSE   8497  644 #> 53                         commonNames.html FALSE  10010  644 #> 54                   compareDataFrames.html FALSE  13226  644 #> 55                         compareSets.html FALSE  11641  644 #> 56                   containsNulString.html FALSE   8802  644 #> 57                      convertCsvFile.html FALSE  21939  644 #> 58                      copyAttributes.html FALSE  10480  644 #> 59              copyDirectoryStructure.html FALSE   9630  644 #> 60                    copyListElements.html FALSE  11791  644 #> 61                     countNaInColumn.html FALSE   8866  644 #> 62                          countOrSum.html FALSE  13598  644 #> 63                      createAccessor.html FALSE  10599  644 #> 64              createDirAndReturnPath.html FALSE   9346  644 #> 65                   createDirectories.html FALSE   8839  644 #> 66                     createDirectory.html FALSE   9239  644 #> 67           createFunctionExtdataFile.html FALSE   9872  644 #> 68                       createIdAlong.html FALSE  11786  644 #> 69                        createMatrix.html FALSE  13625  644 #> 70                  createPasswordFile.html FALSE   9678  644 #> 71                       createStorage.html FALSE  14435  644 #> 72                  csvTextToDataFrame.html FALSE   8728  644 #> 73                              decode.html FALSE   8792  644 #> 74                         defaultIfNA.html FALSE  10354  644 #> 75                       defaultIfNULL.html FALSE  10377  644 #> 76                       defaultIfZero.html FALSE  11630  644 #> 77                       defaultLevels.html FALSE  10470  644 #> 78        defaultWindowsProgramFolders.html FALSE   8295  644 #> 79                             desktop.html FALSE   8857  644 #> 80                            diffrows.html FALSE  10672  644 #> 81                          dot-OStype.html FALSE   8544  644 #> 82                       dot-defaultIf.html FALSE   9222  644 #> 83                dot-guessSeparator.1.html FALSE   8899  644 #> 84                dot-guessSeparator.2.html FALSE   8775  644 #> 85                   dot-isNetworkPath.html FALSE   9100  644 #> 86                             dot-log.html FALSE   8592  644 #> 87                         dot-logline.html FALSE   8746  644 #> 88                           dot-logok.html FALSE   8682  644 #> 89                        dot-logstart.html FALSE   8875  644 #> 90                             dropDim.html FALSE  13621  644 #> 91              dropUnusedFactorLevels.html FALSE  13662  644 #> 92                              encode.html FALSE  11045  644 #> 93                       enlargeVector.html FALSE  11370  644 #> 94                         excludeNULL.html FALSE  10891  644 #> 95                          expandGrid.html FALSE  14427  644 #> 96                        extendLimits.html FALSE   9196  644 #> 97                    extractRowRanges.html FALSE  18729  644 #> 98                    extractSubstring.html FALSE  14890  644 #> 99                       fileExtension.html FALSE   9893  644 #> 100                        findChanges.html FALSE  13116  644 #> 101              findPartialDuplicates.html FALSE  13128  644 #> 102                   finishAndShowPdf.html FALSE   9342  644 #> 103                 finishAndShowPdfIf.html FALSE   8951  644 #> 104                       firstElement.html FALSE   8680  644 #> 105                   firstPosixColumn.html FALSE   8577  644 #> 106                      frenchToAscii.html FALSE   8598  644 #> 107                     frequencyTable.html FALSE  15532  644 #> 108                        fullySorted.html FALSE  14399  644 #> 109                    generateKeyFile.html FALSE   8899  644 #> 110                       getAttribute.html FALSE  13053  644 #> 111       getByPositiveOrNegativeIndex.html FALSE   9110  644 #> 112                  getElementLengths.html FALSE   9972  644 #> 113                     getEvenNumbers.html FALSE   8612  644 #> 114          getFunctionValueOrDefault.html FALSE   9140  644 #> 115                        getGlobally.html FALSE   8947  644 #> 116                getKeywordPositions.html FALSE   9363  644 #> 117      getNamesOfObjectsInRDataFiles.html FALSE   8747  644 #> 118             getObjectFromRDataFile.html FALSE   9296  644 #> 119                      getOddNumbers.html FALSE   8602  644 #> 120                        getPassword.html FALSE   9904  644 #> 121 getPathsAndValuesFromRecursiveList.html FALSE  12368  644 #> 122                        getTagNames.html FALSE   9595  644 #> 123                        get_homedir.html FALSE   9013  644 #> 124                     guessSeparator.html FALSE   9125  644 #> 125                      hasFinalSlash.html FALSE   9597  644 #> 126                           headtail.html FALSE  14972  644 #> 127                   hsAddMissingCols.html FALSE   9551  644 #> 128                         hsChrToNum.html FALSE   9507  644 #> 129                       hsCountInStr.html FALSE   8916  644 #> 130                     hsDelEmptyCols.html FALSE  10080  644 #> 131                 hsMatrixToListForm.html FALSE  10439  644 #> 132                      hsMovingMean-1.png FALSE 108775  644 #> 133                       hsMovingMean.html FALSE  12263  644 #> 134              hsOpenWindowsExplorer.html FALSE   9093  644 #> 135                          hsPrepPdf.html FALSE   9789  644 #> 136                         hsQuoteChr.html FALSE   9193  644 #> 137                    hsRenameColumns.html FALSE   8875  644 #> 138                          hsResolve.html FALSE   9423  644 #> 139                hsRestoreAttributes.html FALSE   8770  644 #> 140                         hsSafeName.html FALSE  10953  644 #> 141                            hsShell.html FALSE   8607  644 #> 142                          hsShowPdf.html FALSE  11911  644 #> 143                     hsStringToDate.html FALSE   9221  644 #> 144                   hsStringToDouble.html FALSE   9017  644 #> 145                   hsSubstSpecChars.html FALSE   9104  644 #> 146                           hsSystem.html FALSE   8619  644 #> 147                             hsTrim.html FALSE   9293  644 #> 148                       hsValidValue.html FALSE   9416  644 #> 149                            inRange.html FALSE   9179  644 #> 150                             indent.html FALSE   8845  644 #> 151                              index.html FALSE  63927  644 #> 152                      insertColumns.html FALSE  16072  644 #> 153                 intToNumeralSystem.html FALSE  13893  644 #> 154                         is.unnamed.html FALSE  11218  644 #> 155                            isASCII.html FALSE  10098  644 #> 156                   isDotOrDoubleDot.html FALSE   9575  644 #> 157                       isEvenNumber.html FALSE   8478  644 #> 158                           isLoaded.html FALSE  10716  644 #> 159                   isNaInAllColumns.html FALSE   8806  644 #> 160                      isNaInAllRows.html FALSE   8785  644 #> 161                        isNaOrEmpty.html FALSE   8919  644 #> 162                      isNullOrEmpty.html FALSE   8735  644 #> 163                        isOddNumber.html FALSE   8468  644 #> 164                         isTryError.html FALSE   9745  644 #> 165                        lastElement.html FALSE   8819  644 #> 166                               left.html FALSE   9248  644 #> 167                leftSubstringEquals.html FALSE   9835  644 #> 168                       limitToRange.html FALSE   9671  644 #> 169                  linearCombination.html FALSE  12014  644 #> 170                        listObjects.html FALSE  10003  644 #>                   mtime               ctime               atime uid gid  uname #> 1   2022-06-05 19:07:50 2022-06-05 19:07:50 2022-06-05 19:07:50 501  20 runner #> 2   2022-06-05 19:09:08 2022-06-05 19:09:08 2022-06-05 19:07:52 501  20 runner #> 3   2022-06-05 19:08:02 2022-06-05 19:08:02 2022-06-05 19:07:54 501  20 runner #> 4   2022-06-05 19:07:51 2022-06-05 19:07:51 2022-06-05 19:07:51 501  20 runner #> 5   2022-06-05 19:07:51 2022-06-05 19:07:51 2022-06-05 19:07:51 501  20 runner #> 6   2022-06-05 19:07:52 2022-06-05 19:07:52 2022-06-05 19:07:52 501  20 runner #> 7   2022-06-05 19:07:52 2022-06-05 19:07:52 2022-06-05 19:07:52 501  20 runner #> 8   2022-06-05 19:07:53 2022-06-05 19:07:53 2022-06-05 19:07:53 501  20 runner #> 9   2022-06-05 19:07:53 2022-06-05 19:07:53 2022-06-05 19:07:53 501  20 runner #> 10  2022-06-05 19:07:54 2022-06-05 19:07:54 2022-06-05 19:07:54 501  20 runner #> 11  2022-06-05 19:07:54 2022-06-05 19:07:54 2022-06-05 19:07:54 501  20 runner #> 12  2022-06-05 19:07:54 2022-06-05 19:07:54 2022-06-05 19:07:54 501  20 runner #> 13  2022-06-05 19:07:55 2022-06-05 19:07:55 2022-06-05 19:07:55 501  20 runner #> 14  2022-06-05 19:07:55 2022-06-05 19:07:55 2022-06-05 19:07:55 501  20 runner #> 15  2022-06-05 19:07:56 2022-06-05 19:07:56 2022-06-05 19:07:56 501  20 runner #> 16  2022-06-05 19:07:56 2022-06-05 19:07:56 2022-06-05 19:07:56 501  20 runner #> 17  2022-06-05 19:07:57 2022-06-05 19:07:57 2022-06-05 19:07:57 501  20 runner #> 18  2022-06-05 19:07:57 2022-06-05 19:07:57 2022-06-05 19:07:57 501  20 runner #> 19  2022-06-05 19:07:58 2022-06-05 19:07:58 2022-06-05 19:07:58 501  20 runner #> 20  2022-06-05 19:07:58 2022-06-05 19:07:58 2022-06-05 19:07:58 501  20 runner #> 21  2022-06-05 19:07:59 2022-06-05 19:07:59 2022-06-05 19:07:59 501  20 runner #> 22  2022-06-05 19:07:59 2022-06-05 19:07:59 2022-06-05 19:07:59 501  20 runner #> 23  2022-06-05 19:08:00 2022-06-05 19:08:00 2022-06-05 19:08:00 501  20 runner #> 24  2022-06-05 19:08:00 2022-06-05 19:08:00 2022-06-05 19:08:00 501  20 runner #> 25  2022-06-05 19:08:01 2022-06-05 19:08:01 2022-06-05 19:08:01 501  20 runner #> 26  2022-06-05 19:08:01 2022-06-05 19:08:01 2022-06-05 19:08:01 501  20 runner #> 27  2022-06-05 19:08:02 2022-06-05 19:08:02 2022-06-05 19:08:02 501  20 runner #> 28  2022-06-05 19:08:02 2022-06-05 19:08:02 2022-06-05 19:08:02 501  20 runner #> 29  2022-06-05 19:08:02 2022-06-05 19:08:02 2022-06-05 19:08:02 501  20 runner #> 30  2022-06-05 19:08:02 2022-06-05 19:08:02 2022-06-05 19:08:02 501  20 runner #> 31  2022-06-05 19:08:03 2022-06-05 19:08:03 2022-06-05 19:08:03 501  20 runner #> 32  2022-06-05 19:08:04 2022-06-05 19:08:04 2022-06-05 19:08:04 501  20 runner #> 33  2022-06-05 19:08:04 2022-06-05 19:08:04 2022-06-05 19:08:04 501  20 runner #> 34  2022-06-05 19:08:04 2022-06-05 19:08:04 2022-06-05 19:08:04 501  20 runner #> 35  2022-06-05 19:08:05 2022-06-05 19:08:05 2022-06-05 19:08:05 501  20 runner #> 36  2022-06-05 19:08:05 2022-06-05 19:08:05 2022-06-05 19:08:05 501  20 runner #> 37  2022-06-05 19:08:06 2022-06-05 19:08:06 2022-06-05 19:08:06 501  20 runner #> 38  2022-06-05 19:08:06 2022-06-05 19:08:06 2022-06-05 19:08:06 501  20 runner #> 39  2022-06-05 19:08:07 2022-06-05 19:08:07 2022-06-05 19:08:07 501  20 runner #> 40  2022-06-05 19:08:07 2022-06-05 19:08:07 2022-06-05 19:08:07 501  20 runner #> 41  2022-06-05 19:08:08 2022-06-05 19:08:08 2022-06-05 19:08:08 501  20 runner #> 42  2022-06-05 19:08:08 2022-06-05 19:08:08 2022-06-05 19:08:08 501  20 runner #> 43  2022-06-05 19:08:08 2022-06-05 19:08:08 2022-06-05 19:08:08 501  20 runner #> 44  2022-06-05 19:08:09 2022-06-05 19:08:09 2022-06-05 19:08:09 501  20 runner #> 45  2022-06-05 19:08:09 2022-06-05 19:08:09 2022-06-05 19:08:09 501  20 runner #> 46  2022-06-05 19:08:10 2022-06-05 19:08:10 2022-06-05 19:08:10 501  20 runner #> 47  2022-06-05 19:08:10 2022-06-05 19:08:10 2022-06-05 19:08:10 501  20 runner #> 48  2022-06-05 19:08:11 2022-06-05 19:08:11 2022-06-05 19:08:11 501  20 runner #> 49  2022-06-05 19:08:11 2022-06-05 19:08:11 2022-06-05 19:08:11 501  20 runner #> 50  2022-06-05 19:08:12 2022-06-05 19:08:12 2022-06-05 19:08:12 501  20 runner #> 51  2022-06-05 19:08:13 2022-06-05 19:08:13 2022-06-05 19:08:13 501  20 runner #> 52  2022-06-05 19:08:13 2022-06-05 19:08:13 2022-06-05 19:08:13 501  20 runner #> 53  2022-06-05 19:08:14 2022-06-05 19:08:14 2022-06-05 19:08:14 501  20 runner #> 54  2022-06-05 19:08:14 2022-06-05 19:08:14 2022-06-05 19:08:14 501  20 runner #> 55  2022-06-05 19:08:15 2022-06-05 19:08:15 2022-06-05 19:08:15 501  20 runner #> 56  2022-06-05 19:08:15 2022-06-05 19:08:15 2022-06-05 19:08:15 501  20 runner #> 57  2022-06-05 19:08:16 2022-06-05 19:08:16 2022-06-05 19:08:16 501  20 runner #> 58  2022-06-05 19:08:16 2022-06-05 19:08:16 2022-06-05 19:08:16 501  20 runner #> 59  2022-06-05 19:08:17 2022-06-05 19:08:17 2022-06-05 19:08:17 501  20 runner #> 60  2022-06-05 19:08:17 2022-06-05 19:08:17 2022-06-05 19:08:17 501  20 runner #> 61  2022-06-05 19:08:18 2022-06-05 19:08:18 2022-06-05 19:08:18 501  20 runner #> 62  2022-06-05 19:08:18 2022-06-05 19:08:18 2022-06-05 19:08:18 501  20 runner #> 63  2022-06-05 19:08:19 2022-06-05 19:08:19 2022-06-05 19:08:19 501  20 runner #> 64  2022-06-05 19:08:19 2022-06-05 19:08:19 2022-06-05 19:08:19 501  20 runner #> 65  2022-06-05 19:08:20 2022-06-05 19:08:20 2022-06-05 19:08:20 501  20 runner #> 66  2022-06-05 19:08:20 2022-06-05 19:08:20 2022-06-05 19:08:20 501  20 runner #> 67  2022-06-05 19:08:20 2022-06-05 19:08:20 2022-06-05 19:08:20 501  20 runner #> 68  2022-06-05 19:08:21 2022-06-05 19:08:21 2022-06-05 19:08:21 501  20 runner #> 69  2022-06-05 19:08:21 2022-06-05 19:08:21 2022-06-05 19:08:21 501  20 runner #> 70  2022-06-05 19:08:22 2022-06-05 19:08:22 2022-06-05 19:08:22 501  20 runner #> 71  2022-06-05 19:08:22 2022-06-05 19:08:22 2022-06-05 19:08:22 501  20 runner #> 72  2022-06-05 19:08:23 2022-06-05 19:08:23 2022-06-05 19:08:23 501  20 runner #> 73  2022-06-05 19:08:23 2022-06-05 19:08:23 2022-06-05 19:08:23 501  20 runner #> 74  2022-06-05 19:08:24 2022-06-05 19:08:24 2022-06-05 19:08:24 501  20 runner #> 75  2022-06-05 19:08:24 2022-06-05 19:08:24 2022-06-05 19:08:24 501  20 runner #> 76  2022-06-05 19:08:25 2022-06-05 19:08:25 2022-06-05 19:08:25 501  20 runner #> 77  2022-06-05 19:08:25 2022-06-05 19:08:25 2022-06-05 19:08:25 501  20 runner #> 78  2022-06-05 19:08:26 2022-06-05 19:08:26 2022-06-05 19:08:26 501  20 runner #> 79  2022-06-05 19:08:26 2022-06-05 19:08:26 2022-06-05 19:08:26 501  20 runner #> 80  2022-06-05 19:08:27 2022-06-05 19:08:27 2022-06-05 19:08:27 501  20 runner #> 81  2022-06-05 19:08:27 2022-06-05 19:08:27 2022-06-05 19:08:27 501  20 runner #> 82  2022-06-05 19:08:28 2022-06-05 19:08:28 2022-06-05 19:08:28 501  20 runner #> 83  2022-06-05 19:08:28 2022-06-05 19:08:28 2022-06-05 19:08:28 501  20 runner #> 84  2022-06-05 19:08:29 2022-06-05 19:08:29 2022-06-05 19:08:29 501  20 runner #> 85  2022-06-05 19:08:29 2022-06-05 19:08:29 2022-06-05 19:08:29 501  20 runner #> 86  2022-06-05 19:08:30 2022-06-05 19:08:30 2022-06-05 19:08:30 501  20 runner #> 87  2022-06-05 19:08:30 2022-06-05 19:08:30 2022-06-05 19:08:30 501  20 runner #> 88  2022-06-05 19:08:31 2022-06-05 19:08:31 2022-06-05 19:08:31 501  20 runner #> 89  2022-06-05 19:08:31 2022-06-05 19:08:31 2022-06-05 19:08:31 501  20 runner #> 90  2022-06-05 19:08:32 2022-06-05 19:08:32 2022-06-05 19:08:32 501  20 runner #> 91  2022-06-05 19:08:32 2022-06-05 19:08:32 2022-06-05 19:08:32 501  20 runner #> 92  2022-06-05 19:08:33 2022-06-05 19:08:33 2022-06-05 19:08:33 501  20 runner #> 93  2022-06-05 19:08:33 2022-06-05 19:08:33 2022-06-05 19:08:33 501  20 runner #> 94  2022-06-05 19:08:34 2022-06-05 19:08:34 2022-06-05 19:08:34 501  20 runner #> 95  2022-06-05 19:08:34 2022-06-05 19:08:34 2022-06-05 19:08:34 501  20 runner #> 96  2022-06-05 19:08:35 2022-06-05 19:08:35 2022-06-05 19:08:35 501  20 runner #> 97  2022-06-05 19:08:35 2022-06-05 19:08:35 2022-06-05 19:08:35 501  20 runner #> 98  2022-06-05 19:08:36 2022-06-05 19:08:36 2022-06-05 19:08:36 501  20 runner #> 99  2022-06-05 19:08:36 2022-06-05 19:08:36 2022-06-05 19:08:36 501  20 runner #> 100 2022-06-05 19:08:37 2022-06-05 19:08:37 2022-06-05 19:08:37 501  20 runner #> 101 2022-06-05 19:08:37 2022-06-05 19:08:37 2022-06-05 19:08:37 501  20 runner #> 102 2022-06-05 19:08:38 2022-06-05 19:08:38 2022-06-05 19:08:38 501  20 runner #> 103 2022-06-05 19:08:38 2022-06-05 19:08:38 2022-06-05 19:08:38 501  20 runner #> 104 2022-06-05 19:08:39 2022-06-05 19:08:39 2022-06-05 19:08:39 501  20 runner #> 105 2022-06-05 19:08:39 2022-06-05 19:08:39 2022-06-05 19:08:39 501  20 runner #> 106 2022-06-05 19:08:40 2022-06-05 19:08:40 2022-06-05 19:08:40 501  20 runner #> 107 2022-06-05 19:08:40 2022-06-05 19:08:40 2022-06-05 19:08:40 501  20 runner #> 108 2022-06-05 19:08:41 2022-06-05 19:08:41 2022-06-05 19:08:41 501  20 runner #> 109 2022-06-05 19:08:41 2022-06-05 19:08:41 2022-06-05 19:08:41 501  20 runner #> 110 2022-06-05 19:08:42 2022-06-05 19:08:42 2022-06-05 19:08:42 501  20 runner #> 111 2022-06-05 19:08:42 2022-06-05 19:08:42 2022-06-05 19:08:42 501  20 runner #> 112 2022-06-05 19:08:43 2022-06-05 19:08:43 2022-06-05 19:08:43 501  20 runner #> 113 2022-06-05 19:08:43 2022-06-05 19:08:43 2022-06-05 19:08:43 501  20 runner #> 114 2022-06-05 19:08:44 2022-06-05 19:08:44 2022-06-05 19:08:44 501  20 runner #> 115 2022-06-05 19:08:44 2022-06-05 19:08:44 2022-06-05 19:08:44 501  20 runner #> 116 2022-06-05 19:08:44 2022-06-05 19:08:44 2022-06-05 19:08:44 501  20 runner #> 117 2022-06-05 19:08:45 2022-06-05 19:08:45 2022-06-05 19:08:45 501  20 runner #> 118 2022-06-05 19:08:45 2022-06-05 19:08:45 2022-06-05 19:08:45 501  20 runner #> 119 2022-06-05 19:08:46 2022-06-05 19:08:46 2022-06-05 19:08:46 501  20 runner #> 120 2022-06-05 19:08:46 2022-06-05 19:08:46 2022-06-05 19:08:46 501  20 runner #> 121 2022-06-05 19:08:47 2022-06-05 19:08:47 2022-06-05 19:08:47 501  20 runner #> 122 2022-06-05 19:08:47 2022-06-05 19:08:47 2022-06-05 19:08:47 501  20 runner #> 123 2022-06-05 19:08:48 2022-06-05 19:08:48 2022-06-05 19:08:48 501  20 runner #> 124 2022-06-05 19:08:48 2022-06-05 19:08:48 2022-06-05 19:08:48 501  20 runner #> 125 2022-06-05 19:08:49 2022-06-05 19:08:49 2022-06-05 19:08:49 501  20 runner #> 126 2022-06-05 19:08:49 2022-06-05 19:08:49 2022-06-05 19:08:49 501  20 runner #> 127 2022-06-05 19:08:50 2022-06-05 19:08:50 2022-06-05 19:08:50 501  20 runner #> 128 2022-06-05 19:08:50 2022-06-05 19:08:50 2022-06-05 19:08:50 501  20 runner #> 129 2022-06-05 19:08:50 2022-06-05 19:08:50 2022-06-05 19:08:50 501  20 runner #> 130 2022-06-05 19:08:51 2022-06-05 19:08:51 2022-06-05 19:08:51 501  20 runner #> 131 2022-06-05 19:08:51 2022-06-05 19:08:51 2022-06-05 19:08:51 501  20 runner #> 132 2022-06-05 19:08:52 2022-06-05 19:08:52 2022-06-05 19:08:51 501  20 runner #> 133 2022-06-05 19:08:52 2022-06-05 19:08:52 2022-06-05 19:08:52 501  20 runner #> 134 2022-06-05 19:08:52 2022-06-05 19:08:52 2022-06-05 19:08:52 501  20 runner #> 135 2022-06-05 19:08:53 2022-06-05 19:08:53 2022-06-05 19:08:53 501  20 runner #> 136 2022-06-05 19:08:53 2022-06-05 19:08:53 2022-06-05 19:08:53 501  20 runner #> 137 2022-06-05 19:08:54 2022-06-05 19:08:54 2022-06-05 19:08:54 501  20 runner #> 138 2022-06-05 19:08:54 2022-06-05 19:08:54 2022-06-05 19:08:54 501  20 runner #> 139 2022-06-05 19:08:55 2022-06-05 19:08:55 2022-06-05 19:08:55 501  20 runner #> 140 2022-06-05 19:08:55 2022-06-05 19:08:55 2022-06-05 19:08:55 501  20 runner #> 141 2022-06-05 19:08:56 2022-06-05 19:08:56 2022-06-05 19:08:56 501  20 runner #> 142 2022-06-05 19:08:56 2022-06-05 19:08:56 2022-06-05 19:08:56 501  20 runner #> 143 2022-06-05 19:08:57 2022-06-05 19:08:57 2022-06-05 19:08:57 501  20 runner #> 144 2022-06-05 19:08:57 2022-06-05 19:08:57 2022-06-05 19:08:57 501  20 runner #> 145 2022-06-05 19:08:58 2022-06-05 19:08:58 2022-06-05 19:08:58 501  20 runner #> 146 2022-06-05 19:08:58 2022-06-05 19:08:58 2022-06-05 19:08:58 501  20 runner #> 147 2022-06-05 19:08:59 2022-06-05 19:08:59 2022-06-05 19:08:59 501  20 runner #> 148 2022-06-05 19:08:59 2022-06-05 19:08:59 2022-06-05 19:08:59 501  20 runner #> 149 2022-06-05 19:08:59 2022-06-05 19:08:59 2022-06-05 19:08:59 501  20 runner #> 150 2022-06-05 19:09:00 2022-06-05 19:09:00 2022-06-05 19:09:00 501  20 runner #> 151 2022-06-05 19:07:50 2022-06-05 19:07:50 2022-06-05 19:07:50 501  20 runner #> 152 2022-06-05 19:09:01 2022-06-05 19:09:01 2022-06-05 19:09:01 501  20 runner #> 153 2022-06-05 19:09:01 2022-06-05 19:09:01 2022-06-05 19:09:01 501  20 runner #> 154 2022-06-05 19:09:02 2022-06-05 19:09:02 2022-06-05 19:09:02 501  20 runner #> 155 2022-06-05 19:09:02 2022-06-05 19:09:02 2022-06-05 19:09:02 501  20 runner #> 156 2022-06-05 19:09:02 2022-06-05 19:09:02 2022-06-05 19:09:02 501  20 runner #> 157 2022-06-05 19:09:03 2022-06-05 19:09:03 2022-06-05 19:09:03 501  20 runner #> 158 2022-06-05 19:09:03 2022-06-05 19:09:03 2022-06-05 19:09:03 501  20 runner #> 159 2022-06-05 19:09:04 2022-06-05 19:09:04 2022-06-05 19:09:04 501  20 runner #> 160 2022-06-05 19:09:04 2022-06-05 19:09:04 2022-06-05 19:09:04 501  20 runner #> 161 2022-06-05 19:09:05 2022-06-05 19:09:05 2022-06-05 19:09:05 501  20 runner #> 162 2022-06-05 19:09:05 2022-06-05 19:09:05 2022-06-05 19:09:05 501  20 runner #> 163 2022-06-05 19:09:06 2022-06-05 19:09:06 2022-06-05 19:09:06 501  20 runner #> 164 2022-06-05 19:09:06 2022-06-05 19:09:06 2022-06-05 19:09:06 501  20 runner #> 165 2022-06-05 19:09:07 2022-06-05 19:09:07 2022-06-05 19:09:07 501  20 runner #> 166 2022-06-05 19:09:07 2022-06-05 19:09:07 2022-06-05 19:09:07 501  20 runner #> 167 2022-06-05 19:09:07 2022-06-05 19:09:07 2022-06-05 19:09:07 501  20 runner #> 168 2022-06-05 19:09:08 2022-06-05 19:09:08 2022-06-05 19:09:08 501  20 runner #> 169 2022-06-05 19:09:08 2022-06-05 19:09:08 2022-06-05 19:09:08 501  20 runner #> 170 2022-06-05 19:09:09 2022-06-05 19:09:09 2022-06-05 19:09:09 501  20 runner #>     grname #> 1    staff #> 2    staff #> 3    staff #> 4    staff #> 5    staff #> 6    staff #> 7    staff #> 8    staff #> 9    staff #> 10   staff #> 11   staff #> 12   staff #> 13   staff #> 14   staff #> 15   staff #> 16   staff #> 17   staff #> 18   staff #> 19   staff #> 20   staff #> 21   staff #> 22   staff #> 23   staff #> 24   staff #> 25   staff #> 26   staff #> 27   staff #> 28   staff #> 29   staff #> 30   staff #> 31   staff #> 32   staff #> 33   staff #> 34   staff #> 35   staff #> 36   staff #> 37   staff #> 38   staff #> 39   staff #> 40   staff #> 41   staff #> 42   staff #> 43   staff #> 44   staff #> 45   staff #> 46   staff #> 47   staff #> 48   staff #> 49   staff #> 50   staff #> 51   staff #> 52   staff #> 53   staff #> 54   staff #> 55   staff #> 56   staff #> 57   staff #> 58   staff #> 59   staff #> 60   staff #> 61   staff #> 62   staff #> 63   staff #> 64   staff #> 65   staff #> 66   staff #> 67   staff #> 68   staff #> 69   staff #> 70   staff #> 71   staff #> 72   staff #> 73   staff #> 74   staff #> 75   staff #> 76   staff #> 77   staff #> 78   staff #> 79   staff #> 80   staff #> 81   staff #> 82   staff #> 83   staff #> 84   staff #> 85   staff #> 86   staff #> 87   staff #> 88   staff #> 89   staff #> 90   staff #> 91   staff #> 92   staff #> 93   staff #> 94   staff #> 95   staff #> 96   staff #> 97   staff #> 98   staff #> 99   staff #> 100  staff #> 101  staff #> 102  staff #> 103  staff #> 104  staff #> 105  staff #> 106  staff #> 107  staff #> 108  staff #> 109  staff #> 110  staff #> 111  staff #> 112  staff #> 113  staff #> 114  staff #> 115  staff #> 116  staff #> 117  staff #> 118  staff #> 119  staff #> 120  staff #> 121  staff #> 122  staff #> 123  staff #> 124  staff #> 125  staff #> 126  staff #> 127  staff #> 128  staff #> 129  staff #> 130  staff #> 131  staff #> 132  staff #> 133  staff #> 134  staff #> 135  staff #> 136  staff #> 137  staff #> 138  staff #> 139  staff #> 140  staff #> 141  staff #> 142  staff #> 143  staff #> 144  staff #> 145  staff #> 146  staff #> 147  staff #> 148  staff #> 149  staff #> 150  staff #> 151  staff #> 152  staff #> 153  staff #> 154  staff #> 155  staff #> 156  staff #> 157  staff #> 158  staff #> 159  staff #> 160  staff #> 161  staff #> 162  staff #> 163  staff #> 164  staff #> 165  staff #> 166  staff #> 167  staff #> 168  staff #> 169  staff #> 170  staff  # ... even when being called with an empty character vector FUN(character()) #> listing  #> listing . #> [1] file  isdir #> <0 rows> (or 0-length row.names) FUN(character(), full_info = TRUE) #> listing  #> listing . #>  [1] file   isdir  size   mode   mtime  ctime  atime  uid    gid    uname  #> [11] grname #> <0 rows> (or 0-length row.names)  # Call the function recursively up to the given depth level kwb.utils:::listToDepth(\".\", max_depth = 1, FUN = FUN) #> listing . #> listing . #>                                        file isdir #> 1                               DIN.A4.html FALSE #> 2                              Rplot001.png FALSE #> 3                              Rplot002.png FALSE #> 4                             addClass.html FALSE #> 5                       addRowWithName.html FALSE #> 6                   addSuffixToColumns.html FALSE #> 7                          allAreEqual.html FALSE #> 8                      allAreIdentical.html FALSE #> 9                          almostEqual.html FALSE #> 10                        appendSuffix.html FALSE #> 11                            arglist-1.png FALSE #> 12                            arglist-2.png FALSE #> 13                             arglist.html FALSE #> 14                             argsCsv.html FALSE #> 15                    arrayToDataFrame.html FALSE #> 16                        asColumnList.html FALSE #> 17                 asNoFactorDataFrame.html FALSE #> 18                           asRowList.html FALSE #> 19                    assertFinalSlash.html FALSE #> 20                assertRowsAndColumns.html FALSE #> 21                           assignAll.html FALSE #> 22              assignArgumentDefaults.html FALSE #> 23                      assignGlobally.html FALSE #> 24                assignPackageObjects.html FALSE #> 25                     atLeastOneRowIn.html FALSE #> 26                           backspace.html FALSE #> 27                     breakInSequence.html FALSE #> 28                           callWith-1.png FALSE #> 29                           callWith-2.png FALSE #> 30                            callWith.html FALSE #> 31            callWithStringsAsFactors.html FALSE #> 32                           catAndRun.html FALSE #> 33                          catChanges.html FALSE #> 34                        catChangesIf.html FALSE #> 35                               catIf.html FALSE #> 36                            catLines.html FALSE #> 37                        catNewLineIf.html FALSE #> 38              checkForMissingColumns.html FALSE #> 39                        clearConsole.html FALSE #> 40                          clipMatrix.html FALSE #> 41                         cmdLinePath.html FALSE #> 42                           colMaxima.html FALSE #> 43                           colMinima.html FALSE #> 44                        colNaNumbers.html FALSE #> 45             colStatisticOneFunction.html FALSE #> 46                       colStatistics.html FALSE #> 47                           collapsed.html FALSE #> 48                    columnDescriptor.html FALSE #> 49                        columnToDate.html FALSE #> 50                columnwisePercentage.html FALSE #> 51                combineAlternatingly.html FALSE #> 52                      commaCollapsed.html FALSE #> 53                         commonNames.html FALSE #> 54                   compareDataFrames.html FALSE #> 55                         compareSets.html FALSE #> 56                   containsNulString.html FALSE #> 57                      convertCsvFile.html FALSE #> 58                      copyAttributes.html FALSE #> 59              copyDirectoryStructure.html FALSE #> 60                    copyListElements.html FALSE #> 61                     countNaInColumn.html FALSE #> 62                          countOrSum.html FALSE #> 63                      createAccessor.html FALSE #> 64              createDirAndReturnPath.html FALSE #> 65                   createDirectories.html FALSE #> 66                     createDirectory.html FALSE #> 67           createFunctionExtdataFile.html FALSE #> 68                       createIdAlong.html FALSE #> 69                        createMatrix.html FALSE #> 70                  createPasswordFile.html FALSE #> 71                       createStorage.html FALSE #> 72                  csvTextToDataFrame.html FALSE #> 73                              decode.html FALSE #> 74                         defaultIfNA.html FALSE #> 75                       defaultIfNULL.html FALSE #> 76                       defaultIfZero.html FALSE #> 77                       defaultLevels.html FALSE #> 78        defaultWindowsProgramFolders.html FALSE #> 79                             desktop.html FALSE #> 80                            diffrows.html FALSE #> 81                          dot-OStype.html FALSE #> 82                       dot-defaultIf.html FALSE #> 83                dot-guessSeparator.1.html FALSE #> 84                dot-guessSeparator.2.html FALSE #> 85                   dot-isNetworkPath.html FALSE #> 86                             dot-log.html FALSE #> 87                         dot-logline.html FALSE #> 88                           dot-logok.html FALSE #> 89                        dot-logstart.html FALSE #> 90                             dropDim.html FALSE #> 91              dropUnusedFactorLevels.html FALSE #> 92                              encode.html FALSE #> 93                       enlargeVector.html FALSE #> 94                         excludeNULL.html FALSE #> 95                          expandGrid.html FALSE #> 96                        extendLimits.html FALSE #> 97                    extractRowRanges.html FALSE #> 98                    extractSubstring.html FALSE #> 99                       fileExtension.html FALSE #> 100                        findChanges.html FALSE #> 101              findPartialDuplicates.html FALSE #> 102                   finishAndShowPdf.html FALSE #> 103                 finishAndShowPdfIf.html FALSE #> 104                       firstElement.html FALSE #> 105                   firstPosixColumn.html FALSE #> 106                      frenchToAscii.html FALSE #> 107                     frequencyTable.html FALSE #> 108                        fullySorted.html FALSE #> 109                    generateKeyFile.html FALSE #> 110                       getAttribute.html FALSE #> 111       getByPositiveOrNegativeIndex.html FALSE #> 112                  getElementLengths.html FALSE #> 113                     getEvenNumbers.html FALSE #> 114          getFunctionValueOrDefault.html FALSE #> 115                        getGlobally.html FALSE #> 116                getKeywordPositions.html FALSE #> 117      getNamesOfObjectsInRDataFiles.html FALSE #> 118             getObjectFromRDataFile.html FALSE #> 119                      getOddNumbers.html FALSE #> 120                        getPassword.html FALSE #> 121 getPathsAndValuesFromRecursiveList.html FALSE #> 122                        getTagNames.html FALSE #> 123                        get_homedir.html FALSE #> 124                     guessSeparator.html FALSE #> 125                      hasFinalSlash.html FALSE #> 126                           headtail.html FALSE #> 127                   hsAddMissingCols.html FALSE #> 128                         hsChrToNum.html FALSE #> 129                       hsCountInStr.html FALSE #> 130                     hsDelEmptyCols.html FALSE #> 131                 hsMatrixToListForm.html FALSE #> 132                      hsMovingMean-1.png FALSE #> 133                       hsMovingMean.html FALSE #> 134              hsOpenWindowsExplorer.html FALSE #> 135                          hsPrepPdf.html FALSE #> 136                         hsQuoteChr.html FALSE #> 137                    hsRenameColumns.html FALSE #> 138                          hsResolve.html FALSE #> 139                hsRestoreAttributes.html FALSE #> 140                         hsSafeName.html FALSE #> 141                            hsShell.html FALSE #> 142                          hsShowPdf.html FALSE #> 143                     hsStringToDate.html FALSE #> 144                   hsStringToDouble.html FALSE #> 145                   hsSubstSpecChars.html FALSE #> 146                           hsSystem.html FALSE #> 147                             hsTrim.html FALSE #> 148                       hsValidValue.html FALSE #> 149                            inRange.html FALSE #> 150                             indent.html FALSE #> 151                              index.html FALSE #> 152                      insertColumns.html FALSE #> 153                 intToNumeralSystem.html FALSE #> 154                         is.unnamed.html FALSE #> 155                            isASCII.html FALSE #> 156                   isDotOrDoubleDot.html FALSE #> 157                       isEvenNumber.html FALSE #> 158                           isLoaded.html FALSE #> 159                   isNaInAllColumns.html FALSE #> 160                      isNaInAllRows.html FALSE #> 161                        isNaOrEmpty.html FALSE #> 162                      isNullOrEmpty.html FALSE #> 163                        isOddNumber.html FALSE #> 164                         isTryError.html FALSE #> 165                        lastElement.html FALSE #> 166                               left.html FALSE #> 167                leftSubstringEquals.html FALSE #> 168                       limitToRange.html FALSE #> 169                  linearCombination.html FALSE #> 170                        listObjects.html FALSE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/loadObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Load R object from .RData file — loadObject","title":"Load R object from .RData file — loadObject","text":"Load R object given name .RData file","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/loadObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load R object from .RData file — loadObject","text":"","code":"loadObject(file, objectname = NULL, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/loadObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load R object from .RData file — loadObject","text":"file path .RData file objectname name object loaded dbg TRUE message object loaded  file shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/loadObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load R object from .RData file — loadObject","text":"R object specified objectname. object name   exist .RData file error thrown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mainClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Main Class of an Object — mainClass","title":"Main Class of an Object — mainClass","text":"Returns first element class(x) returns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mainClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Main Class of an Object — mainClass","text":"","code":"mainClass(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/mainClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Main Class of an Object — mainClass","text":"x R object","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mainClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Main Class of an Object — mainClass","text":"name main class x (vector character length one)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mainClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Main Class of an Object — mainClass","text":"","code":"class(as.POSIXct(\"2022-06-02\")) #> [1] \"POSIXct\" \"POSIXt\"  mainClass(as.POSIXct(\"2022-06-02\")) #> [1] \"POSIXct\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/makeUnique.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Duplicated Character Strings Unique\n \nadds ","title":"Make Duplicated Character Strings Unique\n \nadds ","text":"Make Duplicated Character Strings Unique adds \".1\", \".2\", etc. duplicate values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/makeUnique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Duplicated Character Strings Unique\n \nadds ","text":"","code":"makeUnique(x, warn = TRUE, sep = \".\", simple = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/makeUnique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Duplicated Character Strings Unique\n \nadds ","text":"x vector character strings warn TRUE (default) warning showing duplicated values  given sep separator name suffix number. Default: \".\" simple TRUE elements identical name (e.g. \"\")  numbered (e.g. \".1\", \".2\", \".3\"), otherwise first element kept unchanged first one numbered (e.g. \"\", \".1\", \".2\"). default FALSE.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/makeUnique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Duplicated Character Strings Unique\n \nadds ","text":"x duplicate elements modified \"element.1\",   \"element.2\", etc.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/matchesCriteria.html","id":null,"dir":"Reference","previous_headings":"","what":"Do Data Frame Row Match Given Criteria? — matchesCriteria","title":"Do Data Frame Row Match Given Criteria? — matchesCriteria","text":"data frame rows matching given criteria?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/matchesCriteria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Do Data Frame Row Match Given Criteria? — matchesCriteria","text":"","code":"matchesCriteria(   Data,   criteria = NULL,   na.to.false = FALSE,   add.details = FALSE,   dbg = TRUE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/matchesCriteria.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Do Data Frame Row Match Given Criteria? — matchesCriteria","text":"Data data frame criteria vector character containing conditions, column names Data, e.g. can appear unquoted, e.g. \"== 'x'\" na..false TRUE (default FALSE) NA resulting vector replaced FALSE add.details TRUE (default FALSE) matrix  containing evaluation criterion returned attribute  details dbg TRUE (default) criterion criteria shown many rows Data criterion TRUE many rows FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/matchesCriteria.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Do Data Frame Row Match Given Criteria? — matchesCriteria","text":"vector logical containing TRUE positions representing rows Data fulfilling conditions FALSE elsewhere","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/matchesCriteria.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Do Data Frame Row Match Given Criteria? — matchesCriteria","text":"","code":"# Define an example data frame Data <- data.frame(A = c(\"x\", \"y\", \"z\", NA),                    B = c( NA,   2,   3, 4))  # Define one or more criteria criteria <- c(\"A %in% c('y', 'z')\", \"B %in% 1:3\")  # For which rows the criteria are met (vector of logical)? matchesCriteria(Data, criteria, dbg = FALSE) #> [1] FALSE  TRUE  TRUE FALSE  # You may use the function in the context of indexing: Data[matchesCriteria(Data, criteria), ] #> Evaluating A %in% c(\"y\", \"z\") ... #>   is TRUE for       2 rows ( 50.0 %), #>     FALSE for       2 rows ( 50.0 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 2 #> Evaluating B %in% 1:3 ... #>   is TRUE for       2 rows ( 50.0 %), #>     FALSE for       2 rows ( 50.0 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 2 #>   A B #> 2 y 2 #> 3 z 3  # Filtering for non-NA values D1 <- Data[matchesCriteria(Data, \"! is.na(A) & ! is.na(B)\"), ] #> Evaluating !is.na(A) & !is.na(B) ... #>   is TRUE for       2 rows ( 50.0 %), #>     FALSE for       2 rows ( 50.0 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 2  # the same result is returned by: D2 <- Data[matchesCriteria(Data, c(\"! is.na(A)\", \"! is.na(B)\")), ] #> Evaluating !is.na(A) ... #>   is TRUE for       3 rows ( 75.0 %), #>     FALSE for       1 rows ( 25.0 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 3 #> Evaluating !is.na(B) ... #>   is TRUE for       3 rows ( 75.0 %), #>     FALSE for       1 rows ( 25.0 %) and #>        NA for       0 rows (  0.0 %). #>   Selected rows now: 2  identical(D1, D2) #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/matrixToDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Matrix to a Data Frame (in ","title":"Convert a Matrix to a Data Frame (in ","text":"Convert Matrix Data Frame (\"Long\" Format)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/matrixToDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Matrix to a Data Frame (in ","text":"","code":"matrixToDataFrame(   x,   name_row = NULL,   name_column = NULL,   name_value = \"value\",   row_first = TRUE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/matrixToDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Matrix to a Data Frame (in ","text":"x matrix name_row name given data frame column containing row \"coordinates\". Default: names(dimnames(x))[1] unless NULL, \"row\" otherwise. name_column name given data frame column containing column \"coordinates\". Default: names(dimnames(x))[2] unless NULL, \"column\" otherwise. name_value name given data frame column containing matrix values. Default: value row_first TRUE (default), \"row column\" come first, else \"column column\".","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/matrixToDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Matrix to a Data Frame (in ","text":"data frame three columns: 1. row \"coordinate\", 2. column   \"coordinate\", 3. value","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/matrixToDataFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Matrix to a Data Frame (in ","text":"","code":"m1 <- matrix(1:12, nrow = 3, dimnames = list(NULL, letters[1:4])) m2 <- matrix(1:12, nrow = 3, dimnames = list(index = NULL, letters[1:4])) m3 <- matrix(1:12, nrow = 3, dimnames = list(NULL, letter = letters[1:4]))  matrixToDataFrame(x = m1) #>    row column value #> 1    1      a     1 #> 2    1      b     4 #> 3    1      c     7 #> 4    1      d    10 #> 5    2      a     2 #> 6    2      b     5 #> 7    2      c     8 #> 8    2      d    11 #> 9    3      a     3 #> 10   3      b     6 #> 11   3      c     9 #> 12   3      d    12 matrixToDataFrame(x = m1, row_first = FALSE) #>    column row value #> 1       a   1     1 #> 2       a   2     2 #> 3       a   3     3 #> 4       b   1     4 #> 5       b   2     5 #> 6       b   3     6 #> 7       c   1     7 #> 8       c   2     8 #> 9       c   3     9 #> 10      d   1    10 #> 11      d   2    11 #> 12      d   3    12 matrixToDataFrame(x = m2) #>    index column value #> 1      1      a     1 #> 2      1      b     4 #> 3      1      c     7 #> 4      1      d    10 #> 5      2      a     2 #> 6      2      b     5 #> 7      2      c     8 #> 8      2      d    11 #> 9      3      a     3 #> 10     3      b     6 #> 11     3      c     9 #> 12     3      d    12 matrixToDataFrame(x = m3) #>    row letter value #> 1    1      a     1 #> 2    1      b     4 #> 3    1      c     7 #> 4    1      d    10 #> 5    2      a     2 #> 6    2      b     5 #> 7    2      c     8 #> 8    2      d    11 #> 9    3      a     3 #> 10   3      b     6 #> 11   3      c     9 #> 12   3      d    12 matrixToDataFrame(x = m3, \"myrow\", \"mycol\", \"myval\") #>    myrow mycol myval #> 1      1     a     1 #> 2      1     b     4 #> 3      1     c     7 #> 4      1     d    10 #> 5      2     a     2 #> 6      2     b     5 #> 7      2     c     8 #> 8      2     d    11 #> 9      3     a     3 #> 10     3     b     6 #> 11     3     c     9 #> 12     3     d    12"},{"path":"https://kwb-r.github.io/kwb.utils/reference/maxStringLength.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum String Length in Vector of Character — maxStringLength","title":"Maximum String Length in Vector of Character — maxStringLength","text":"Maximum String Length Vector Character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/maxStringLength.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum String Length in Vector of Character — maxStringLength","text":"","code":"maxStringLength(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/maxStringLength.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum String Length in Vector of Character — maxStringLength","text":"x vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/maxStringLength.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum String Length in Vector of Character — maxStringLength","text":"integer representing length longest string x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/maxStringLength.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Maximum String Length in Vector of Character — maxStringLength","text":"","code":"maxStringLength(c(\"a\", \"ab\", \"abc\", \"x\", \"xy-z\")) #> [1] 4"},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Multiple Data Frames — mergeAll","title":"Merge Multiple Data Frames — mergeAll","text":"Merge multiple data frames, given list","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Multiple Data Frames — mergeAll","text":"","code":"mergeAll(dataFrames, by, ..., dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Multiple Data Frames — mergeAll","text":"dataFrames list data frames. list elements named, element names used suffixes column names, otherwise suffixes \".1\", \".2\", etc used vector column names merged , passed merge ... additional arguments passed merge dbg TRUE (default) debug messages showing process  merging shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Multiple Data Frames — mergeAll","text":"data frame result merging data frames given  dataFrames  consecutively calling merge","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Multiple Data Frames — mergeAll","text":"","code":"peter <- data.frame(fruit = c(\"apple\", \"pear\", \"banana\"), kg = 1:3) paul <- data.frame(fruit = c(\"banana\", \"apple\", \"lemon\"), kg = c(10, 20, 30)) mary <- data.frame(fruit = c(\"lemon\", \"organger\", \"apple\"), kg = c(22, 33, 44))  # By default only categories that are in all data frames are returned mergeAll(list(peter = peter, paul = paul, mary = mary), by = \"fruit\") #> merging table 2 / 3 ... ok. #> merging table 3 / 3 ... ok. #>   fruit kg.peter kg.paul kg.mary #> 1 apple        1      20      44  # Use the arguments supported by merge to change that behaviour mergeAll(list(peter = peter, paul = paul, mary = mary), by = \"fruit\", all = TRUE) #> merging table 2 / 3 ... ok. #> merging table 3 / 3 ... ok. #>      fruit kg.peter kg.paul kg.mary #> 1    apple        1      20      44 #> 2   banana        3      10      NA #> 3    lemon       NA      30      22 #> 4 organger       NA      NA      33 #> 5     pear        2      NA      NA"},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeLists.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge Lists Overriding Elements of the Same Name — mergeLists","title":"Merge Lists Overriding Elements of the Same Name — mergeLists","text":"Merge Lists Overriding Elements Name","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeLists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge Lists Overriding Elements of the Same Name — mergeLists","text":"","code":"mergeLists(..., warn.on.NULL = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeLists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge Lists Overriding Elements of the Same Name — mergeLists","text":"... lists warn..NULL TRUE (default) warning given arguments given function NULL","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeLists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge Lists Overriding Elements of the Same Name — mergeLists","text":"list containing elements given ...","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeLists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge Lists Overriding Elements of the Same Name — mergeLists","text":"","code":"# merge two lists with different elements mergeLists(list(a = 1), list(b = 2)) #> $a #> [1] 1 #>  #> $b #> [1] 2 #>   # merge two lists with one element of the same name: override element \"b\" mergeLists(list(a = 1, b = 2), list(b = 3, c = 4)) #> $a #> [1] 1 #>  #> $b #> [1] 3 #>  #> $c #> [1] 4 #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeNamedArrays.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge List of Named Arrays — mergeNamedArrays","title":"Merge List of Named Arrays — mergeNamedArrays","text":"Merge List Named Arrays","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeNamedArrays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge List of Named Arrays — mergeNamedArrays","text":"","code":"mergeNamedArrays(x, check_dim = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeNamedArrays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge List of Named Arrays — mergeNamedArrays","text":"x list arrays dimension check_dim logical. TRUE, checked whether source dimension names available target dimension names","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mergeNamedArrays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge List of Named Arrays — mergeNamedArrays","text":"","code":"a1 <- array(   1:12,   dim = c(2, 4, 2),   dimnames = list(paste0(\"x\", 1:2), paste0(\"y\", 1:4), paste0(\"z\", 1:2)) )  a2 <- array(   11:16,   dim = c(1, 3, 2),   dimnames = list(\"x3\", paste0(\"y\", 2:4), paste0(\"z\", 1:2)) )  mergeNamedArrays(list(a1, a2)) #> , , z1 #>  #>    y1 y2 y3 y4 #> x1  1  3  5  7 #> x2  2  4  6  8 #> x3 NA 11 12 13 #>  #> , , z2 #>  #>    y1 y2 y3 y4 #> x1  9 11  1  3 #> x2 10 12  2  4 #> x3 NA 14 15 16 #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/moveColumnsToFront.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Columns to the Left — moveColumnsToFront","title":"Move Columns to the Left — moveColumnsToFront","text":"Move columns data frame matrix left","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/moveColumnsToFront.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Columns to the Left — moveColumnsToFront","text":"","code":"moveColumnsToFront(x, columns = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/moveColumnsToFront.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Columns to the Left — moveColumnsToFront","text":"x data frame columns vector column names","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/moveColumnsToFront.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move Columns to the Left — moveColumnsToFront","text":"data frame matrix columns leftmost columns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/moveColumnsToFront.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move Columns to the Left — moveColumnsToFront","text":"","code":"x <- data.frame(a = 1:5, b = 2:6, c = 3:7)    moveColumnsToFront(x, \"b\") #>   b a c #> 1 2 1 3 #> 2 3 2 4 #> 3 4 3 5 #> 4 5 4 6 #> 5 6 5 7 moveColumnsToFront(x, c(\"b\", \"a\")) #>   b a c #> 1 2 1 3 #> 2 3 2 4 #> 3 4 3 5 #> 4 5 4 6 #> 5 6 5 7"},{"path":"https://kwb-r.github.io/kwb.utils/reference/moveToFront.html","id":null,"dir":"Reference","previous_headings":"","what":"Move elements to the start of a vector — moveToFront","title":"Move elements to the start of a vector — moveToFront","text":"Move elements start vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/moveToFront.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move elements to the start of a vector — moveToFront","text":"","code":"moveToFront(x, elements)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/moveToFront.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move elements to the start of a vector — moveToFront","text":"x vector elements elements x moved front","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/moveToFront.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move elements to the start of a vector — moveToFront","text":"vector elements coming first","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/moveToFront.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move elements to the start of a vector — moveToFront","text":"","code":"moveToFront(1:10, 5) #>  [1]  5  1  2  3  4  6  7  8  9 10 moveToFront(c(\"a\", \"b\", \"c\", \"x\", \"y\", \"d\"), c(\"x\", \"y\")) #> [1] \"x\" \"y\" \"a\" \"b\" \"c\" \"d\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/movingSum.html","id":null,"dir":"Reference","previous_headings":"","what":"movingSum — movingSum","title":"movingSum — movingSum","text":"Calculate moving sum n values \"around\" values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/movingSum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"movingSum — movingSum","text":"","code":"movingSum(x, n, na.rm = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/movingSum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"movingSum — movingSum","text":"x vector values moving sum calculated n number values \"around\" values x, including values x, mean calculated. odd numbers 1, 3, 5, ... allowed. x[] x moving sum calculated :  x[-(n-1)/2] + ... + x[-1] + x[] + x[+1] + ... + x[+(n-1)/2] na.rm logical. missing values (including NaN) omitted calculations?","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/movingSum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"movingSum — movingSum","text":"Vector moving sums number values x. na.rm FALSE, first (n-1)/2 values    last (n-1)/2 values NA since enough values   start end vector, respectively, calculate    sum.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/movingSum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"movingSum — movingSum","text":"","code":"x <- rnorm(30)  plot(x, type = \"b\", main = \"Moving mean over 3, 5, 7 points\")  times <- 2:4  for (i in times) {    lines(movingSum(x, n = 2 * i - 1), col = i, type = \"b\", lwd =  2) }  legend(\"topright\", fill = times, legend = sprintf(\"n = %d\", 2 * times - 1))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/msgAvailableFields.html","id":null,"dir":"Reference","previous_headings":"","what":"Message Listing Available Fields — msgAvailableFields","title":"Message Listing Available Fields — msgAvailableFields","text":"Message shown fields/columns missing","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/msgAvailableFields.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Message Listing Available Fields — msgAvailableFields","text":"","code":"msgAvailableFields(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/msgAvailableFields.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Message Listing Available Fields — msgAvailableFields","text":"x vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/multiColumnLookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup by Matching Values in Multiple Columns — multiColumnLookup","title":"Lookup by Matching Values in Multiple Columns — multiColumnLookup","text":"Lookup Matching Values Multiple Columns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/multiColumnLookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup by Matching Values in Multiple Columns — multiColumnLookup","text":"","code":"multiColumnLookup(data, lookup, value = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/multiColumnLookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup by Matching Values in Multiple Columns — multiColumnLookup","text":"data data frame lookup values lookup table lookup lookup table defining key values matched values corresponding columns data  corresponding lookup values returned value name column lookup containing value  looked . Default: name last column lookup","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/multiColumnLookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup by Matching Values in Multiple Columns — multiColumnLookup","text":"vector many elements rows data.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/multiColumnLookup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lookup by Matching Values in Multiple Columns — multiColumnLookup","text":"","code":"(persons <- rbind(   noFactorDataFrame(name = \"Peter\", city = \"Berlin\"),   noFactorDataFrame(name = \"Paul\", city = \"Paris\"),   noFactorDataFrame(name = \"Mary\", city = \"Berlin\"),   noFactorDataFrame(name = \"Paul\", city = \"Berlin\"),   noFactorDataFrame(name = \"Peter\", city = \"Paris\") )) #>    name   city #> 1 Peter Berlin #> 2  Paul  Paris #> 3  Mary Berlin #> 4  Paul Berlin #> 5 Peter  Paris  # Who is cool, which city is cool and which combination is coolest? (is_cool <- kwb.utils::safeRowBindAll(list(   noFactorDataFrame(name = \"Paul\", city = \"Berlin\", value = \"astro-cool\"),   noFactorDataFrame(city = \"Berlin\", value = \"cool\"),   noFactorDataFrame(name = \"Paul\", value = \"mega-cool\"),   noFactorDataFrame(city = \"Paris\", value = \"ca va\") ))) #>   name   city      value #> 1 Paul Berlin astro-cool #> 2 <NA> Berlin       cool #> 3 Paul   <NA>  mega-cool #> 4 <NA>  Paris      ca va  # Lookup the coolness based on name and city coolness <- multiColumnLookup(persons, is_cool, value = \"value\")  # Add the coolness column cbind(persons, coolness) #>    name   city   coolness #> 1 Peter Berlin       cool #> 2  Paul  Paris  mega-cool #> 3  Mary Berlin       cool #> 4  Paul Berlin astro-cool #> 5 Peter  Paris      ca va"},{"path":"https://kwb-r.github.io/kwb.utils/reference/multiSubstitute.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiple Substitutions — multiSubstitute","title":"Multiple Substitutions — multiSubstitute","text":"apply multiple substitutions vector character. element   replacements gsub called element name pattern   element value replacement.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/multiSubstitute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiple Substitutions — multiSubstitute","text":"","code":"multiSubstitute(strings, replacements, ..., dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/multiSubstitute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiple Substitutions — multiSubstitute","text":"strings vector character replacements list pattern = replacement pairs. ... additional arguments passed gsub dbg TRUE (default FALSE) shown strings replaced","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mySystemTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Elapsed Time of a Function Call — mySystemTime","title":"Elapsed Time of a Function Call — mySystemTime","text":"Call function show elapsed time using system.time)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/mySystemTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elapsed Time of a Function Call — mySystemTime","text":"","code":"mySystemTime(FUN, args)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/mySystemTime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Elapsed Time of a Function Call — mySystemTime","text":"FUN function called args list arguments passed FUN","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/nNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of NA values — nNA","title":"Number of NA values — nNA","text":"Number NA values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/nNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of NA values — nNA","text":"","code":"nNA(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/nNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of NA values — nNA","text":"x vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/nNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of NA values — nNA","text":"number NA values x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/nNA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of NA values — nNA","text":"","code":"nNA(1:3) #> [1] 0 nNA(c(1, NA, 3)) #> [1] 1"},{"path":"https://kwb-r.github.io/kwb.utils/reference/nUnique.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Unique Values — nUnique","title":"Number of Unique Values — nUnique","text":"Number Unique Values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/nUnique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Unique Values — nUnique","text":"","code":"nUnique(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/nUnique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Unique Values — nUnique","text":"x R object function unique can applied ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/nUnique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Unique Values — nUnique","text":"Number unique values x (integer)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/nUnique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of Unique Values — nUnique","text":"","code":"nUnique(1:3) #> [1] 3 nUnique(c(1, 1, 2)) #> [1] 2"},{"path":"https://kwb-r.github.io/kwb.utils/reference/naToLastNonNa.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace NA With ","title":"Replace NA With ","text":"replace NA values vector \"last\" non-NA values (nearest   smaller indices case) vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/naToLastNonNa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace NA With ","text":"","code":"naToLastNonNa(x, method = 2)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/naToLastNonNa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace NA With ","text":"x vector NA replaced last non-NA value  (greatest smaller indices) vector method integer (1 2) distinguishing two different methods","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/naToLastNonNa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace NA With ","text":"","code":"naToLastNonNa(c(1, 2, NA, NA, 3, NA, NA, 4, NA, NA, 5)) #>  [1] 1 2 2 2 3 3 3 4 4 4 5 ## Result: [1] 1 2 2 2 3 3 3 4 4 4 5    # You will get an error if method = 1 and the first element is NA!    # naToLastNonNa(c(NA, 1, NA, 2), method = 1)    ## Error in naToLastNonNa(c(NA, 1, NA, 2)) : ##   The first element must not be NA"},{"path":"https://kwb-r.github.io/kwb.utils/reference/nameByElement.html","id":null,"dir":"Reference","previous_headings":"","what":"Name List Elements by Sublist Element — nameByElement","title":"Name List Elements by Sublist Element — nameByElement","text":"name elements list lists value element  elementName sublist","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/nameByElement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name List Elements by Sublist Element — nameByElement","text":"","code":"nameByElement(x, elementName = \"name\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/nameByElement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name List Elements by Sublist Element — nameByElement","text":"x list lists elementName name element looked sublist x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/nameByElement.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Name List Elements by Sublist Element — nameByElement","text":"","code":"L <- list(   list(group = \"A\", value = 1),   list(group = \"B\", value = 2) )  nameByElement(L, \"group\") #> $A #> $A$group #> [1] \"A\" #>  #> $A$value #> [1] 1 #>  #>  #> $B #> $B$group #> [1] \"B\" #>  #> $B$value #> [1] 2 #>  #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/namedVectorFromColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Named Vector from two Columns of a Data Frame — namedVectorFromColumns","title":"Create Named Vector from two Columns of a Data Frame — namedVectorFromColumns","text":"Create Named Vector two Columns Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/namedVectorFromColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Named Vector from two Columns of a Data Frame — namedVectorFromColumns","text":"","code":"namedVectorFromColumns(data, valueColumn, nameColumn)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/namedVectorFromColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Named Vector from two Columns of a Data Frame — namedVectorFromColumns","text":"data data frame valueColumn name column data containing names nameColumn name column data containing values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/namedVectorFromColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Named Vector from two Columns of a Data Frame — namedVectorFromColumns","text":"vector values data[[valueColumn]], named data[[nameColumn]]","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/namedVectorFromColumns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Named Vector from two Columns of a Data Frame — namedVectorFromColumns","text":"","code":"data <- data.frame(a = 1:3, name = LETTERS[1:3]) namedVectorFromColumns(data, valueColumn = \"a\", nameColumn = \"name\") #> A B C  #> 1 2 3"},{"path":"https://kwb-r.github.io/kwb.utils/reference/namedVectorToDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a Named Vector to a Data Frame — namedVectorToDataFrame","title":"Convert a Named Vector to a Data Frame — namedVectorToDataFrame","text":"Convert Named Vector Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/namedVectorToDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a Named Vector to a Data Frame — namedVectorToDataFrame","text":"","code":"namedVectorToDataFrame(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/namedVectorToDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a Named Vector to a Data Frame — namedVectorToDataFrame","text":"x named vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/namedVectorToDataFrame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a Named Vector to a Data Frame — namedVectorToDataFrame","text":"data frame columns name, containing names x  value, containing values x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/namedVectorToDataFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a Named Vector to a Data Frame — namedVectorToDataFrame","text":"","code":"namedVectorToDataFrame(c(a = 1, b = 2, c = 3)) #>   name value #> 1    a     1 #> 2    b     2 #> 3    c     3"},{"path":"https://kwb-r.github.io/kwb.utils/reference/noFactorDataFrame.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Data Frame without Factors — noFactorDataFrame","title":"Create Data Frame without Factors — noFactorDataFrame","text":"Use data.frame stringsAsFactors = FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/noFactorDataFrame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Data Frame without Factors — noFactorDataFrame","text":"","code":"noFactorDataFrame(...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/noFactorDataFrame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Data Frame without Factors — noFactorDataFrame","text":"... passed data.frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/noFactorDataFrame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Data Frame without Factors — noFactorDataFrame","text":"","code":"# data.frame() by default converts character to factor str(data.frame(id = 1:3, letter = LETTERS[1:3])) #> 'data.frame':\t3 obs. of  2 variables: #>  $ id    : int  1 2 3 #>  $ letter: chr  \"A\" \"B\" \"C\"  # noFactorDataFrame keeps character as character str(noFactorDataFrame(id = 1:3, letter = LETTERS[1:3])) #> 'data.frame':\t3 obs. of  2 variables: #>  $ id    : int  1 2 3 #>  $ letter: chr  \"A\" \"B\" \"C\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/objectSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Object Size and Sizes of Sub Structures in Mb — objectSize","title":"Object Size and Sizes of Sub Structures in Mb — objectSize","text":"Object Size Sizes Sub Structures Mb","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/objectSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object Size and Sizes of Sub Structures in Mb — objectSize","text":"","code":"objectSize(x, max_depth = 2, units = \"auto\", depth = 0)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/objectSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object Size and Sizes of Sub Structures in Mb — objectSize","text":"x object max_depth number sub levels list structures shown units passed object.size depth depth recursive call (internal use )","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/objectSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Object Size and Sizes of Sub Structures in Mb — objectSize","text":"x list, list structure returned   list elemenet replaced size, otherwise object size x. list sub list one element assigned   attribute \"total\" containing total size list.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/objectToText.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert R Object to Text Representation — objectToText","title":"Convert R Object to Text Representation — objectToText","text":"Convert R Object Text Representation","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/objectToText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert R Object to Text Representation — objectToText","text":"","code":"objectToText(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/objectToText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert R Object to Text Representation — objectToText","text":"x R object","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/objectToText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert R Object to Text Representation — objectToText","text":"vector character representing R code reproduces   object x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/objectToText.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert R Object to Text Representation — objectToText","text":"","code":"objectToText(1:10) #> [1] \"1:10\" objectToText((1:10)[-5]) #> [1] \"c(1L, 2L, 3L, 4L, 6L, 7L, 8L, 9L, 10L)\" cat(objectToText(head(iris))) #> structure(list(Sepal.Length = c(5.1, 4.9, 4.7, 4.6, 5, 5.4),      Sepal.Width = c(3.5, 3, 3.2, 3.1, 3.6, 3.9), Petal.Length = c(1.4,      1.4, 1.3, 1.5, 1.4, 1.7), Petal.Width = c(0.2, 0.2, 0.2,      0.2, 0.2, 0.4), Species = structure(c(1L, 1L, 1L, 1L, 1L,      1L), levels = c(\"setosa\", \"versicolor\", \"virginica\"), class = \"factor\")), row.names = c(NA,  6L), class = \"data.frame\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/orderBy.html","id":null,"dir":"Reference","previous_headings":"","what":"Order a Data Frame by One or more Columns — orderBy","title":"Order a Data Frame by One or more Columns — orderBy","text":"Order Data Frame One Columns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/orderBy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order a Data Frame by One or more Columns — orderBy","text":"","code":"orderBy(df, by = NULL, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/orderBy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order a Data Frame by One or more Columns — orderBy","text":"df data frame vector column names specifying columns order ... arguments passed order, decreasing","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/orderBy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Order a Data Frame by One or more Columns — orderBy","text":"df sorted newly renumbered rows","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/orderBy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order a Data Frame by One or more Columns — orderBy","text":"","code":"orderBy(iris, by = \"Sepal.Length\") #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            4.3         3.0          1.1         0.1     setosa #> 2            4.4         2.9          1.4         0.2     setosa #> 3            4.4         3.0          1.3         0.2     setosa #> 4            4.4         3.2          1.3         0.2     setosa #> 5            4.5         2.3          1.3         0.3     setosa #> 6            4.6         3.1          1.5         0.2     setosa #> 7            4.6         3.4          1.4         0.3     setosa #> 8            4.6         3.6          1.0         0.2     setosa #> 9            4.6         3.2          1.4         0.2     setosa #> 10           4.7         3.2          1.3         0.2     setosa #> 11           4.7         3.2          1.6         0.2     setosa #> 12           4.8         3.4          1.6         0.2     setosa #> 13           4.8         3.0          1.4         0.1     setosa #> 14           4.8         3.4          1.9         0.2     setosa #> 15           4.8         3.1          1.6         0.2     setosa #> 16           4.8         3.0          1.4         0.3     setosa #> 17           4.9         3.0          1.4         0.2     setosa #> 18           4.9         3.1          1.5         0.1     setosa #> 19           4.9         3.1          1.5         0.2     setosa #> 20           4.9         3.6          1.4         0.1     setosa #> 21           4.9         2.4          3.3         1.0 versicolor #> 22           4.9         2.5          4.5         1.7  virginica #> 23           5.0         3.6          1.4         0.2     setosa #> 24           5.0         3.4          1.5         0.2     setosa #> 25           5.0         3.0          1.6         0.2     setosa #> 26           5.0         3.4          1.6         0.4     setosa #> 27           5.0         3.2          1.2         0.2     setosa #> 28           5.0         3.5          1.3         0.3     setosa #> 29           5.0         3.5          1.6         0.6     setosa #> 30           5.0         3.3          1.4         0.2     setosa #> 31           5.0         2.0          3.5         1.0 versicolor #> 32           5.0         2.3          3.3         1.0 versicolor #> 33           5.1         3.5          1.4         0.2     setosa #> 34           5.1         3.5          1.4         0.3     setosa #> 35           5.1         3.8          1.5         0.3     setosa #> 36           5.1         3.7          1.5         0.4     setosa #> 37           5.1         3.3          1.7         0.5     setosa #> 38           5.1         3.4          1.5         0.2     setosa #> 39           5.1         3.8          1.9         0.4     setosa #> 40           5.1         3.8          1.6         0.2     setosa #> 41           5.1         2.5          3.0         1.1 versicolor #> 42           5.2         3.5          1.5         0.2     setosa #> 43           5.2         3.4          1.4         0.2     setosa #> 44           5.2         4.1          1.5         0.1     setosa #> 45           5.2         2.7          3.9         1.4 versicolor #> 46           5.3         3.7          1.5         0.2     setosa #> 47           5.4         3.9          1.7         0.4     setosa #> 48           5.4         3.7          1.5         0.2     setosa #> 49           5.4         3.9          1.3         0.4     setosa #> 50           5.4         3.4          1.7         0.2     setosa #> 51           5.4         3.4          1.5         0.4     setosa #> 52           5.4         3.0          4.5         1.5 versicolor #> 53           5.5         4.2          1.4         0.2     setosa #> 54           5.5         3.5          1.3         0.2     setosa #> 55           5.5         2.3          4.0         1.3 versicolor #> 56           5.5         2.4          3.8         1.1 versicolor #> 57           5.5         2.4          3.7         1.0 versicolor #> 58           5.5         2.5          4.0         1.3 versicolor #> 59           5.5         2.6          4.4         1.2 versicolor #> 60           5.6         2.9          3.6         1.3 versicolor #> 61           5.6         3.0          4.5         1.5 versicolor #> 62           5.6         2.5          3.9         1.1 versicolor #> 63           5.6         3.0          4.1         1.3 versicolor #> 64           5.6         2.7          4.2         1.3 versicolor #> 65           5.6         2.8          4.9         2.0  virginica #> 66           5.7         4.4          1.5         0.4     setosa #> 67           5.7         3.8          1.7         0.3     setosa #> 68           5.7         2.8          4.5         1.3 versicolor #> 69           5.7         2.6          3.5         1.0 versicolor #> 70           5.7         3.0          4.2         1.2 versicolor #> 71           5.7         2.9          4.2         1.3 versicolor #> 72           5.7         2.8          4.1         1.3 versicolor #> 73           5.7         2.5          5.0         2.0  virginica #> 74           5.8         4.0          1.2         0.2     setosa #> 75           5.8         2.7          4.1         1.0 versicolor #> 76           5.8         2.7          3.9         1.2 versicolor #> 77           5.8         2.6          4.0         1.2 versicolor #> 78           5.8         2.7          5.1         1.9  virginica #> 79           5.8         2.8          5.1         2.4  virginica #> 80           5.8         2.7          5.1         1.9  virginica #> 81           5.9         3.0          4.2         1.5 versicolor #> 82           5.9         3.2          4.8         1.8 versicolor #> 83           5.9         3.0          5.1         1.8  virginica #> 84           6.0         2.2          4.0         1.0 versicolor #> 85           6.0         2.9          4.5         1.5 versicolor #> 86           6.0         2.7          5.1         1.6 versicolor #> 87           6.0         3.4          4.5         1.6 versicolor #> 88           6.0         2.2          5.0         1.5  virginica #> 89           6.0         3.0          4.8         1.8  virginica #> 90           6.1         2.9          4.7         1.4 versicolor #> 91           6.1         2.8          4.0         1.3 versicolor #> 92           6.1         2.8          4.7         1.2 versicolor #> 93           6.1         3.0          4.6         1.4 versicolor #> 94           6.1         3.0          4.9         1.8  virginica #> 95           6.1         2.6          5.6         1.4  virginica #> 96           6.2         2.2          4.5         1.5 versicolor #> 97           6.2         2.9          4.3         1.3 versicolor #> 98           6.2         2.8          4.8         1.8  virginica #> 99           6.2         3.4          5.4         2.3  virginica #> 100          6.3         3.3          4.7         1.6 versicolor #> 101          6.3         2.5          4.9         1.5 versicolor #> 102          6.3         2.3          4.4         1.3 versicolor #> 103          6.3         3.3          6.0         2.5  virginica #> 104          6.3         2.9          5.6         1.8  virginica #> 105          6.3         2.7          4.9         1.8  virginica #> 106          6.3         2.8          5.1         1.5  virginica #> 107          6.3         3.4          5.6         2.4  virginica #> 108          6.3         2.5          5.0         1.9  virginica #> 109          6.4         3.2          4.5         1.5 versicolor #> 110          6.4         2.9          4.3         1.3 versicolor #> 111          6.4         2.7          5.3         1.9  virginica #> 112          6.4         3.2          5.3         2.3  virginica #> 113          6.4         2.8          5.6         2.1  virginica #> 114          6.4         2.8          5.6         2.2  virginica #> 115          6.4         3.1          5.5         1.8  virginica #> 116          6.5         2.8          4.6         1.5 versicolor #> 117          6.5         3.0          5.8         2.2  virginica #> 118          6.5         3.2          5.1         2.0  virginica #> 119          6.5         3.0          5.5         1.8  virginica #> 120          6.5         3.0          5.2         2.0  virginica #> 121          6.6         2.9          4.6         1.3 versicolor #> 122          6.6         3.0          4.4         1.4 versicolor #> 123          6.7         3.1          4.4         1.4 versicolor #> 124          6.7         3.0          5.0         1.7 versicolor #> 125          6.7         3.1          4.7         1.5 versicolor #> 126          6.7         2.5          5.8         1.8  virginica #> 127          6.7         3.3          5.7         2.1  virginica #> 128          6.7         3.1          5.6         2.4  virginica #> 129          6.7         3.3          5.7         2.5  virginica #> 130          6.7         3.0          5.2         2.3  virginica #> 131          6.8         2.8          4.8         1.4 versicolor #> 132          6.8         3.0          5.5         2.1  virginica #> 133          6.8         3.2          5.9         2.3  virginica #> 134          6.9         3.1          4.9         1.5 versicolor #> 135          6.9         3.2          5.7         2.3  virginica #> 136          6.9         3.1          5.4         2.1  virginica #> 137          6.9         3.1          5.1         2.3  virginica #> 138          7.0         3.2          4.7         1.4 versicolor #> 139          7.1         3.0          5.9         2.1  virginica #> 140          7.2         3.6          6.1         2.5  virginica #> 141          7.2         3.2          6.0         1.8  virginica #> 142          7.2         3.0          5.8         1.6  virginica #> 143          7.3         2.9          6.3         1.8  virginica #> 144          7.4         2.8          6.1         1.9  virginica #> 145          7.6         3.0          6.6         2.1  virginica #> 146          7.7         3.8          6.7         2.2  virginica #> 147          7.7         2.6          6.9         2.3  virginica #> 148          7.7         2.8          6.7         2.0  virginica #> 149          7.7         3.0          6.1         2.3  virginica #> 150          7.9         3.8          6.4         2.0  virginica orderBy(iris, by = \"Species\", decreasing = TRUE) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            6.3         3.3          6.0         2.5  virginica #> 2            5.8         2.7          5.1         1.9  virginica #> 3            7.1         3.0          5.9         2.1  virginica #> 4            6.3         2.9          5.6         1.8  virginica #> 5            6.5         3.0          5.8         2.2  virginica #> 6            7.6         3.0          6.6         2.1  virginica #> 7            4.9         2.5          4.5         1.7  virginica #> 8            7.3         2.9          6.3         1.8  virginica #> 9            6.7         2.5          5.8         1.8  virginica #> 10           7.2         3.6          6.1         2.5  virginica #> 11           6.5         3.2          5.1         2.0  virginica #> 12           6.4         2.7          5.3         1.9  virginica #> 13           6.8         3.0          5.5         2.1  virginica #> 14           5.7         2.5          5.0         2.0  virginica #> 15           5.8         2.8          5.1         2.4  virginica #> 16           6.4         3.2          5.3         2.3  virginica #> 17           6.5         3.0          5.5         1.8  virginica #> 18           7.7         3.8          6.7         2.2  virginica #> 19           7.7         2.6          6.9         2.3  virginica #> 20           6.0         2.2          5.0         1.5  virginica #> 21           6.9         3.2          5.7         2.3  virginica #> 22           5.6         2.8          4.9         2.0  virginica #> 23           7.7         2.8          6.7         2.0  virginica #> 24           6.3         2.7          4.9         1.8  virginica #> 25           6.7         3.3          5.7         2.1  virginica #> 26           7.2         3.2          6.0         1.8  virginica #> 27           6.2         2.8          4.8         1.8  virginica #> 28           6.1         3.0          4.9         1.8  virginica #> 29           6.4         2.8          5.6         2.1  virginica #> 30           7.2         3.0          5.8         1.6  virginica #> 31           7.4         2.8          6.1         1.9  virginica #> 32           7.9         3.8          6.4         2.0  virginica #> 33           6.4         2.8          5.6         2.2  virginica #> 34           6.3         2.8          5.1         1.5  virginica #> 35           6.1         2.6          5.6         1.4  virginica #> 36           7.7         3.0          6.1         2.3  virginica #> 37           6.3         3.4          5.6         2.4  virginica #> 38           6.4         3.1          5.5         1.8  virginica #> 39           6.0         3.0          4.8         1.8  virginica #> 40           6.9         3.1          5.4         2.1  virginica #> 41           6.7         3.1          5.6         2.4  virginica #> 42           6.9         3.1          5.1         2.3  virginica #> 43           5.8         2.7          5.1         1.9  virginica #> 44           6.8         3.2          5.9         2.3  virginica #> 45           6.7         3.3          5.7         2.5  virginica #> 46           6.7         3.0          5.2         2.3  virginica #> 47           6.3         2.5          5.0         1.9  virginica #> 48           6.5         3.0          5.2         2.0  virginica #> 49           6.2         3.4          5.4         2.3  virginica #> 50           5.9         3.0          5.1         1.8  virginica #> 51           7.0         3.2          4.7         1.4 versicolor #> 52           6.4         3.2          4.5         1.5 versicolor #> 53           6.9         3.1          4.9         1.5 versicolor #> 54           5.5         2.3          4.0         1.3 versicolor #> 55           6.5         2.8          4.6         1.5 versicolor #> 56           5.7         2.8          4.5         1.3 versicolor #> 57           6.3         3.3          4.7         1.6 versicolor #> 58           4.9         2.4          3.3         1.0 versicolor #> 59           6.6         2.9          4.6         1.3 versicolor #> 60           5.2         2.7          3.9         1.4 versicolor #> 61           5.0         2.0          3.5         1.0 versicolor #> 62           5.9         3.0          4.2         1.5 versicolor #> 63           6.0         2.2          4.0         1.0 versicolor #> 64           6.1         2.9          4.7         1.4 versicolor #> 65           5.6         2.9          3.6         1.3 versicolor #> 66           6.7         3.1          4.4         1.4 versicolor #> 67           5.6         3.0          4.5         1.5 versicolor #> 68           5.8         2.7          4.1         1.0 versicolor #> 69           6.2         2.2          4.5         1.5 versicolor #> 70           5.6         2.5          3.9         1.1 versicolor #> 71           5.9         3.2          4.8         1.8 versicolor #> 72           6.1         2.8          4.0         1.3 versicolor #> 73           6.3         2.5          4.9         1.5 versicolor #> 74           6.1         2.8          4.7         1.2 versicolor #> 75           6.4         2.9          4.3         1.3 versicolor #> 76           6.6         3.0          4.4         1.4 versicolor #> 77           6.8         2.8          4.8         1.4 versicolor #> 78           6.7         3.0          5.0         1.7 versicolor #> 79           6.0         2.9          4.5         1.5 versicolor #> 80           5.7         2.6          3.5         1.0 versicolor #> 81           5.5         2.4          3.8         1.1 versicolor #> 82           5.5         2.4          3.7         1.0 versicolor #> 83           5.8         2.7          3.9         1.2 versicolor #> 84           6.0         2.7          5.1         1.6 versicolor #> 85           5.4         3.0          4.5         1.5 versicolor #> 86           6.0         3.4          4.5         1.6 versicolor #> 87           6.7         3.1          4.7         1.5 versicolor #> 88           6.3         2.3          4.4         1.3 versicolor #> 89           5.6         3.0          4.1         1.3 versicolor #> 90           5.5         2.5          4.0         1.3 versicolor #> 91           5.5         2.6          4.4         1.2 versicolor #> 92           6.1         3.0          4.6         1.4 versicolor #> 93           5.8         2.6          4.0         1.2 versicolor #> 94           5.0         2.3          3.3         1.0 versicolor #> 95           5.6         2.7          4.2         1.3 versicolor #> 96           5.7         3.0          4.2         1.2 versicolor #> 97           5.7         2.9          4.2         1.3 versicolor #> 98           6.2         2.9          4.3         1.3 versicolor #> 99           5.1         2.5          3.0         1.1 versicolor #> 100          5.7         2.8          4.1         1.3 versicolor #> 101          5.1         3.5          1.4         0.2     setosa #> 102          4.9         3.0          1.4         0.2     setosa #> 103          4.7         3.2          1.3         0.2     setosa #> 104          4.6         3.1          1.5         0.2     setosa #> 105          5.0         3.6          1.4         0.2     setosa #> 106          5.4         3.9          1.7         0.4     setosa #> 107          4.6         3.4          1.4         0.3     setosa #> 108          5.0         3.4          1.5         0.2     setosa #> 109          4.4         2.9          1.4         0.2     setosa #> 110          4.9         3.1          1.5         0.1     setosa #> 111          5.4         3.7          1.5         0.2     setosa #> 112          4.8         3.4          1.6         0.2     setosa #> 113          4.8         3.0          1.4         0.1     setosa #> 114          4.3         3.0          1.1         0.1     setosa #> 115          5.8         4.0          1.2         0.2     setosa #> 116          5.7         4.4          1.5         0.4     setosa #> 117          5.4         3.9          1.3         0.4     setosa #> 118          5.1         3.5          1.4         0.3     setosa #> 119          5.7         3.8          1.7         0.3     setosa #> 120          5.1         3.8          1.5         0.3     setosa #> 121          5.4         3.4          1.7         0.2     setosa #> 122          5.1         3.7          1.5         0.4     setosa #> 123          4.6         3.6          1.0         0.2     setosa #> 124          5.1         3.3          1.7         0.5     setosa #> 125          4.8         3.4          1.9         0.2     setosa #> 126          5.0         3.0          1.6         0.2     setosa #> 127          5.0         3.4          1.6         0.4     setosa #> 128          5.2         3.5          1.5         0.2     setosa #> 129          5.2         3.4          1.4         0.2     setosa #> 130          4.7         3.2          1.6         0.2     setosa #> 131          4.8         3.1          1.6         0.2     setosa #> 132          5.4         3.4          1.5         0.4     setosa #> 133          5.2         4.1          1.5         0.1     setosa #> 134          5.5         4.2          1.4         0.2     setosa #> 135          4.9         3.1          1.5         0.2     setosa #> 136          5.0         3.2          1.2         0.2     setosa #> 137          5.5         3.5          1.3         0.2     setosa #> 138          4.9         3.6          1.4         0.1     setosa #> 139          4.4         3.0          1.3         0.2     setosa #> 140          5.1         3.4          1.5         0.2     setosa #> 141          5.0         3.5          1.3         0.3     setosa #> 142          4.5         2.3          1.3         0.3     setosa #> 143          4.4         3.2          1.3         0.2     setosa #> 144          5.0         3.5          1.6         0.6     setosa #> 145          5.1         3.8          1.9         0.4     setosa #> 146          4.8         3.0          1.4         0.3     setosa #> 147          5.1         3.8          1.6         0.2     setosa #> 148          4.6         3.2          1.4         0.2     setosa #> 149          5.3         3.7          1.5         0.2     setosa #> 150          5.0         3.3          1.4         0.2     setosa orderBy(   iris,    by = c(\"Species\", \"Petal.Width\", \"Petal.Length\"),    decreasing = TRUE ) #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1            7.2         3.6          6.1         2.5  virginica #> 2            6.3         3.3          6.0         2.5  virginica #> 3            6.7         3.3          5.7         2.5  virginica #> 4            6.3         3.4          5.6         2.4  virginica #> 5            6.7         3.1          5.6         2.4  virginica #> 6            5.8         2.8          5.1         2.4  virginica #> 7            7.7         2.6          6.9         2.3  virginica #> 8            7.7         3.0          6.1         2.3  virginica #> 9            6.8         3.2          5.9         2.3  virginica #> 10           6.9         3.2          5.7         2.3  virginica #> 11           6.2         3.4          5.4         2.3  virginica #> 12           6.4         3.2          5.3         2.3  virginica #> 13           6.7         3.0          5.2         2.3  virginica #> 14           6.9         3.1          5.1         2.3  virginica #> 15           7.7         3.8          6.7         2.2  virginica #> 16           6.5         3.0          5.8         2.2  virginica #> 17           6.4         2.8          5.6         2.2  virginica #> 18           7.6         3.0          6.6         2.1  virginica #> 19           7.1         3.0          5.9         2.1  virginica #> 20           6.7         3.3          5.7         2.1  virginica #> 21           6.4         2.8          5.6         2.1  virginica #> 22           6.8         3.0          5.5         2.1  virginica #> 23           6.9         3.1          5.4         2.1  virginica #> 24           7.7         2.8          6.7         2.0  virginica #> 25           7.9         3.8          6.4         2.0  virginica #> 26           6.5         3.0          5.2         2.0  virginica #> 27           6.5         3.2          5.1         2.0  virginica #> 28           5.7         2.5          5.0         2.0  virginica #> 29           5.6         2.8          4.9         2.0  virginica #> 30           7.4         2.8          6.1         1.9  virginica #> 31           6.4         2.7          5.3         1.9  virginica #> 32           5.8         2.7          5.1         1.9  virginica #> 33           5.8         2.7          5.1         1.9  virginica #> 34           6.3         2.5          5.0         1.9  virginica #> 35           7.3         2.9          6.3         1.8  virginica #> 36           7.2         3.2          6.0         1.8  virginica #> 37           6.7         2.5          5.8         1.8  virginica #> 38           6.3         2.9          5.6         1.8  virginica #> 39           6.5         3.0          5.5         1.8  virginica #> 40           6.4         3.1          5.5         1.8  virginica #> 41           5.9         3.0          5.1         1.8  virginica #> 42           6.3         2.7          4.9         1.8  virginica #> 43           6.1         3.0          4.9         1.8  virginica #> 44           6.2         2.8          4.8         1.8  virginica #> 45           6.0         3.0          4.8         1.8  virginica #> 46           4.9         2.5          4.5         1.7  virginica #> 47           7.2         3.0          5.8         1.6  virginica #> 48           6.3         2.8          5.1         1.5  virginica #> 49           6.0         2.2          5.0         1.5  virginica #> 50           6.1         2.6          5.6         1.4  virginica #> 51           5.9         3.2          4.8         1.8 versicolor #> 52           6.7         3.0          5.0         1.7 versicolor #> 53           6.0         2.7          5.1         1.6 versicolor #> 54           6.3         3.3          4.7         1.6 versicolor #> 55           6.0         3.4          4.5         1.6 versicolor #> 56           6.9         3.1          4.9         1.5 versicolor #> 57           6.3         2.5          4.9         1.5 versicolor #> 58           6.7         3.1          4.7         1.5 versicolor #> 59           6.5         2.8          4.6         1.5 versicolor #> 60           6.4         3.2          4.5         1.5 versicolor #> 61           5.6         3.0          4.5         1.5 versicolor #> 62           6.2         2.2          4.5         1.5 versicolor #> 63           6.0         2.9          4.5         1.5 versicolor #> 64           5.4         3.0          4.5         1.5 versicolor #> 65           5.9         3.0          4.2         1.5 versicolor #> 66           6.8         2.8          4.8         1.4 versicolor #> 67           7.0         3.2          4.7         1.4 versicolor #> 68           6.1         2.9          4.7         1.4 versicolor #> 69           6.1         3.0          4.6         1.4 versicolor #> 70           6.7         3.1          4.4         1.4 versicolor #> 71           6.6         3.0          4.4         1.4 versicolor #> 72           5.2         2.7          3.9         1.4 versicolor #> 73           6.6         2.9          4.6         1.3 versicolor #> 74           5.7         2.8          4.5         1.3 versicolor #> 75           6.3         2.3          4.4         1.3 versicolor #> 76           6.4         2.9          4.3         1.3 versicolor #> 77           6.2         2.9          4.3         1.3 versicolor #> 78           5.6         2.7          4.2         1.3 versicolor #> 79           5.7         2.9          4.2         1.3 versicolor #> 80           5.6         3.0          4.1         1.3 versicolor #> 81           5.7         2.8          4.1         1.3 versicolor #> 82           5.5         2.3          4.0         1.3 versicolor #> 83           6.1         2.8          4.0         1.3 versicolor #> 84           5.5         2.5          4.0         1.3 versicolor #> 85           5.6         2.9          3.6         1.3 versicolor #> 86           6.1         2.8          4.7         1.2 versicolor #> 87           5.5         2.6          4.4         1.2 versicolor #> 88           5.7         3.0          4.2         1.2 versicolor #> 89           5.8         2.6          4.0         1.2 versicolor #> 90           5.8         2.7          3.9         1.2 versicolor #> 91           5.6         2.5          3.9         1.1 versicolor #> 92           5.5         2.4          3.8         1.1 versicolor #> 93           5.1         2.5          3.0         1.1 versicolor #> 94           5.8         2.7          4.1         1.0 versicolor #> 95           6.0         2.2          4.0         1.0 versicolor #> 96           5.5         2.4          3.7         1.0 versicolor #> 97           5.0         2.0          3.5         1.0 versicolor #> 98           5.7         2.6          3.5         1.0 versicolor #> 99           4.9         2.4          3.3         1.0 versicolor #> 100          5.0         2.3          3.3         1.0 versicolor #> 101          5.0         3.5          1.6         0.6     setosa #> 102          5.1         3.3          1.7         0.5     setosa #> 103          5.1         3.8          1.9         0.4     setosa #> 104          5.4         3.9          1.7         0.4     setosa #> 105          5.0         3.4          1.6         0.4     setosa #> 106          5.7         4.4          1.5         0.4     setosa #> 107          5.1         3.7          1.5         0.4     setosa #> 108          5.4         3.4          1.5         0.4     setosa #> 109          5.4         3.9          1.3         0.4     setosa #> 110          5.7         3.8          1.7         0.3     setosa #> 111          5.1         3.8          1.5         0.3     setosa #> 112          4.6         3.4          1.4         0.3     setosa #> 113          5.1         3.5          1.4         0.3     setosa #> 114          4.8         3.0          1.4         0.3     setosa #> 115          5.0         3.5          1.3         0.3     setosa #> 116          4.5         2.3          1.3         0.3     setosa #> 117          4.8         3.4          1.9         0.2     setosa #> 118          5.4         3.4          1.7         0.2     setosa #> 119          4.8         3.4          1.6         0.2     setosa #> 120          5.0         3.0          1.6         0.2     setosa #> 121          4.7         3.2          1.6         0.2     setosa #> 122          4.8         3.1          1.6         0.2     setosa #> 123          5.1         3.8          1.6         0.2     setosa #> 124          4.6         3.1          1.5         0.2     setosa #> 125          5.0         3.4          1.5         0.2     setosa #> 126          5.4         3.7          1.5         0.2     setosa #> 127          5.2         3.5          1.5         0.2     setosa #> 128          4.9         3.1          1.5         0.2     setosa #> 129          5.1         3.4          1.5         0.2     setosa #> 130          5.3         3.7          1.5         0.2     setosa #> 131          5.1         3.5          1.4         0.2     setosa #> 132          4.9         3.0          1.4         0.2     setosa #> 133          5.0         3.6          1.4         0.2     setosa #> 134          4.4         2.9          1.4         0.2     setosa #> 135          5.2         3.4          1.4         0.2     setosa #> 136          5.5         4.2          1.4         0.2     setosa #> 137          4.6         3.2          1.4         0.2     setosa #> 138          5.0         3.3          1.4         0.2     setosa #> 139          4.7         3.2          1.3         0.2     setosa #> 140          5.5         3.5          1.3         0.2     setosa #> 141          4.4         3.0          1.3         0.2     setosa #> 142          4.4         3.2          1.3         0.2     setosa #> 143          5.8         4.0          1.2         0.2     setosa #> 144          5.0         3.2          1.2         0.2     setosa #> 145          4.6         3.6          1.0         0.2     setosa #> 146          4.9         3.1          1.5         0.1     setosa #> 147          5.2         4.1          1.5         0.1     setosa #> 148          4.8         3.0          1.4         0.1     setosa #> 149          4.9         3.6          1.4         0.1     setosa #> 150          4.3         3.0          1.1         0.1     setosa"},{"path":"https://kwb-r.github.io/kwb.utils/reference/orderDecreasinglyBy.html","id":null,"dir":"Reference","previous_headings":"","what":"Order Data Frame Decreasingly by one Column — orderDecreasinglyBy","title":"Order Data Frame Decreasingly by one Column — orderDecreasinglyBy","text":"Order Data Frame Decreasingly one Column","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/orderDecreasinglyBy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Order Data Frame Decreasingly by one Column — orderDecreasinglyBy","text":"","code":"orderDecreasinglyBy(df, column)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/orderDecreasinglyBy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Order Data Frame Decreasingly by one Column — orderDecreasinglyBy","text":"df data frame column name column order decreasingly.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/orderDecreasinglyBy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Order Data Frame Decreasingly by one Column — orderDecreasinglyBy","text":"","code":"(df <- data.frame(a = 1:3, b = 11:13)) #>   a  b #> 1 1 11 #> 2 2 12 #> 3 3 13 orderDecreasinglyBy(df, \"a\") #>   a  b #> 1 3 13 #> 2 2 12 #> 3 1 11"},{"path":"https://kwb-r.github.io/kwb.utils/reference/pairwise.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder Strings So That Matching Strings are Neighbours — pairwise","title":"Reorder Strings So That Matching Strings are Neighbours — pairwise","text":"Reorder strings strings start characters appear  next ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/pairwise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder Strings So That Matching Strings are Neighbours — pairwise","text":"","code":"pairwise(x, starts = .defaultStarts(x, split), split = \"_\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/pairwise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder Strings So That Matching Strings are Neighbours — pairwise","text":"x vector character starts vector character defining start strings looked x find strings belong together. default take unique strings appearing split character () split split character used create default start strings","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/pairwise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder Strings So That Matching Strings are Neighbours — pairwise","text":"","code":"x <- c(\"a.1\", \"b_hi\", \"c\", \"a.2\", \"d\", \"b_bye\")  # You have the most control when setting the starts argument pairwise(x, starts = c(\"a.\", \"b_\")) #> [1] \"a.1\"   \"a.2\"   \"b_hi\"  \"b_bye\" \"c\"     \"d\"      # Use default starts resulting from splitting at a split character pairwise(x, split = \"_\") #> [1] \"a.1\"   \"b_hi\"  \"b_bye\" \"c\"     \"a.2\"   \"d\"      # This is actually the default pairwise(x) #> [1] \"a.1\"   \"b_hi\"  \"b_bye\" \"c\"     \"a.2\"   \"d\"      # Note that the split parameter is interpreted as a pattern where the # dot has a special meaning unless it is escaped or enclosed in [] pairwise(x, split = \"[.]\") #> [1] \"a.1\"   \"a.2\"   \"b_hi\"  \"c\"     \"d\"     \"b_bye\"  # Same result as in the first example pairwise(x, split = \"[._]\") #> [1] \"a.1\"   \"a.2\"   \"b_hi\"  \"b_bye\" \"c\"     \"d\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/parallelNonNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge two Vectors selecting non-NA Values — parallelNonNA","title":"Merge two Vectors selecting non-NA Values — parallelNonNA","text":"two vectors b length merged way  index result vector contains (1) [] [] NA b[] NA b[] == [], (2) b[] b[] NA [] NA [] == b[], (3) \"\" [] NA b[] NA [] != b[] [] b[] NA","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/parallelNonNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge two Vectors selecting non-NA Values — parallelNonNA","text":"","code":"parallelNonNA(a, b)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/parallelNonNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge two Vectors selecting non-NA Values — parallelNonNA","text":"vector 1 b vector 2","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/parallelNonNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge two Vectors selecting non-NA Values — parallelNonNA","text":"character vector length b","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/parallelNonNA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merge two Vectors selecting non-NA Values — parallelNonNA","text":"","code":"parallelNonNA(c(1, NA, 3), c(NA, 2, NA))  # \"1\" \"2\" \"3\" #> [1] \"1\" \"2\" \"3\"    parallelNonNA(c(1, NA, NA), c(NA, 2, NA)) # \"1\" \"2\" \"\" #> [1] \"1\" \"2\" \"\"     ## A warning is given if (non-NA) values at the same index differ y <- parallelNonNA(c(1, 2, 3), c(1, 2, 4)) #> Warning: There are differences in parallel non-NA values (returned in attribute 'invalid')    y # \"1\" \"2\" \"\" #> [1] \"1\" \"2\" \"\"  #> attr(,\"invalid\") #>   index a b #> 1     3 3 4    ## attribute \"invalid\" contains the index and values of the differing values attr(y, \"invalid\") #>   index a b #> 1     3 3 4"},{"path":"https://kwb-r.github.io/kwb.utils/reference/pasteColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Paste Columns of Data Frame With Separator — pasteColumns","title":"Paste Columns of Data Frame With Separator — pasteColumns","text":"Paste Columns Data Frame Separator","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/pasteColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paste Columns of Data Frame With Separator — pasteColumns","text":"","code":"pasteColumns(x, columns = names(x), sep = \" \", ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/pasteColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paste Columns of Data Frame With Separator — pasteColumns","text":"x data frame columns names columns pasted. Default: columns sep separator character. Default: space (\" \") ... args passed selectColumns, e.g. .stop control whether function shall stop columns exist","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/pasteColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paste Columns of Data Frame With Separator — pasteColumns","text":"vector character element representing values   selected columns one row, pasted separator character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/pasteColumns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paste Columns of Data Frame With Separator — pasteColumns","text":"","code":"x <- data.frame(A = 1:3, B = 2:4) pasteColumns(x, sep = \";\") #> [1] \"1;2\" \"2;3\" \"3;4\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/pasteColumns0.html","id":null,"dir":"Reference","previous_headings":"","what":"Paste Columns of Data Frame Without Separator — pasteColumns0","title":"Paste Columns of Data Frame Without Separator — pasteColumns0","text":"Paste Columns Data Frame Without Separator","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/pasteColumns0.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paste Columns of Data Frame Without Separator — pasteColumns0","text":"","code":"pasteColumns0(x, columns = names(x), ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/pasteColumns0.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paste Columns of Data Frame Without Separator — pasteColumns0","text":"x data frame columns names columns pasted. Default: columns ... args passed pasteColumns","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/pasteColumns0.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paste Columns of Data Frame Without Separator — pasteColumns0","text":"vector character element representing values   selected columns one row, pasted without separator","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/pasteColumns0.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paste Columns of Data Frame Without Separator — pasteColumns0","text":"","code":"x <- data.frame(A = 1:3, B = 2:4) pasteColumns0(x) #> [1] \"12\" \"23\" \"34\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentage.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage — percentage","title":"Percentage — percentage","text":"x / basis, percent","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage — percentage","text":"","code":"percentage(x, basis)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage — percentage","text":"x numeric basis numeric","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage — percentage","text":"100 * x / basis","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentageOfMaximum.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage of Maximum — percentageOfMaximum","title":"Percentage of Maximum — percentageOfMaximum","text":"Percentage Maximum","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentageOfMaximum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage of Maximum — percentageOfMaximum","text":"","code":"percentageOfMaximum(x, na.rm = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentageOfMaximum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage of Maximum — percentageOfMaximum","text":"x vector numeric values na.rm passed max","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentageOfMaximum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage of Maximum — percentageOfMaximum","text":"100 * x / max(x)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentageOfSum.html","id":null,"dir":"Reference","previous_headings":"","what":"Percentage of the Sum of Values — percentageOfSum","title":"Percentage of the Sum of Values — percentageOfSum","text":"Percentage Sum Values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentageOfSum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percentage of the Sum of Values — percentageOfSum","text":"","code":"percentageOfSum(x, na.rm = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentageOfSum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percentage of the Sum of Values — percentageOfSum","text":"x vector numeric values na.rm passed max","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentageOfSum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percentage of the Sum of Values — percentageOfSum","text":"100 * x / sum(x)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/percentageOfSum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Percentage of the Sum of Values — percentageOfSum","text":"","code":"p <- percentageOfSum(1:10) stopifnot(sum(p) == 100)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/posixColumnAtPosition.html","id":null,"dir":"Reference","previous_headings":"","what":"Indices of POSIX columns in a Data Frame — posixColumnAtPosition","title":"Indices of POSIX columns in a Data Frame — posixColumnAtPosition","text":"Indices POSIX columns Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/posixColumnAtPosition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Indices of POSIX columns in a Data Frame — posixColumnAtPosition","text":"","code":"posixColumnAtPosition(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/posixColumnAtPosition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Indices of POSIX columns in a Data Frame — posixColumnAtPosition","text":"x data frame containing date/time column","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/preparePdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Open PDF Device with DIN A4 Dimensions by Default — preparePdf","title":"Open PDF Device with DIN A4 Dimensions by Default — preparePdf","text":"Opens PDF device A4 paper format. calling function plots go specified PDF file pdfFile. Important: PDF file needs closed explicitely grDevices::dev.() desired plots made.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/preparePdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open PDF Device with DIN A4 Dimensions by Default — preparePdf","text":"","code":"preparePdf(   pdfFile = tempfile(fileext = \".pdf\"),   landscape = TRUE,   borderWidth.cm = 2,   borderHeight.cm = 2,   width.cm = NULL,   height.cm = NULL,   makeCurrent = TRUE,   paper = NULL,   ... )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/preparePdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open PDF Device with DIN A4 Dimensions by Default — preparePdf","text":"pdfFile Full path PDF file created landscape TRUE (default), orientation PDF file landscape, else  portrait borderWidth.cm (Total) border width \"width\" direction cm borderHeight.cm (Total) border width \"height\" direction cm width.cm page width cm. Default according DIN A4 height.cm page height cm. Default according DIN A4 makeCurrent TRUE (default), opened PDF device become current device, otherwise current device restored paper passed pdf. default \"A4\" (landscape = FALSE) \"A4r\" (landscape = TRUE). Use paper = \"special\" use dimensions plot. ... arguments passed pdf","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/preparePdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open PDF Device with DIN A4 Dimensions by Default — preparePdf","text":"full path pdf file","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/preparePdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open PDF Device with DIN A4 Dimensions by Default — preparePdf","text":"","code":"if (FALSE) { # Open PDF file by giving a path to preparePdf(). The path is returned. pdf_file <- preparePdf(file.path(tempdir(), \"example_preparePdf.pdf\"))  # Plot something plot(x <- seq(-pi,pi,pi/100), sin(x), type = \"l\")  # Open PDF file in viewer finishAndShowPdf(pdf_file) }"},{"path":"https://kwb-r.github.io/kwb.utils/reference/preparePdfIf.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare PDF File if Condition is Met — preparePdfIf","title":"Prepare PDF File if Condition is Met — preparePdfIf","text":"Prepare PDF File Condition Met","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/preparePdfIf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare PDF File if Condition is Met — preparePdfIf","text":"","code":"preparePdfIf(to.pdf, PDF = \"\", ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/preparePdfIf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare PDF File if Condition is Met — preparePdfIf","text":".pdf condition determining whether preparePdf called PDF full path PDF file. empty string (default) temporary file created path returned ... arguments passed preparePdf","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/preparePdfIf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare PDF File if Condition is Met — preparePdfIf","text":"full path pdf file created condition met \"\" else","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/print.repro_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Method for Object of Class ","title":"Print Method for Object of Class ","text":"Print Method Object Class \"repro_sample\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/print.repro_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Method for Object of Class ","text":"","code":"# S3 method for repro_sample print(x, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/print.repro_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Method for Object of Class ","text":"x object printed ... arguments, used.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/printIf.html","id":null,"dir":"Reference","previous_headings":"","what":"Call Print If Condition Is Met — printIf","title":"Call Print If Condition Is Met — printIf","text":"Call Print Condition Met","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/printIf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call Print If Condition Is Met — printIf","text":"","code":"printIf(condition, x, caption = deparse(substitute(x)))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/printIf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call Print If Condition Is Met — printIf","text":"condition TRUE, print called, else x object printed caption optional. Caption line printed cat printing x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/printable_chars.html","id":null,"dir":"Reference","previous_headings":"","what":"Different Sets of Printable ASCII Characters — printable_chars","title":"Different Sets of Printable ASCII Characters — printable_chars","text":"Different Sets Printable ASCII Characters","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/printable_chars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Different Sets of Printable ASCII Characters — printable_chars","text":"","code":"printable_chars(level = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/printable_chars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Different Sets of Printable ASCII Characters — printable_chars","text":"level one 1, 2, 3. Level 1 characters comprise ten digits 0  9 26 uppercase letters. Level 2 characters comprise characters  level 1 well 26 lowercase letters. Level 3 characters comprise altogether 88 printable characters.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/printable_chars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Different Sets of Printable ASCII Characters — printable_chars","text":"vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/printable_chars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Different Sets of Printable ASCII Characters — printable_chars","text":"","code":"printable_chars(1) #>  [1] \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" #> [20] \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\" printable_chars(2) #>  [1] \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" #> [20] \"J\" \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\" \"a\" \"b\" #> [39] \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" \"u\" #> [58] \"v\" \"w\" \"x\" \"y\" \"z\" printable_chars(3) #>  [1] \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" \"!\" \"#\" \"$\" \"%\" \"&\" \"(\" \")\" \"*\" \"+\" #> [20] \"-\" \".\" \"/\" \":\" \"<\" \"=\" \">\" \"?\" \"@\" \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" #> [39] \"K\" \"L\" \"M\" \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\" \"[\" \"]\" \"^\" #> [58] \"_\" \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" \"o\" \"p\" \"q\" \"r\" #> [77] \"s\" \"t\" \"u\" \"v\" \"w\" \"x\" \"y\" \"z\" \"{\" \"|\" \"}\" \"~\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/quotient.html","id":null,"dir":"Reference","previous_headings":"","what":"Quotient — quotient","title":"Quotient — quotient","text":"Calculate quotient two numbers","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/quotient.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quotient — quotient","text":"","code":"quotient(dividend, divisor, substitute.value = Inf, warn = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/quotient.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quotient — quotient","text":"dividend number devided divisor number dividend devided substitute.value value returned divisor 0 warn TRUE, warning given divisor zero","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/quotient.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quotient — quotient","text":"quotient dividend divisor: dividend/divisor","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rStylePath.html","id":null,"dir":"Reference","previous_headings":"","what":"R compatible file path — rStylePath","title":"R compatible file path — rStylePath","text":"R compatible file path backslashes replaced forward slashes","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rStylePath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R compatible file path — rStylePath","text":"","code":"rStylePath(path)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/rStylePath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R compatible file path — rStylePath","text":"path character string representing file path","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rStylePath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"R compatible file path — rStylePath","text":"path backslashes replaced forward slashes","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/randomMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Matrix with Random Integer Values — randomMatrix","title":"Create a Matrix with Random Integer Values — randomMatrix","text":"Create matrix given dimension fill random integer values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/randomMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Matrix with Random Integer Values — randomMatrix","text":"","code":"randomMatrix(dim = c(sample(10, 1), sample(10, 1)), values = seq_len(100))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/randomMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Matrix with Random Integer Values — randomMatrix","text":"dim integer vector length two containing number rows columns, respectively, output matrix shall contain values set values used within matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/randomMatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Matrix with Random Integer Values — randomMatrix","text":"","code":"# By default, the matrix has a random number of rows between 1 and 10 and # a random number of columns between 1 and 10 and random values of 1:100 randomMatrix() #>      [,1] [,2] [,3] [,4] #> [1,]   13   51   61   83 #> [2,]    9   89   45   46 #> [3,]   36   74    6   64 #> [4,]   61    4   40   64 #> [5,]   21   90   61   26 #> [6,]   53   69   20    6 #> [7,]   69   28   29   99 #> [8,]   52   97   14   27  # You may specify the dimensions (here: 5 rows, 3 columns)... randomMatrix(dim = c(5, 3)) #>      [,1] [,2] [,3] #> [1,]   29   98   52 #> [2,]   98   17   93 #> [3,]   84   20   30 #> [4,]   42   47   20 #> [5,]   70   81    7  # ... and the set of values to be used within the matrix randomMatrix(dim = c(5, 3), values = c(0, 0.5, 1, NA)) #>      [,1] [,2] [,3] #> [1,]  0.5    1  0.5 #> [2,]   NA   NA  0.0 #> [3,]  0.5    1  0.5 #> [4,]  1.0    0  0.5 #> [5,]  0.5    0  0.5"},{"path":"https://kwb-r.github.io/kwb.utils/reference/randomValuesWithSum.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector of random Integer Values of given Sum — randomValuesWithSum","title":"Vector of random Integer Values of given Sum — randomValuesWithSum","text":"Vector random Integer Values given Sum","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/randomValuesWithSum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector of random Integer Values of given Sum — randomValuesWithSum","text":"","code":"randomValuesWithSum(n, sumOfValues, names = seq_len(n))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/randomValuesWithSum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector of random Integer Values of given Sum — randomValuesWithSum","text":"n number values sumOfValues sum values result vector names names elements result vector. Default: seq_len(n)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/randomValuesWithSum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector of random Integer Values of given Sum — randomValuesWithSum","text":"named vector integer values sum(values) == sumOfValues","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rangeToSequence.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Sequence from Range — rangeToSequence","title":"Create Sequence from Range — rangeToSequence","text":"Create Sequence Range","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rangeToSequence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Sequence from Range — rangeToSequence","text":"","code":"rangeToSequence(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/rangeToSequence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Sequence from Range — rangeToSequence","text":"x numeric vector exactly two elements","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rangeToSequence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Sequence from Range — rangeToSequence","text":"integer sequence x[1] x[2]","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rangeToSequence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Sequence from Range — rangeToSequence","text":"","code":"rangeToSequence(c(1, 10)) #>  [1]  1  2  3  4  5  6  7  8  9 10"},{"path":"https://kwb-r.github.io/kwb.utils/reference/rbindAll.html","id":null,"dir":"Reference","previous_headings":"","what":"rbind all data frames given in a list — rbindAll","title":"rbind all data frames given in a list — rbindAll","text":"rbind data frames given list","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rbindAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rbind all data frames given in a list — rbindAll","text":"","code":"rbindAll(x, nameColumn = \"\", remove.row.names = TRUE, namesAsFactor = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/rbindAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rbind all data frames given in a list — rbindAll","text":"x list data frames passed rbind nameColumn optional. given, additional column name added resulting data frame containing name (number args unnamed list) element x corresponding rows belong remove.row.names TRUE (default) row names reset output data frame namesAsFactor TRUE (default) nameColumn given values column nameColumn converted factor","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rbindAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"rbind all data frames given in a list — rbindAll","text":"","code":"L <- list(   A = data.frame(x = 1:2, y = 2:3),   B = data.frame(x = 1:3, y = 2:4) )  L.unnamed <- L names(L.unnamed) <- NULL  y1 <- rbindAll(L) y2 <- rbindAll(L, nameColumn = \"group\") y3 <- rbindAll(L.unnamed, nameColumn = \"group\", namesAsFactor = FALSE) y4 <- rbindAll(L.unnamed, nameColumn = \"group\")  expected1 <- data.frame(   x = c(L$A$x, L$B$x),   y = c(L$A$y, L$B$y) )  expected2 <- cbind(   expected1,   group = as.factor(c(rep(\"A\", nrow(L$A)), rep(\"B\", nrow(L$B)))),   stringsAsFactors = FALSE )  expected3 <- cbind(   expected1,   group = c(rep(1L, nrow(L$A)), rep(2L, nrow(L$B))) )  expected4 <- expected3 expected4$group <- as.factor(expected4$group)  identical(y1, expected1) &&   identical(y2, expected2) &&   identical(y3, expected3) &&   identical(y4, expected4) #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/readArglists.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Argument Lists from CSV File — readArglists","title":"Read Argument Lists from CSV File — readArglists","text":"Read argument lists CSV (MS Excel) file","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readArglists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Argument Lists from CSV File — readArglists","text":"","code":"readArglists(   file = NULL,   configTable = .readArglistsTable.csv(safePath(file), dbg = dbg),   dbg = FALSE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/readArglists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Argument Lists from CSV File — readArglists","text":"file full path comma separated file containing argument specification configTable Instead file may provide data frame containing configuration dbg TRUE, debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readCsvInputFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read CSV File — readCsvInputFile","title":"Read CSV File — readCsvInputFile","text":"Read CSV file giving column descriptions","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readCsvInputFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read CSV File — readCsvInputFile","text":"","code":"readCsvInputFile(   csv,   sep,   dec,   headerRow = 1,   headerPattern = \"\",   columnDescription = NULL,   maxRowToLookForHeader = 10,   stopOnMissingColumns = TRUE,   encoding = \"unknown\",   ... )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/readCsvInputFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read CSV File — readCsvInputFile","text":"csv full path CSV file sep column separator dec decimal character headerRow number row header  (containing column captions) found headerPattern pattern matching header row. headerPattern given headerRow considered columnDescription list column descriptors. list elements named name list elements names shall used returned data frame. list element list elements match (pattern looked header fields), ... maxRowToLookForHeader maximum number rows considered looking header row stopOnMissingColumns TRUE (default) program stops columns defined columnDescription found encoding passed readLines, \"Latin-1\" \"UTF-8\" ... arguments passed read.table","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readDictionaries.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Dictionary Files into a List of Dictionaries — readDictionaries","title":"Read Dictionary Files into a List of Dictionaries — readDictionaries","text":"Read files folder, specified file name pattern, list dictionaries","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readDictionaries.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Dictionary Files into a List of Dictionaries — readDictionaries","text":"","code":"readDictionaries(folder, pattern = \"^dictionary_(.*)[.]txt$\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/readDictionaries.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Dictionary Files into a List of Dictionaries — readDictionaries","text":"folder path folder containing files read pattern regular expression match names files read. pattern expected contain pair parentheses around part file shall used element name returned list","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/readDictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Dictionary from Text File — readDictionary","title":"Read Dictionary from Text File — readDictionary","text":"Reads dictionary (list \"key = value\"-pairs) text file.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readDictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Dictionary from Text File — readDictionary","text":"","code":"readDictionary(file, sorted = TRUE, fileEncoding = \"\", ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/readDictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Dictionary from Text File — readDictionary","text":"file full path dictionary file connection e.g. opened file sorted TRUE (default) entries dictionary sorted keys fileEncoding passed readLinesWithEncoding ... arguments passed readLinesWithEncoding","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/readDictionary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read Dictionary from Text File — readDictionary","text":"","code":"file <- system.file(\"extdata\", \"dictionary.txt\", package = \"kwb.utils\")  dictionary <- readDictionary(file)  resolve(\"file.out\", dictionary, extension = \"csv\") #> [1] \"/root/example_project/out/example_file.csv\" resolve(\"file.out\", dictionary, extension = \"pdf\") #> [1] \"/root/example_project/out/example_file.pdf\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readLinesWithEncoding.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Lines by Giving the File Encoding — readLinesWithEncoding","title":"Read Lines by Giving the File Encoding — readLinesWithEncoding","text":"Read Lines Giving File Encoding","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readLinesWithEncoding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Lines by Giving the File Encoding — readLinesWithEncoding","text":"","code":"readLinesWithEncoding(file, ..., fileEncoding = \"\", encoding = \"unknown\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/readLinesWithEncoding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Lines by Giving the File Encoding — readLinesWithEncoding","text":"file connection object character string ... arguments passed readLines fileEncoding name encoding assumed. Passed encoding file, see . encoding passed readLines.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readPackageFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read File from Package's extdata Folder — readPackageFile","title":"Read File from Package's extdata Folder — readPackageFile","text":"Read File Package's extdata Folder","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readPackageFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read File from Package's extdata Folder — readPackageFile","text":"","code":"readPackageFile(file, package, stringsAsFactors = FALSE, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/readPackageFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read File from Package's extdata Folder — readPackageFile","text":"file name file (without path) package name package read file stringsAsFactors passed utils::read.csv (default: FALSE) ... arguments passed utils::read.csv","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/readPackageFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read File from Package's extdata Folder — readPackageFile","text":"result reading file utils::read.csv","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/recursiveNames.html","id":null,"dir":"Reference","previous_headings":"","what":"names of all sublists of a list — recursiveNames","title":"names of all sublists of a list — recursiveNames","text":"returns names sublists x \"$\"-notation, e.g.   list$sublist$subsublist$subsubsublist","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/recursiveNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"names of all sublists of a list — recursiveNames","text":"","code":"recursiveNames(x, basename = \"\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/recursiveNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"names of all sublists of a list — recursiveNames","text":"x R list. basename name used prefix names found. Default: \"\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/recycle.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"\"Recycle\" Vector given Length","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/recycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"recycle(x, n)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/recycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"x vector \"recycled\" n target length","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/relativeCumulatedSum.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative Cumulated Sum — relativeCumulatedSum","title":"Relative Cumulated Sum — relativeCumulatedSum","text":"relative cumulated sum vector values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/relativeCumulatedSum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative Cumulated Sum — relativeCumulatedSum","text":"","code":"relativeCumulatedSum(values)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/relativeCumulatedSum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative Cumulated Sum — relativeCumulatedSum","text":"values vector numeric values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeAttributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all or selected Attributes of an Object — removeAttributes","title":"Remove all or selected Attributes of an Object — removeAttributes","text":"Remove selected Attributes Object","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeAttributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all or selected Attributes of an Object — removeAttributes","text":"","code":"removeAttributes(x, names = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeAttributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove all or selected Attributes of an Object — removeAttributes","text":"x object names names attributes removed. NULL (default), attributes removed.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeAttributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove all or selected Attributes of an Object — removeAttributes","text":"x, attributes removed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Columns from a Data Frame — removeColumns","title":"Remove Columns from a Data Frame — removeColumns","text":"Remove Columns Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Columns from a Data Frame — removeColumns","text":"","code":"removeColumns(   dframe,   columns = NULL,   columnsToRemove = NULL,   pattern = NULL,   drop = FALSE,   dbg = FALSE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Columns from a Data Frame — removeColumns","text":"dframe data frame, columns vector column names giving columns remove columnsToRemove deprecated. Use argument columns instead. pattern regular expression matching names columns removed. evaluated explicit column names given  columns. drop FALSE, data frame returned case, otherwise result may vector one column remains dbg TRUE (default FALSE), deletion columns reported screen","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Columns from a Data Frame — removeColumns","text":"dframe columns given columns removed.   User attributes dframe restored.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeDuplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Duplicated Values from a Vector — removeDuplicates","title":"Remove Duplicated Values from a Vector — removeDuplicates","text":"Remove Duplicated Values Vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeDuplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Duplicated Values from a Vector — removeDuplicates","text":"","code":"removeDuplicates(x, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeDuplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Duplicated Values from a Vector — removeDuplicates","text":"x vector remove duplicates dbg TRUE debug message shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeDuplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Duplicated Values from a Vector — removeDuplicates","text":"x duplicated values removed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeDuplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Duplicated Values from a Vector — removeDuplicates","text":"","code":"removeDuplicates(c(1, 1, 2, 3, 4, 4)) #> Checking for duplicates in 'c(1, 1, 2, 3, 4, 4)' ... ok. (0.00s)  #> Removing 2 duplicate(s) ... ok. (0.00s)  #> [1] 1 2 3 4"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeElements.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Elements from a List — removeElements","title":"Remove Elements from a List — removeElements","text":"Remove Elements List","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeElements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Elements from a List — removeElements","text":"","code":"removeElements(x, elements)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeElements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Elements from a List — removeElements","text":"x list elements names elements remove","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeElements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Elements from a List — removeElements","text":"x elements names given elements   removed. User attributes x restored.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmpty.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Empty Elements from Vector — removeEmpty","title":"Remove Empty Elements from Vector — removeEmpty","text":"Remove Empty Elements Vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmpty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Empty Elements from Vector — removeEmpty","text":"","code":"removeEmpty(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmpty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Empty Elements from Vector — removeEmpty","text":"x vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmpty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Empty Elements from Vector — removeEmpty","text":"x elements isNaOrEmpty TRUE removed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmpty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Empty Elements from Vector — removeEmpty","text":"","code":"removeEmpty(c(1, NA, 3)) #> [1] 1 3 removeEmpty(c(\"a\", \"\", \"b\", NA, \"c\", \" \", \"d\")) #> [1] \"a\" \"b\" \"c\" \"d\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmpty2.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Empty Elements from Vector of Character — removeEmpty2","title":"Remove Empty Elements from Vector of Character — removeEmpty2","text":"Remove Empty Elements Vector Character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmpty2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Empty Elements from Vector of Character — removeEmpty2","text":"","code":"removeEmpty2(x, dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmpty2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Empty Elements from Vector of Character — removeEmpty2","text":"x vector character dbg TRUE (default FALSE) message  number removed elements printed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmpty2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Empty Elements from Vector of Character — removeEmpty2","text":"","code":"removeEmpty2(c(\"a\", \"\", \"c\")) #> [1] \"a\" \"c\" removeEmpty2(c(\"a\", \"\", \"c\", \"\", \"e\"), dbg = TRUE) #> 2 elements removed. #> [1] \"a\" \"c\" \"e\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmptyColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove empty Columns from a Data Frame — removeEmptyColumns","title":"Remove empty Columns from a Data Frame — removeEmptyColumns","text":"Remove empty Columns Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmptyColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove empty Columns from a Data Frame — removeEmptyColumns","text":"","code":"removeEmptyColumns(   x,   drop = FALSE,   FUN = function(x) all(is.na(x)),   dbg = TRUE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmptyColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove empty Columns from a Data Frame — removeEmptyColumns","text":"x data frame drop TRUE one column remains column returned vector FUN function called column determine values column empty. Default: function(x) (.na(x)) dbg TRUE debug messages shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeEmptyColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove empty Columns from a Data Frame — removeEmptyColumns","text":"data frame x empty columns (columns NA rows)    removed","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeExtension.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove File Name Extension — removeExtension","title":"Remove File Name Extension — removeExtension","text":"Remove File Name Extension","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeExtension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove File Name Extension — removeExtension","text":"","code":"removeExtension(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeExtension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove File Name Extension — removeExtension","text":"x vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeExtension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove File Name Extension — removeExtension","text":"","code":"removeExtension(\"example.R\") #> [1] \"example\" removeExtension(\"any/path/example.txt\") #> [1] \"any/path/example\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeLeadingSlashes.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Leading Slashes of Strings — removeLeadingSlashes","title":"Remove Leading Slashes of Strings — removeLeadingSlashes","text":"Remove Leading Slashes Strings","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeLeadingSlashes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Leading Slashes of Strings — removeLeadingSlashes","text":"","code":"removeLeadingSlashes(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeLeadingSlashes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Leading Slashes of Strings — removeLeadingSlashes","text":"x vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeLeadingSlashes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Leading Slashes of Strings — removeLeadingSlashes","text":"modified version x leading slashes elements   x removed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeLeadingSlashes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Leading Slashes of Strings — removeLeadingSlashes","text":"","code":"removeLeadingSlashes(c(\"a\", \"/b\", \"//c\")) #> [1] \"a\" \"b\" \"c\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeSpaces.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove all Spaces in String(s) — removeSpaces","title":"Remove all Spaces in String(s) — removeSpaces","text":"Remove Spaces String(s)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeSpaces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove all Spaces in String(s) — removeSpaces","text":"","code":"removeSpaces(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeSpaces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove all Spaces in String(s) — removeSpaces","text":"x (vector ) character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/removeSpaces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove all Spaces in String(s) — removeSpaces","text":"x spaces removed","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/renameAndSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename and Select Columns of a Data Frame — renameAndSelect","title":"Rename and Select Columns of a Data Frame — renameAndSelect","text":"Rename Select Columns Data Frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/renameAndSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename and Select Columns of a Data Frame — renameAndSelect","text":"","code":"renameAndSelect(data, renames, columns = unlist(renames))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/renameAndSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename and Select Columns of a Data Frame — renameAndSelect","text":"data data frame renames list defining renames form \"oldName\" = \"newName\" pairs columns (new) names columns selected","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/renameColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Columns in a Data Frame — renameColumns","title":"Rename Columns in a Data Frame — renameColumns","text":"Rename columns data frame giving tupels original name substitute name named elements list \"renames\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/renameColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Columns in a Data Frame — renameColumns","text":"","code":"renameColumns(x, renamings = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/renameColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Columns in a Data Frame — renameColumns","text":"x data.frame renamings list named elements defines column rename form <old-name> = <new-name>","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/renameColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Columns in a Data Frame — renameColumns","text":"dframe columns renamed specified renames","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/repeated.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeated Substring — repeated","title":"Repeated Substring — repeated","text":"Repeated Substring","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/repeated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeated Substring — repeated","text":"","code":"repeated(x, n)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/repeated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeated Substring — repeated","text":"x substring repeated pasted together new string n number times repeat substring","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/repeated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeated Substring — repeated","text":"vector character length one","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/repeated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Repeated Substring — repeated","text":"","code":"repeated(\"no \", 2) #> [1] \"no no \" repeated(\"yes \", 3) #> [1] \"yes yes yes \" repeated(\"yes no \", 3) #> [1] \"yes no yes no yes no \""},{"path":"https://kwb-r.github.io/kwb.utils/reference/replaceFileExtension.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace File Name Extension — replaceFileExtension","title":"Replace File Name Extension — replaceFileExtension","text":"Replace file name extension file name file path","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/replaceFileExtension.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace File Name Extension — replaceFileExtension","text":"","code":"replaceFileExtension(file, extension)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/replaceFileExtension.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace File Name Extension — replaceFileExtension","text":"file file name full path file extension new file name extension (including dot, e.g. \".txt\")","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/replaceFileExtension.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Replace File Name Extension — replaceFileExtension","text":"","code":"replaceFileExtension(file = \"run.bat\", \".txt\") #> [1] \"run.txt\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/reproducibleSample.html","id":null,"dir":"Reference","previous_headings":"","what":"Reproducible Call to the Sample Function — reproducibleSample","title":"Reproducible Call to the Sample Function — reproducibleSample","text":"function calls sample stores values required reproduce exact sampling attribute  random_seed returned vector. attribute passed another call function, values returned first call.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/reproducibleSample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reproducible Call to the Sample Function — reproducibleSample","text":"","code":"reproducibleSample(..., FUN = sample, random_seed = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/reproducibleSample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reproducible Call to the Sample Function — reproducibleSample","text":"... arguments passed FUN. FUN sample function called. Default: sample. random_seed vector integer stored .Random.seed.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/reproducibleSample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reproducible Call to the Sample Function — reproducibleSample","text":"function returns sample returns    attribute random_seed attached.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/reproducibleSample.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reproducible Call to the Sample Function — reproducibleSample","text":"","code":"# Take a sample x <- reproducibleSample(1:100, 10) x #>  [1] 53 94 10 19 45 12 99 70  2 24  # The full seed vector is returned in the attribute \"random_seed\" random_seed <- attr(x, \"random_seed\")  # Take a new sample, this time passing the seed vector y <- reproducibleSample(1:100, 10, random_seed = random_seed) y #>  [1] 53 94 10 19 45 12 99 70  2 24  # The values are identical to the values of the first sampling identical(x, y) #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/resetRowNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset row names to 1:n — resetRowNames","title":"Reset row names to 1:n — resetRowNames","text":"Reset row names data frame x 1:nrow(x) setting   row.names attribute NULL.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/resetRowNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset row names to 1:n — resetRowNames","text":"","code":"resetRowNames(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/resetRowNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset row names to 1:n — resetRowNames","text":"x data frame matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/resetRowNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset row names to 1:n — resetRowNames","text":"","code":"persons <- data.frame(id = c(1, 2, 3), name = c(\"Peter\", \"Paul\", \"Mary\"))  persons.ordered <- persons[order(persons$name), ]  # Original row names persons.ordered #>   id  name #> 3  3  Mary #> 2  2  Paul #> 1  1 Peter  # Reset row names resetRowNames(persons.ordered) #>   id  name #> 1  3  Mary #> 2  2  Paul #> 3  1 Peter"},{"path":"https://kwb-r.github.io/kwb.utils/reference/resolve.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve String(s) Using a Dictionary — resolve","title":"Resolve String(s) Using a Dictionary — resolve","text":"Resolve String(s) Using Dictionary","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/resolve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve String(s) Using a Dictionary — resolve","text":"","code":"resolve(x, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/resolve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve String(s) Using a Dictionary — resolve","text":"x vector character resolved list elements resolved using \"dictionary\". dictionary list  key = value pairs defining string replacements. ... Unnamed arguments treated () dictionaries. merged first one dictionary merging (named) key = value pairs.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/resolve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve String(s) Using a Dictionary — resolve","text":"","code":"file <- system.file(\"extdata\", \"dictionary.txt\", package = \"kwb.utils\")  dictionary <- readDictionary(file)  # Resolve the dictionary resolve(dictionary) #> $dir.out #> [1] \"/root/example_project/out\" #>  #> $dir.project #> [1] \"/root/example_project\" #>  #> $dir.root #> [1] \"/root\" #>  #> $equation #> [1] \"a = b + c\" #>  #> $file.out #> [1] \"/root/example_project/out/example_file.<extension>\" #>  #> $project #> [1] \"example_project\" #>   # Resolve the dictionary by setting an undefined placeholder resolve(dictionary, extension = \"pdf\") #> $dir.out #> [1] \"/root/example_project/out\" #>  #> $dir.project #> [1] \"/root/example_project\" #>  #> $dir.root #> [1] \"/root\" #>  #> $equation #> [1] \"a = b + c\" #>  #> $file.out #> [1] \"/root/example_project/out/example_file.pdf\" #>  #> $project #> [1] \"example_project\" #>     # Resolve a string resolve(\"dir.project\", dictionary) #> [1] \"/root/example_project\"  # Set a placeholder \"on-the-fly\" resolve(\"file.out\", dictionary, extension = \"pdf\") #> [1] \"/root/example_project/out/example_file.pdf\"  # Override a placeholder \"on-the-fly\" resolve(\"dir.project\", dictionary, project = \"new_project\") #> [1] \"/root/new_project\"  # Resolve a vector of strings resolve(c(\"dir.root\", \"dir.project\"), dictionary, project = \"vector\") #> [1] \"/root\"        \"/root/vector\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/resolveAll.html","id":null,"dir":"Reference","previous_headings":"","what":"Resolve all Placeholders in a Dictionary — resolveAll","title":"Resolve all Placeholders in a Dictionary — resolveAll","text":"Resolve Placeholders Dictionary","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/resolveAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resolve all Placeholders in a Dictionary — resolveAll","text":"","code":"resolveAll(dictionary, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/resolveAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resolve all Placeholders in a Dictionary — resolveAll","text":"dictionary list named elements element name represents key element value represents value assigned key. ... additional assignments form <key> = <value> temporarily added dictionary resolving","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/resolveAll.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resolve all Placeholders in a Dictionary — resolveAll","text":"","code":"# Define a dictionary in the form of a list dictionary <- list(   basedir = \"C:/myNicefolder\",   projectdir = \"<basedir>/projects/<project_name>\",   inputdir = \"<projectdir>/input\",   outputdir = \"<projectdir>/output\" )  # Resolve all entries in the dictionary, with different values for the # placeholder \"<project_name> which is undefined in the original dictionary dictionary.1 <- resolveAll(dictionary, project_name = \"project_1\") dictionary.2 <- resolveAll(dictionary, project_name = \"project_2\")  # Define entries of the dictionary to resolve keys <- c(\"inputdir\", \"outputdir\")  # Resolve the entries using the two different dictionaries resolve(keys, dictionary.1) #> [1] \"C:/myNicefolder/projects/project_1/input\"  #> [2] \"C:/myNicefolder/projects/project_1/output\" resolve(keys, dictionary.2) #> [1] \"C:/myNicefolder/projects/project_2/input\"  #> [2] \"C:/myNicefolder/projects/project_2/output\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/revertListAssignments.html","id":null,"dir":"Reference","previous_headings":"","what":"Revert List Assignments — revertListAssignments","title":"Revert List Assignments — revertListAssignments","text":"Switch list elements names","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/revertListAssignments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Revert List Assignments — revertListAssignments","text":"","code":"revertListAssignments(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/revertListAssignments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Revert List Assignments — revertListAssignments","text":"x list named elements","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/revertListAssignments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Revert List Assignments — revertListAssignments","text":"list names x elements elements x names","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/revertListAssignments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Revert List Assignments — revertListAssignments","text":"","code":"abbreviation <- list(de = \"Germany\", en = \"England\")  revertListAssignments(abbreviation) #> $Germany #> [1] \"de\" #>  #> $England #> [1] \"en\" #>   ## reverting twice results in the original list identical(   abbreviation,    revertListAssignments(revertListAssignments(abbreviation)) ) #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/right.html","id":null,"dir":"Reference","previous_headings":"","what":"Right Part of a String — right","title":"Right Part of a String — right","text":"Right Part String","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/right.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Right Part of a String — right","text":"","code":"right(x, n)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/right.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Right Part of a String — right","text":"x vector character n number characters kept end character  string within x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/right.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Right Part of a String — right","text":"vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/right.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Right Part of a String — right","text":"","code":"right(\"Good Morning\", 7) #> [1] \"Morning\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/roundColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Round Columns to given Number of Digits — roundColumns","title":"Round Columns to given Number of Digits — roundColumns","text":"Round Columns given Number Digits","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/roundColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Round Columns to given Number of Digits — roundColumns","text":"","code":"roundColumns(   dframe,   columns = NULL,   digits = NULL,   pattern = NULL,   columnNames = NULL )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/roundColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Round Columns to given Number of Digits — roundColumns","text":"dframe data frame containing numeric columns rounded columns names (numeric) columns dframe rounded. digits number digits rounded (vector length 1 expected) list assignments form: <column_name> = <n_digits>. give list , need set argument columnNames. pattern regular expression matching names columns rounded. evaluated explicit column names given  columnNames. columnNames deprecated. Use argument columns instead.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/roundColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Round Columns to given Number of Digits — roundColumns","text":"dframe columns given columnNames rounded   digits digits.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rowOrColumnwisePercentage.html","id":null,"dir":"Reference","previous_headings":"","what":"Rowwise or Columnwise Percentage — rowOrColumnwisePercentage","title":"Rowwise or Columnwise Percentage — rowOrColumnwisePercentage","text":"Calculate percentage (value divided sum values row/column)  row/column","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rowOrColumnwisePercentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rowwise or Columnwise Percentage — rowOrColumnwisePercentage","text":"","code":"rowOrColumnwisePercentage(x, rowwise, default = 0, digits = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/rowOrColumnwisePercentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rowwise or Columnwise Percentage — rowOrColumnwisePercentage","text":"x two dimensional numeric data structure rowwise TRUE percentage calculated row, else column default default value used calculated percentage  NA. digits number digits (default: 1) resulting  percentages rounded. Set NA suppress rounding","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/rowwisePercentage.html","id":null,"dir":"Reference","previous_headings":"","what":"Rowwise Percentage — rowwisePercentage","title":"Rowwise Percentage — rowwisePercentage","text":"Calculate percentage (value divided sum values row)  row","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rowwisePercentage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rowwise Percentage — rowwisePercentage","text":"","code":"rowwisePercentage(x, default = 0, digits = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/rowwisePercentage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rowwise Percentage — rowwisePercentage","text":"x two dimensional numeric data structure default default value used calculated percentage  NA. digits number digits (default: 1) resulting  percentages rounded. Set NA suppress rounding","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/rowwisePercentage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rowwise Percentage — rowwisePercentage","text":"","code":"# Create a random matrix of integer values M1 <- matrix(sample(100, 12), nrow = 4, dimnames = list(LETTERS[1:4], 1:3))  # Introduce some NA values <- as.numeric(M1) values[sample(length(values), 3)] <- NA M2 <- matrix(values, nrow = nrow(M1), dimnames = dimnames(M1))  M1 #>    1  2  3 #> A 31 64 35 #> B 78 62 61 #> C  7 34 92 #> D 66 21 54 rowwisePercentage(M1) #>      1    2    3 #> A 23.8 49.2 26.9 #> B 38.8 30.8 30.3 #> C  5.3 25.6 69.2 #> D 46.8 14.9 38.3  M2 #>    1  2  3 #> A 31 64 NA #> B 78 NA 61 #> C  7 NA 92 #> D 66 21 54 rowwisePercentage(M2) #>      1    2    3 #> A 32.6 67.4  0.0 #> B 56.1  0.0 43.9 #> C  7.1  0.0 92.9 #> D 46.8 14.9 38.3 rowwisePercentage(M2, default = 0) #>      1    2    3 #> A 32.6 67.4  0.0 #> B 56.1  0.0 43.9 #> C  7.1  0.0 92.9 #> D 46.8 14.9 38.3"},{"path":"https://kwb-r.github.io/kwb.utils/reference/runBatchfileInDirectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a Batch File in a given Directory — runBatchfileInDirectory","title":"Run a Batch File in a given Directory — runBatchfileInDirectory","text":"Run Batch File given Directory","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/runBatchfileInDirectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a Batch File in a given Directory — runBatchfileInDirectory","text":"","code":"runBatchfileInDirectory(batchfile, directory = dirname(batchfile), ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/runBatchfileInDirectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a Batch File in a given Directory — runBatchfileInDirectory","text":"batchfile full path Windows batch file directory directory batchfile invoked. Default: directory batch file ... arguments passed shell.exec","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/runInDirectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Change Working Directory and Run Function — runInDirectory","title":"Change Working Directory and Run Function — runInDirectory","text":"Change Working Directory Run Function","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/runInDirectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change Working Directory and Run Function — runInDirectory","text":"","code":"runInDirectory(target.dir = tempdir(), FUN, ..., .dbg = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/runInDirectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change Working Directory and Run Function — runInDirectory","text":"target.dir target directory. Default: tempdir() FUN function invoked ... arguments passed function FUN .dbg TRUE, debug messages changing directory shown. Default: FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeColumnBind.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"x1 NULL x2 returned otherwise cbind(x1, x2)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeColumnBind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"safeColumnBind(x1, x2)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeColumnBind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"x1 first object passed cbind x2 second object passed  cbind","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeColumnBind.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"","text":"result cbind(x1, x2) x2 x1  NULL.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeColumnBind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"","text":"","code":"x1 <- NULL    for (i in 1:3) {      x2 <- data.frame(a = 1:3, b = rnorm(3))   x1 <- safeColumnBind(x1, x2)      # using cbind would result in an error:   # x1 <- cbind(x1, x2) }    x1 #>   a          b a          b a          b #> 1 1 -1.2029287 1 -1.0567783 1 -0.6208269 #> 2 2  0.8312837 2  1.3164954 2 -0.2494853 #> 3 3  0.9690959 3  0.4284974 3 -1.2991102"},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeMerge.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge By Checking Column Existence — safeMerge","title":"Merge By Checking Column Existence — safeMerge","text":"check existence columns merging","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeMerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge By Checking Column Existence — safeMerge","text":"","code":"safeMerge(x, y, by = intersect(names(x), names(y)), by.x = by, by.y = by, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeMerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge By Checking Column Existence — safeMerge","text":"x just merge y just merge just merge .x just merge .y just merge ... additional arguments passed merge","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safePath.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop if Path does not Exist — safePath","title":"Stop if Path does not Exist — safePath","text":"Check file folder path exists return path stop path exist","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safePath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop if Path does not Exist — safePath","text":"","code":"safePath(...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/safePath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop if Path does not Exist — safePath","text":"... character vectors passed file.path","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safePath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stop if Path does not Exist — safePath","text":"path given path","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBind.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"rbind two data frames even column names differ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBind.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"safeRowBind(dataFrame1, dataFrame2)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBind.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"dataFrame1 first data frame dataFrame2 second data frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBind.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"","text":"","code":"kwb.utils::safeRowBind(   data.frame(A = 1:2, B = 2:3),   data.frame(B = 3:4, C = 4:5) ) #>    A B  C #> 1  1 2 NA #> 2  2 3 NA #> 3 NA 3  4 #> 4 NA 4  5"},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBindAll.html","id":null,"dir":"Reference","previous_headings":"","what":"","title":"","text":"rbind data frames list using safeRowBind","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBindAll.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"","text":"","code":"safeRowBindAll(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBindAll.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"","text":"x list data frames","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBindAll.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"","text":"data frame resulting \"rbind\"-ing data frames x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBindOfListElements.html","id":null,"dir":"Reference","previous_headings":"","what":"row-bind data frames in a list of lists — safeRowBindOfListElements","title":"row-bind data frames in a list of lists — safeRowBindOfListElements","text":"row-bind data frames list lists","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBindOfListElements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"row-bind data frames in a list of lists — safeRowBindOfListElements","text":"","code":"safeRowBindOfListElements(x, elementName)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBindOfListElements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"row-bind data frames in a list of lists — safeRowBindOfListElements","text":"x list lists contains data frame element elementName elementName name list element sublist x contains data frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBindOfListElements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"row-bind data frames in a list of lists — safeRowBindOfListElements","text":"data frame resulting \"row-binding\" data frames.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/safeRowBindOfListElements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"row-bind data frames in a list of lists — safeRowBindOfListElements","text":"","code":"x <- list(   list(     number = 1,     data = data.frame(x = 1:2, y = 2:3)   ),   list(     number = 2,     data = data.frame(x = 11:12, y = 12:13)   ) )    safeRowBindOfListElements(x, \"data\") #>    x  y #> 1  1  2 #> 2  2  3 #> 3 11 12 #> 4 12 13    # also working if the column names of the data frames in the \"data\" elements # differ. x[[1]]$data$z = 13:14 safeRowBindOfListElements(x, \"data\") #>    x  y  z #> 1  1  2 13 #> 2  2  3 14 #> 3 11 12 NA #> 4 12 13 NA"},{"path":"https://kwb-r.github.io/kwb.utils/reference/selectColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Columns from a Data Frame — selectColumns","title":"Select Columns from a Data Frame — selectColumns","text":"Select columns data frame. Stop message columns exist","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/selectColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Columns from a Data Frame — selectColumns","text":"","code":"selectColumns(   x,   columns = NULL,   pattern = NULL,   drop = (length(columns) == 1),   do.stop = TRUE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/selectColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Columns from a Data Frame — selectColumns","text":"x data frame columns vector column names. columns length 0 NULL (default) NA x returned unchanged. pattern regular expression matching names columns selected. evaluated explicit column names given  columns. drop TRUE one column selected result vector (one dimensional) containing values selected column data frame. One dimension dropped . See help(\"[.data.frame\"). default TRUE  length(columns) == 1, else FALSE. .stop flag controls whether function stops (.stop = TRUE) (.stop = FALSE) non-existing columns selected. .stop = FALSE columns selected actually exist","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/selectColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Columns from a Data Frame — selectColumns","text":"data frame containing columns x specified  columns x columns NULL   vector containing values column value columns   length 1 drop = TRUE (default case).","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/selectElements.html","id":null,"dir":"Reference","previous_headings":"","what":"Select (and Rename) Elements from List — selectElements","title":"Select (and Rename) Elements from List — selectElements","text":"select (rename, required) elements list. Stop message  elements exist","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/selectElements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select (and Rename) Elements from List — selectElements","text":"","code":"selectElements(x, elements = NULL, do.stop = TRUE, do.warn = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/selectElements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select (and Rename) Elements from List — selectElements","text":"x list elements vector element names. names named elements names output list .stop flag controls whether function stops (.stop = TRUE) (.stop = FALSE) non-existing elements selected. .stop = FALSE elements selected actually exist .warn TRUE (default) .stop = FALSE warning given elements exist. Set FALSE suppress warnings","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/selectElements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select (and Rename) Elements from List — selectElements","text":"list containing elements x specified  elements x[[elements]] length elements 1    list() elements empty. elements vector  elements named, names used output list.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/selectElements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select (and Rename) Elements from List — selectElements","text":"","code":"L <- list(a = 1, b = 2, c = 3, d = 4)    # Select elements selectElements(L, c(\"a\", \"c\")) #> $a #> [1] 1 #>  #> $c #> [1] 3 #>   # Select and rename at the same time selectElements(L, elements = c(a.new = \"a\", c.new = \"c\", \"b\")) #> $a.new #> [1] 1 #>  #> $c.new #> [1] 3 #>  #> $b #> [1] 2 #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/setColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the column(s) of a data frame — setColumns","title":"Set the column(s) of a data frame — setColumns","text":"Set (new existing) column(s) data frame.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/setColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the column(s) of a data frame — setColumns","text":"","code":"setColumns(.x, ..., dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/setColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the column(s) of a data frame — setColumns","text":".x data frame ... column assignment(s) form <columnName> = <values> dbg TRUE (default) creation new columns reported screen","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/setColumns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the column(s) of a data frame — setColumns","text":"data frame columns modified appended specified  assignments","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/setColumns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the column(s) of a data frame — setColumns","text":"","code":"# Create a data frame x <- data.frame(a = 1:5)  # Option 1: use the \"$\" operator x1 <- x x1$b <- 2:6 x1$c <- 3:7  # Option 2: use setColumns x2 <- setColumns(x, b = 2:6, c = 3:7) #> Provide column 'b' to data frame 'x'... ok. #> Provide column 'c' to data frame 'x'... ok.  # The result is the same identical(x1, x2) #> [1] TRUE  # but the creation of columns has been reported on the console (dbg = TRUE by # default)  ## Provide column 'b' to data frame 'x'... ok. ## Provide column 'c' to data frame 'x'... ok."},{"path":"https://kwb-r.github.io/kwb.utils/reference/setLoaded.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the ","title":"Set the ","text":"may use function last line script indicate  script already loaded. information stored R  option \"kwb.utils.loaded\" may read information back  isLoaded.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/setLoaded.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the ","text":"","code":"setLoaded(scriptName, isLoaded = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/setLoaded.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the ","text":"scriptName name script want set \"loaded\" state isLoaded logical. Use TRUE indicate script scriptName loaded use FALSE indicate script loaded (e.g. cleared workspace meanwhile).","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/setLoaded.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the ","text":"","code":"# If you have a script with the main part on top and the required functions # defined below (as recommended by Robert C. Martin, the author of \"Clean # Code\") your script may look like this:  # Main part -----  # Check if the script has already been loaded (i.e. if setLoaded() has been  # called, see end of script). If yes, we can enter the main section. Otherwise # we have to skip the main section since the function sayHello() is not yet # defined. if (isLoaded(\"welcome\")) {   sayHello(who = \"Hauke\") }  # Functions ----- sayHello <- function(who) {   clearConsole()   cat(\"***\\n***\\n*** Hello\", who, \"how are you?\\n***\\n***\\n\") }  # At the end of your script, call setLoaded() to indicate that your script is # loaded now. If you \"source\" the script a second time, isLoaded(\"welcome\")  # will return TRUE and thus the main section will be entered... setLoaded(\"welcome\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/setMatrixColumns.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Matrix Columns to Values — setMatrixColumns","title":"Set Matrix Columns to Values — setMatrixColumns","text":"Set matrix columns given names fix values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/setMatrixColumns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Matrix Columns to Values — setMatrixColumns","text":"","code":"setMatrixColumns(m, columnValuePairs, warn = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/setMatrixColumns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Matrix Columns to Values — setMatrixColumns","text":"m matrix columnValuePairs list elements defines assignment form <column-name> = <value> warn TRUE, warnings given columns named columnValuePairs exist matrix m","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/shorten.html","id":null,"dir":"Reference","previous_headings":"","what":"Shorten Strings to a Maximum Length — shorten","title":"Shorten Strings to a Maximum Length — shorten","text":"Shorten Strings Maximum Length","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/shorten.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shorten Strings to a Maximum Length — shorten","text":"","code":"shorten(x, max_chars = 10, delimiter = \"...\")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/shorten.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shorten Strings to a Maximum Length — shorten","text":"x vector character max_chars maximum number characters strings  x shortened delimiter string used separater start end  strings x longer max_chars characters","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/shorten.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shorten Strings to a Maximum Length — shorten","text":"x strings longer max_chars characters   shortend replacing characters centre delimiter  string.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/showPackageObjects.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Names of Objects/Functions in a Package — showPackageObjects","title":"Show Names of Objects/Functions in a Package — showPackageObjects","text":"Show Names Objects/Functions Package","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/showPackageObjects.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Names of Objects/Functions in a Package — showPackageObjects","text":"","code":"showPackageObjects(package = \"kwb.utils\", show = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/showPackageObjects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Names of Objects/Functions in a Package — showPackageObjects","text":"package name package show functions show TRUE (default) function names printed console otherwise vector function names returned","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/sourceScripts.html","id":null,"dir":"Reference","previous_headings":"","what":"Load R Scripts with source — sourceScripts","title":"Load R Scripts with source — sourceScripts","text":"Load R Scripts source","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/sourceScripts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load R Scripts with source — sourceScripts","text":"","code":"sourceScripts(scripts, dbg = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/sourceScripts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load R Scripts with source — sourceScripts","text":"scripts full paths R scripts dbg TRUE (default) log messages (\"loading... ok\") shown","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/sourceScripts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load R Scripts with source — sourceScripts","text":"vector script paths returned invisibly","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/space.html","id":null,"dir":"Reference","previous_headings":"","what":"Space String Used for Indentation — space","title":"Space String Used for Indentation — space","text":"Chain together depth * tabLength spaces","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Space String Used for Indentation — space","text":"","code":"space(depth = 1L, tabLength = 2L)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Space String Used for Indentation — space","text":"depth depth indentation tabLength number spaces per indentation level","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/space.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Space String Used for Indentation — space","text":"vector character length one consisting depth *   tabLength space characters","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/space.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Space String Used for Indentation — space","text":"","code":"cat(sprintf(\"%s1\\n%s2\\n%s3\\n\", space(1), space(2), space(3))) #>   1 #>     2 #>       3 cat(sprintf(\"%s1\\n%s2\\n%s3\\n\", space(1, 4), space(2, 4), space(3, 4))) #>     1 #>         2 #>             3"},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitAlongDim.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Array Along a Dimension — splitAlongDim","title":"Split Array Along a Dimension — splitAlongDim","text":"Split array along n-th dimension. implementation found : https://stackoverflow.com/questions/20198751/three-dimensional-array--list","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitAlongDim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Array Along a Dimension — splitAlongDim","text":"","code":"splitAlongDim(a, n)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitAlongDim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Array Along a Dimension — splitAlongDim","text":"array n number dimension along split array","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitAlongDim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Array Along a Dimension — splitAlongDim","text":"array one dimension less ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitAlongDim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split Array Along a Dimension — splitAlongDim","text":"","code":"# Define an array A <- array(1:8, dim = c(2, 2, 2), dimnames = list(   paste0(\"x\", 1:2), paste0(\"y\", 1:2), paste0(\"z\", 1:2) ))  splitAlongDim(A, 1) #> $x1 #>    z1 z2 #> y1  1  5 #> y2  3  7 #>  #> $x2 #>    z1 z2 #> y1  2  6 #> y2  4  8 #>  splitAlongDim(A, 2) #> $y1 #>    z1 z2 #> x1  1  5 #> x2  2  6 #>  #> $y2 #>    z1 z2 #> x1  3  7 #> x2  4  8 #>  splitAlongDim(A, 3) #> $z1 #>    y1 y2 #> x1  1  3 #> x2  2  4 #>  #> $z2 #>    y1 y2 #> x1  5  7 #> x2  6  8 #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitIntoFixSizedBlocks.html","id":null,"dir":"Reference","previous_headings":"","what":"Split into Blocks of Same Size — splitIntoFixSizedBlocks","title":"Split into Blocks of Same Size — splitIntoFixSizedBlocks","text":"Split data frame matrix blocks size, .e. data frames  matrices number rows (except last one shorter unless total number rows multiple number rows per  block).","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitIntoFixSizedBlocks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split into Blocks of Same Size — splitIntoFixSizedBlocks","text":"","code":"splitIntoFixSizedBlocks(data, blocksize)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitIntoFixSizedBlocks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split into Blocks of Same Size — splitIntoFixSizedBlocks","text":"data data frame matrix blocksize number rows block data split","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitIntoFixSizedBlocks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split into Blocks of Same Size — splitIntoFixSizedBlocks","text":"list data frames (data data frame) list   matrices (data matrix)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitIntoLines.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Text at End of Line Characters Into Lines — splitIntoLines","title":"Split Text at End of Line Characters Into Lines — splitIntoLines","text":"Split Text End Line Characters Lines","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitIntoLines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Text at End of Line Characters Into Lines — splitIntoLines","text":"","code":"splitIntoLines(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitIntoLines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Text at End of Line Characters Into Lines — splitIntoLines","text":"x vector character length 1.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitIntoLines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Text at End of Line Characters Into Lines — splitIntoLines","text":"vector character long lines x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/splitIntoLines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split Text at End of Line Characters Into Lines — splitIntoLines","text":"","code":"splitIntoLines(\"a\\nb\\nc\") #> [1] \"a\" \"b\" \"c\" splitIntoLines(\"a\\r\\nb\\r\\nc\") #> [1] \"a\" \"b\" \"c\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/startsToEnds.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Function: Start Indices to End Indices — startsToEnds","title":"Helper Function: Start Indices to End Indices — startsToEnds","text":"helper function convert start indices end indices","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/startsToEnds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper Function: Start Indices to End Indices — startsToEnds","text":"","code":"startsToEnds(starts, lastStop, stopOffset = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/startsToEnds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper Function: Start Indices to End Indices — startsToEnds","text":"starts vector integer lastStop number returned last element result vector stopOffset number subtracted (first elements ) starts order find ends","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/startsToEnds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper Function: Start Indices to End Indices — startsToEnds","text":"vector integer","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/startsToEnds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper Function: Start Indices to End Indices — startsToEnds","text":"","code":"starts <- c(1, 10, 20, 35)  ok <- identical(   startsToEnds(starts, lastStop = 50),    c(9, 19, 34, 50) )    ok <- ok && identical(   startsToEnds(starts, lastStop = 50, stopOffset = 2),    c(8, 18, 33, 50) )  ok #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/startsToRanges.html","id":null,"dir":"Reference","previous_headings":"","what":"Row Numbers of Start Rows to From/To Row Ranges — startsToRanges","title":"Row Numbers of Start Rows to From/To Row Ranges — startsToRanges","text":"vector row numbers transformed data frame describing row ranges  numbers  first last rows","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/startsToRanges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Row Numbers of Start Rows to From/To Row Ranges — startsToRanges","text":"","code":"startsToRanges(starts, lastStop, startOffset = 1, stopOffset = 1)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/startsToRanges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Row Numbers of Start Rows to From/To Row Ranges — startsToRanges","text":"starts integer vector start indices lastStop integer value last stop index startOffset integer offset applied starts stopOffset integer offsets applied ends","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/startsToRanges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Row Numbers of Start Rows to From/To Row Ranges — startsToRanges","text":"data frame columns ","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/startsToRanges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Row Numbers of Start Rows to From/To Row Ranges — startsToRanges","text":"","code":"starts <- c(1, 10, 20, 35)  ok <- identical(   startsToRanges(starts, lastStop = 50),    data.frame(     from = c(2, 11, 21, 36),     to = c(9, 19, 34, 50)   ) )    ok <- ok && identical(   startsToRanges(starts, lastStop = 55, startOffset = 2, stopOffset = 2),    data.frame(     from = c(3, 12, 22, 37),     to = c(8, 18, 33, 55)   ) )    ok #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/stopIfNotMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Stop with a Message if Input is not a Matrix — stopIfNotMatrix","title":"Stop with a Message if Input is not a Matrix — stopIfNotMatrix","text":"Stop Message Input Matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stopIfNotMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stop with a Message if Input is not a Matrix — stopIfNotMatrix","text":"","code":"stopIfNotMatrix(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/stopIfNotMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stop with a Message if Input is not a Matrix — stopIfNotMatrix","text":"x object checked .matrix","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringContains.html","id":null,"dir":"Reference","previous_headings":"","what":"stringContains — stringContains","title":"stringContains — stringContains","text":"stringContains","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringContains.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stringContains — stringContains","text":"","code":"stringContains(x, contains)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringContains.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stringContains — stringContains","text":"x vector character contains vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringContains.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stringContains — stringContains","text":"","code":"stringContains(c(\"abc\", \"Kabeljau\", \"Arabella\"), \"ab\") #> [1] TRUE TRUE TRUE stringContains(c(\"abc\", \"Kabeljau\", \"Arabella\"), \"abc\") #> [1]  TRUE FALSE FALSE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringEndsWith.html","id":null,"dir":"Reference","previous_headings":"","what":"stringEndsWith — stringEndsWith","title":"stringEndsWith — stringEndsWith","text":"stringEndsWith","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringEndsWith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stringEndsWith — stringEndsWith","text":"","code":"stringEndsWith(x, endsWith)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringEndsWith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stringEndsWith — stringEndsWith","text":"x vector character checked end endsWith endsWith string searched end string(s) x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringEndsWith.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stringEndsWith — stringEndsWith","text":"","code":"stringEndsWith(c(\"abc\", \"Kabeljau\", \"Arabella\"), \"a\") #> [1] FALSE FALSE  TRUE stringEndsWith(c(\"abc\", \"Kabeljau\", \"Arabella\"), \"jau\") #> [1] FALSE  TRUE FALSE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringList.html","id":null,"dir":"Reference","previous_headings":"","what":"String of Comma Separated Quoted Strings — stringList","title":"String of Comma Separated Quoted Strings — stringList","text":"Create string comma separated quoted strings","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"String of Comma Separated Quoted Strings — stringList","text":"","code":"stringList(x, qchar = \"'\", collapse = \", \")"},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"String of Comma Separated Quoted Strings — stringList","text":"x vector character qchar character used quoting, default: single quote character collapse characters used separate strings. Default: \", \"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringStartsWith.html","id":null,"dir":"Reference","previous_headings":"","what":"stringStartsWith — stringStartsWith","title":"stringStartsWith — stringStartsWith","text":"stringStartsWith","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringStartsWith.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"stringStartsWith — stringStartsWith","text":"","code":"stringStartsWith(x, startsWith)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringStartsWith.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"stringStartsWith — stringStartsWith","text":"x vector character checked start startsWith startsWith string searched beginning string(s) x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringStartsWith.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"stringStartsWith — stringStartsWith","text":"","code":"stringStartsWith(c(\"abc\", \"Kabeljau\", \"Arabella\"), \"ab\") #> [1]  TRUE FALSE FALSE stringStartsWith(c(\"abc\", \"Kabeljau\", \"Arabella\"), \"A\") #> [1] FALSE FALSE  TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringToExpression.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert String to Expression — stringToExpression","title":"Convert String to Expression — stringToExpression","text":"Convert String Expression","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringToExpression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert String to Expression — stringToExpression","text":"","code":"stringToExpression(expressionString)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/stringToExpression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert String to Expression — stringToExpression","text":"expressionString character string converted expression","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/subExpressionMatches.html","id":null,"dir":"Reference","previous_headings":"","what":"Find and Extract Regular Expressions from Strings — subExpressionMatches","title":"Find and Extract Regular Expressions from Strings — subExpressionMatches","text":"Find Extract Regular Expressions Strings","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/subExpressionMatches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find and Extract Regular Expressions from Strings — subExpressionMatches","text":"","code":"subExpressionMatches(   regularExpression,   text,   match.names = NULL,   select = stats::setNames(seq_along(match.names), match.names),   simplify = TRUE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/subExpressionMatches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find and Extract Regular Expressions from Strings — subExpressionMatches","text":"regularExpression regular expression containing parts parentheses extracted text text text matched regular expression match.names optional. Names given extracted parts result list. select named vector numbers specifying subexpressions parentheses extracted. simplify TRUE (default) text one element, output structure list instead list lists","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/subExpressionMatches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find and Extract Regular Expressions from Strings — subExpressionMatches","text":"length(text) > 1 list returned many elements   strings text list   containing strings matching subpatterns (enclosed parentheses regularExpression) NULL strings match. match.names given, elements lists named   according names given match.names. text   length 1 simplify = TRUE (default) top level list structure   described omitted, .e. list substrings matching   subpatterns returned.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/subExpressionMatches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find and Extract Regular Expressions from Strings — subExpressionMatches","text":"","code":"# split date into year, month and day subExpressionMatches(\"(\\\\\\\\d{4})\\\\\\\\-(\\\\\\\\d{2})\\\\\\\\-(\\\\\\\\d{2})\", \"2014-04-23\") #> NULL  # split date into year, month and day (give names to the resulting elements) x <- subExpressionMatches(   regularExpression = \"(\\\\\\\\d{4})\\\\\\\\-(\\\\\\\\d{2})\\\\\\\\-(\\\\\\\\d{2})\", \"2014-04-23\",   match.names = c(\"year\", \"month\", \"day\") )  cat(paste0(\"Today is \", x$day, \"/\", x$month, \" of \", x$year, \"\\n\")) #> Today is / of"},{"path":"https://kwb-r.github.io/kwb.utils/reference/substSpecialChars.html","id":null,"dir":"Reference","previous_headings":"","what":"Substitution of Special Characters — substSpecialChars","title":"Substitution of Special Characters — substSpecialChars","text":"Substitution Special Characters","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/substSpecialChars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Substitution of Special Characters — substSpecialChars","text":"","code":"substSpecialChars(x, deuOnly = FALSE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/substSpecialChars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Substitution of Special Characters — substSpecialChars","text":"x string containing special characters substituted deuOnly logical. TRUE German special characters  Umlaute Eszett replaced.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/substSpecialChars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Substitution of Special Characters — substSpecialChars","text":"input string x special characters substituted    meaningful represenation underscore, multiple underscores replaced   single underscore multiple underscores end removed.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/tableLookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup Value for Key in Table — tableLookup","title":"Lookup Value for Key in Table — tableLookup","text":"lookup value second column data frame x value  first column matches key.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/tableLookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup Value for Key in Table — tableLookup","text":"","code":"tableLookup(x, key, default = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/tableLookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup Value for Key in Table — tableLookup","text":"x data frame least two columns. Keys expected first values expected second column, respectively. key key value looked default default value returned key key lookup table","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/tableLookup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup Value for Key in Table — tableLookup","text":"value looked lookup table default key    contained first column lookup table x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/tempSubdirectory.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and Return Path of Subdirectory in temp() — tempSubdirectory","title":"Create and Return Path of Subdirectory in temp() — tempSubdirectory","text":"Create Return Path Subdirectory temp()","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/tempSubdirectory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and Return Path of Subdirectory in temp() — tempSubdirectory","text":"","code":"tempSubdirectory(subdir)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/tempSubdirectory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and Return Path of Subdirectory in temp() — tempSubdirectory","text":"subdir name subdirectory created","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/tempSubdirectory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and Return Path of Subdirectory in temp() — tempSubdirectory","text":"full path created directory","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/textToObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Text Representation Back to R Object — textToObject","title":"Convert Text Representation Back to R Object — textToObject","text":"Convert Text Representation Back R Object","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/textToObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Text Representation Back to R Object — textToObject","text":"","code":"textToObject(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/textToObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Text Representation Back to R Object — textToObject","text":"x vector character returned objectToText","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/textToObject.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Text Representation Back to R Object — textToObject","text":"R object","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/textToObject.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Text Representation Back to R Object — textToObject","text":"","code":"textToObject(\"c(1:10)\") #>  [1]  1  2  3  4  5  6  7  8  9 10 stopifnot(identical(iris, textToObject(objectToText(iris))))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toConditional.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Function to Function that is Called if Condition is Met — toConditional","title":"Convert Function to Function that is Called if Condition is Met — toConditional","text":"Convert Function Function Called Condition Met","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toConditional.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Function to Function that is Called if Condition is Met — toConditional","text":"","code":"toConditional(FUN)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toConditional.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Function to Function that is Called if Condition is Met — toConditional","text":"FUN function","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toConditional.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Function to Function that is Called if Condition is Met — toConditional","text":"","code":"square <- function(x) x^2 negate <- function(x) -x `%>%` <- magrittr::`%>%` do_square <- TRUE do_negate <- TRUE 10 %>%   toConditional(square)(do_square) %>%   toConditional(negate)(do_negate) #> [1] -100"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toFactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to Factor with unique Values as Levels — toFactor","title":"Convert to Factor with unique Values as Levels — toFactor","text":"contrast default behaviour base::.factor, function uses unsorted unique values x levels sorted unique values.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toFactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to Factor with unique Values as Levels — toFactor","text":"","code":"toFactor(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toFactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to Factor with unique Values as Levels — toFactor","text":"x vector converted factor","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toFactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to Factor with unique Values as Levels — toFactor","text":"","code":"x <- c(\"b\", \"c\", \"a\")  as.factor(x) # Levels: a b c #> [1] b c a #> Levels: a b c  toFactor(x) # Levels: b c a #> [1] b c a #> Levels: b c a"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toFormula.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Formula from Left and Right Term Strings — toFormula","title":"Create Formula from Left and Right Term Strings — toFormula","text":"create formula form leftterm ~ rightterms[1] + rightterms[2] + ...","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toFormula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Formula from Left and Right Term Strings — toFormula","text":"","code":"toFormula(leftterm, rightterms, as.formula = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toFormula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Formula from Left and Right Term Strings — toFormula","text":"leftterm character. Left term formula rightterms vector character. Right terms formula concatenated \"+\". .formula TRUE (default) formula object returned, otherwise formula string (character)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toFormula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Formula from Left and Right Term Strings — toFormula","text":"formula object generated formula formula string    (character) form leftterm ~ rightterms[1] +    rightterms[2] + ... .formula FALSE","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toFormula.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Formula from Left and Right Term Strings — toFormula","text":"","code":"f1 <- toFormula(\"y\", c(\"x1\", \"x2\")) f2 <- toFormula(\"y\", paste0(\"x\", 1:20))    f3 <- toFormula(\"BMI\", c(\"height\", \"mass\"), as.formula = FALSE)    # f1 and f2 are formulas ... class(f1) #> [1] \"formula\" class(f2) #> [1] \"formula\"    # ... but f3 is just \"character\" class(f3) #> [1] \"character\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toInches.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Centimeters to Inches — toInches","title":"Convert Centimeters to Inches — toInches","text":"Convert Centimeters Inches","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toInches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Centimeters to Inches — toInches","text":"","code":"toInches(cm)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toInches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Centimeters to Inches — toInches","text":"cm vector numeric representing length(s) cm","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toInches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Centimeters to Inches — toInches","text":"vector numeric representing length(s) inches","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toKeysAndValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Key Value String to List of Keys and Values — toKeysAndValues","title":"Key Value String to List of Keys and Values — toKeysAndValues","text":"Converts string form \"=1,b=2\" list elements   keys (: c(\"\", \"b\")) values (: (1,2)).","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toKeysAndValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Key Value String to List of Keys and Values — toKeysAndValues","text":"","code":"toKeysAndValues(x, separators = c(\",\", \"=\"))"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toKeysAndValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Key Value String to List of Keys and Values — toKeysAndValues","text":"x character vector length 1 separators character vector length 2 representing two types separators. first (default: \",\") used split x single key = value assignments. second (default: \"=\") used split assignment key value.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toKeysAndValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Key Value String to List of Keys and Values — toKeysAndValues","text":"list elements keys values","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupClass.html","id":null,"dir":"Reference","previous_headings":"","what":"Keys and Values to Lookup Structure — toLookupClass","title":"Keys and Values to Lookup Structure — toLookupClass","text":"Provide mapping keys values structure choice","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupClass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keys and Values to Lookup Structure — toLookupClass","text":"","code":"toLookupClass(   keys,   values,   class = c(\"data.frame.1\", \"data.frame.2\", \"list\", \"vector\")[1] )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupClass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keys and Values to Lookup Structure — toLookupClass","text":"keys vector keys values vector values class character string determining class structure returned: \"data.frame.1\": data frame keys column names values first row; \"data.frame.2\": data frame  keys first values second column; \"list\":  list values elements keys element names;  \"vector\": named vector values elements keys  names.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupClass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keys and Values to Lookup Structure — toLookupClass","text":"object according chosen class. See description  class argument.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupClass.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Keys and Values to Lookup Structure — toLookupClass","text":"","code":"keys <- c(\"A\", \"B\", \"C\") values <- c(\"Apple\", \"Banana\", \"Cherry\")  fruits.df1 <- toLookupClass(keys, values) fruits.df2 <- toLookupClass(keys, values, class = \"data.frame.2\") fruits.list <- toLookupClass(keys, values, class = \"list\") fruits.vector <- toLookupClass(keys, values, class = \"vector\")  # Note how you may use the results differently  fruits.df1$A #> [1] \"Apple\" fruits.list$A #> [1] \"Apple\" fruits.vector[\"A\"] #>       A  #> \"Apple\"   fruits.df1[c(\"A\", \"C\")] #>       A      C #> 1 Apple Cherry fruits.list[c(\"A\", \"C\")] #> $A #> [1] \"Apple\" #>  #> $C #> [1] \"Cherry\" #>  fruits.vector[c(\"A\", \"C\")] #>        A        C  #>  \"Apple\" \"Cherry\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupList.html","id":null,"dir":"Reference","previous_headings":"","what":"Keys and Values to Lookup List — toLookupList","title":"Keys and Values to Lookup List — toLookupList","text":"Keys values lookup list (list elements representing values  names list elements representing corresponding keys)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keys and Values to Lookup List — toLookupList","text":"","code":"toLookupList(keys, values, data = NULL)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keys and Values to Lookup List — toLookupList","text":"keys vector character representing keys dictionary values vector character representing values dictionary data Optional. Data frame two columns first assumed contain keys second assumed contain values dictionary","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keys and Values to Lookup List — toLookupList","text":"dictionary: list values elements keys   names","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Keys and Values or List to Lookup Table — toLookupTable","title":"Keys and Values or List to Lookup Table — toLookupTable","text":"Convert vectors keys values list lookup table (data frame)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keys and Values or List to Lookup Table — toLookupTable","text":"","code":"toLookupTable(   keys = NULL,   values = NULL,   List = NULL,   as.twoColumnTable = FALSE,   stringsAsFactors = FALSE )"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keys and Values or List to Lookup Table — toLookupTable","text":"keys keys lookup table values values lookup table List list named elements names representing keys values representing values lookup table .twoColumnTable TRUE (default FALSE) result data frame two columns keys values, respectively. stringsAsFactors passed data.frame","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toLookupTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Keys and Values or List to Lookup Table — toLookupTable","text":"data frame one row containing values columns named  keys , .twoColumnTable = TRUE, data frame  keys column key values column  value","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toNamedList.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to List with Names Equal to List Elements — toNamedList","title":"Convert to List with Names Equal to List Elements — toNamedList","text":"Convert List Names Equal List Elements","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toNamedList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to List with Names Equal to List Elements — toNamedList","text":"","code":"toNamedList(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toNamedList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to List with Names Equal to List Elements — toNamedList","text":"x R object, preferably vector character","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toNamedList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert to List with Names Equal to List Elements — toNamedList","text":"result calling .list x list element names   set elements x.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toNamedList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to List with Names Equal to List Elements — toNamedList","text":"","code":"x.vector <- c(\"Peter\", \"Paul\", \"Mary\") x.list <- toNamedList(x.vector) all(names(x.list) == x.vector) #> [1] TRUE  # You may use toNamedList in a call of lapply in order to get a named result lapply(toNamedList(x.vector), function(x) sprintf(\"Hello, %s\", x)) #> $Peter #> [1] \"Hello, Peter\" #>  #> $Paul #> [1] \"Hello, Paul\" #>  #> $Mary #> [1] \"Hello, Mary\" #>   # Compare with lapply(x.vector, function(x) sprintf(\"Hello, %s\", x)) #> [[1]] #> [1] \"Hello, Peter\" #>  #> [[2]] #> [1] \"Hello, Paul\" #>  #> [[3]] #> [1] \"Hello, Mary\" #>"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toPdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Let Expressions Plot into a PDF File — toPdf","title":"Let Expressions Plot into a PDF File — toPdf","text":"function opens PDF device pdf, executes given  expressions, closes PDF file displays file PDF viewer.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toPdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Let Expressions Plot into a PDF File — toPdf","text":"","code":"toPdf(expressions, pdfFile = NULL, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toPdf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Let Expressions Plot into a PDF File — toPdf","text":"expressions R expressions creating plots redirected  pdf file. may pass multiple expressions within opening  closing curly braces pdfFile optional. Path PDF file created. directory part path must exist. given NULL, PDF file created tempdir() folder. ... arguments passed pdf","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toPdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Let Expressions Plot into a PDF File — toPdf","text":"function returns path created PDF file.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toPdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Let Expressions Plot into a PDF File — toPdf","text":"","code":"if (FALSE) { toPdf({   plot(1:10, 10:1)   barplot(1:10)   hist(rnorm(100)) }) }"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toPositiveIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Negative Indices to Positive Indices — toPositiveIndices","title":"Negative Indices to Positive Indices — toPositiveIndices","text":"Convert negative indices positive indices negative indices  interpreted indices counting back vector","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/toPositiveIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Negative Indices to Positive Indices — toPositiveIndices","text":"","code":"toPositiveIndices(indices, n)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/toPositiveIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Negative Indices to Positive Indices — toPositiveIndices","text":"indices vector integer indices n maximum index. index -1 mapped n, index -2 n - 1, etc.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/underscoreToPercent.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace underscore with percent sign — underscoreToPercent","title":"Replace underscore with percent sign — underscoreToPercent","text":"Replace underscore percent sign. May used define time format  strings defaults function declarations supported inlinedocs.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/underscoreToPercent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace underscore with percent sign — underscoreToPercent","text":"","code":"underscoreToPercent(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/underscoreToPercent.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace underscore with percent sign — underscoreToPercent","text":"x character vector containing underscores","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/uniqueDirnames.html","id":null,"dir":"Reference","previous_headings":"","what":"Unique Directory Names — uniqueDirnames","title":"Unique Directory Names — uniqueDirnames","text":"Unique Directory Names","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/uniqueDirnames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unique Directory Names — uniqueDirnames","text":"","code":"uniqueDirnames(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/uniqueDirnames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unique Directory Names — uniqueDirnames","text":"x vector file paths","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/uniqueDirnames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unique Directory Names — uniqueDirnames","text":"vector character unique directories found x","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/uniqueDirnames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unique Directory Names — uniqueDirnames","text":"","code":"uniqueDirnames(c(\"a/b\", \"a/c\", \"b/c\", \"b/d\")) #> [1] \"a\" \"b\""},{"path":"https://kwb-r.github.io/kwb.utils/reference/unmerge.html","id":null,"dir":"Reference","previous_headings":"","what":"Invert the Merging of two Data Frames — unmerge","title":"Invert the Merging of two Data Frames — unmerge","text":"Split data frame z two data frames x y merge(x, y) z.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/unmerge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Invert the Merging of two Data Frames — unmerge","text":"","code":"unmerge(z, by)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/unmerge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Invert the Merging of two Data Frames — unmerge","text":"z data frame vector names columns z used build  groups rows z within group values  columns change. group columns constant  rows identified. Columns constant group appear data frame x whereas remaining columns appear  data frame y returned list.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/unmerge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Invert the Merging of two Data Frames — unmerge","text":"list two elements x y data    frames containing least columns given .","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/unmerge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Invert the Merging of two Data Frames — unmerge","text":"","code":"z <- data.frame(   name = c(\"peter\", \"peter\", \"paul\", \"mary\", \"paul\", \"mary\"),   age = c(42, 42, 31, 28, 31, 28),   height = c(181, 181, 178, 172, 178, 172),   subject = c(\"maths\", \"bio\", \"bio\", \"bio\", \"chem\", \"maths\"),   year = c(2016, 2017, 2017, 2017, 2015, 2016),   mark = c(\"A\", \"B\", \"B\", \"A\", \"C\", \"b\") )    # What fields seem to be properties of objects identified by name? # -> Age and height are fix properties of the persons identified by name (result1 <- unmerge(z, \"name\")) #> $x #>    name age height #> 1 peter  42    181 #> 3  paul  31    178 #> 4  mary  28    172 #>  #> $y #>    name subject year mark #> 1 peter   maths 2016    A #> 2 peter     bio 2017    B #> 3  paul     bio 2017    B #> 4  mary     bio 2017    A #> 5  paul    chem 2015    C #> 6  mary   maths 2016    b #>   # What fields seem to be properties of objects identified by subject? # -> It seems that the subjects have been tested in different years (result2 <- unmerge(z, \"subject\")) #> $x #>   subject year #> 1   maths 2016 #> 2     bio 2017 #> 5    chem 2015 #>  #> $y #>   subject  name age height mark #> 1   maths peter  42    181    A #> 2     bio peter  42    181    B #> 3     bio  paul  31    178    B #> 4     bio  mary  28    172    A #> 5    chem  paul  31    178    C #> 6   maths  mary  28    172    b #>   # Test if merge(result$x, result$y) results in z y1 <- merge(result1$x, result1$y) y2 <- merge(result2$x, result2$y)  columns <- sort(names(z))  identical(fullySorted(z[, columns]), fullySorted(y1[, columns])) # TRUE #> [1] TRUE identical(fullySorted(z[, columns]), fullySorted(y2[, columns])) # TRUE #> [1] TRUE"},{"path":"https://kwb-r.github.io/kwb.utils/reference/user.html","id":null,"dir":"Reference","previous_headings":"","what":"Name of the Current User — user","title":"Name of the Current User — user","text":"Get name current user environment variables","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name of the Current User — user","text":"","code":"user(osType = .OStype())"},{"path":"https://kwb-r.github.io/kwb.utils/reference/user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name of the Current User — user","text":"osType Optional. Type operating system, one \"unix\", \"windows\"","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name of the Current User — user","text":"character string represenging name current user","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/warnIfEmpty.html","id":null,"dir":"Reference","previous_headings":"","what":"warnIfEmpty — warnIfEmpty","title":"warnIfEmpty — warnIfEmpty","text":"Gives warning object NULL empty returns object","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/warnIfEmpty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"warnIfEmpty — warnIfEmpty","text":"","code":"warnIfEmpty(x)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/warnIfEmpty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"warnIfEmpty — warnIfEmpty","text":"x object tested NULL empty (vector length 0 data frame rows)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/warningDeprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Warning About a Deprecated Function — warningDeprecated","title":"Create Warning About a Deprecated Function — warningDeprecated","text":"Create Warning Deprecated Function","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/warningDeprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Warning About a Deprecated Function — warningDeprecated","text":"","code":"warningDeprecated(old_name, new_name, parentheses = TRUE)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/warningDeprecated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Warning About a Deprecated Function — warningDeprecated","text":"old_name name deprecated function new_name name new function used instead parentheses logical. parentheses printed names output? Default: TRUE.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/warningDeprecated.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Warning About a Deprecated Function — warningDeprecated","text":"","code":"if (FALSE) { warningDeprecated(\"old_function()\", \"new_function()\") }"},{"path":"https://kwb-r.github.io/kwb.utils/reference/windowsPath.html","id":null,"dir":"Reference","previous_headings":"","what":"convert to MS Windows-compatible path — windowsPath","title":"convert to MS Windows-compatible path — windowsPath","text":"create MS Windows-compatible path substituting forward slashes   backslashes","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/windowsPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert to MS Windows-compatible path — windowsPath","text":"","code":"windowsPath(path)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/windowsPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert to MS Windows-compatible path — windowsPath","text":"path vector character representing file paths","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/writeDictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a Dictionary (List) to a Text File — writeDictionary","title":"Write a Dictionary (List) to a Text File — writeDictionary","text":"Write Dictionary (List) Text File","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/writeDictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a Dictionary (List) to a Text File — writeDictionary","text":"","code":"writeDictionary(dictionary, file)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/writeDictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a Dictionary (List) to a Text File — writeDictionary","text":"dictionary list character vectors length one defining key = value pairs forming dictionary. file full path file dictionary written","code":""},{"path":[]},{"path":"https://kwb-r.github.io/kwb.utils/reference/writeText.html","id":null,"dir":"Reference","previous_headings":"","what":"Write Text Lines to a File — writeText","title":"Write Text Lines to a File — writeText","text":"Write text file using writeLines output debug message default","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/writeText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write Text Lines to a File — writeText","text":"","code":"writeText(x, file, type = \"\", dbg = TRUE, ...)"},{"path":"https://kwb-r.github.io/kwb.utils/reference/writeText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write Text Lines to a File — writeText","text":"x vector character representing lines written file, passed writeLines file path file written, passed writeLines type character string included debug message: \"Writing <type>'file-path' ...\" dbg TRUE, debug messages shown ... arguments passed writeLines","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/writeText.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write Text Lines to a File — writeText","text":"function invisibly returns path output file.","code":""},{"path":"https://kwb-r.github.io/kwb.utils/reference/writeText.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write Text Lines to a File — writeText","text":"","code":"# Define text to be written to file x <- c(\"Hello\", \"world\")  # Write text to a temporary file and catch the file path file <- writeText(x, tempfile(fileext = \".txt\")) #> Writing '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpmFnsry/fileab72dfb65b5.txt' ... ok.  # Make the debug message more informative writeText(x, file, type = \"welcome file\") #> Writing welcome file '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T//RtmpmFnsry/fileab72dfb65b5.txt' ... ok.  # Read lines back and show on the console catLines(readLines(file)) #> Hello #> world"},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-0130-2022-06-04","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.13.0 2022-06-04","title":"kwb.utils 0.13.0 2022-06-04","text":"add arrayToDataFrame() add catChanges() add catChangesIf() add commonNames() add copyAttributes() add createDirectories() add hasFinalSlash() add indent() add isTryError() add leftSubstringEquals() add mainClass() add nNA() add nUnique() add namedVectorFromColumns() add namedVectorToDataFrame() add orderDecreasinglyBy() add rangeToSequence() add removeEmpty() add removeEmpty2() add removeLeadingSlashes() add replaceFileExtension() add showPackageObjects() add splitIntoLines() add uniqueDirnames()","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-0120-2022-05-27","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.12.0 2022-05-27","title":"kwb.utils 0.12.0 2022-05-27","text":"add argument “deuOnly” substSpecialChars() add function clipMatrix() add argument “rng” inRange() add arguments “sep”, “simple” makeUnique() substSpecialChars(): fix bug, substitute also colon underscore let work also vector character rename argument “columnName” “column”, add argument “starts”, change order arguments","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-0110-2022-01-19","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.11.0 2022-01-19","title":"kwb.utils 0.11.0 2022-01-19","text":"add argsCsv(), moved kwb.sema","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-0100-2022-01-19","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.10.0 2022-01-19","title":"kwb.utils 0.10.0 2022-01-19","text":"add findChanges(), used kwb.utils::hsEventsOnChange() add toConditional() allow pass “path” getAttribute()","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-090-2021-11-16","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.9.0 2021-11-16","title":"kwb.utils 0.9.0 2021-11-16","text":"fix bug multiColumnLookup(): Consider “value” argument fix bug hsStringToDate(): complain NA already x Add new private functions: enumeration(), hintAvailable(), hintNoSuch(), stopIsNotBut(), checkForMissingColumns(), selectElements(): Use new private functions","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-080-2021-02-19","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.8.0 2021-02-19","title":"kwb.utils 0.8.0 2021-02-19","text":"add: matrixToDataFrame() add (private): get_cache_dir(), set_cache_dir() add: readLinesWithEncoding(), moved fakin.path.app::read_lines() get_cached(): add argument “dbg”; return NULL file exist lastElement(): use tail() lists, use x[[length(x)]] instead orderBy(): allow order multiple columns preparePdf(): set paper “special” width height set readDictionary(): add arguments “fileEncoding”, “…”, pass readLinesWithEncoding() writeDictionary(): check “file” argument. check file path unless “file” class character (connection)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-070-2020-07-31","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.7.0 2020-07-31","title":"kwb.utils 0.7.0 2020-07-31","text":"new functions: backspace(), createAccessor(), createStorage(), left(), listToDepth(), objectToText(), orderBy(), repeated(), reproducibleSample(), right(), space(), substSpecialChars(), textToObject() new generic (S3) function: print.repro_sample listToDepth(): Avoid endless recursion checking empty directory names, add argument “template” hsSubstSpecChars(): Add upper case umlauts, rename substSpecialChars(), make deprecated .askForPassword(): Set default “NULL” argument “account”; return invisible assignGlobally(): Make deprecated use internally getPassword(): Return invisible hsPrepPdf(): use internally warningDeprecated(): Add argument “parentheses”","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-051-2020-04-20","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.5.1 2020-04-20","title":"kwb.utils 0.5.1 2020-04-20","text":"Fix bug moveColumnsToFront(): keep data frame structure case data frame one column createMatrix(): Set defaults name.row name.col NULL (: \"\")","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-050-2019-12-17","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.5.0 2019-12-17","title":"kwb.utils 0.5.0 2019-12-17","text":"new: toPdf() new: assertFinalSlash() cache_and_return() clear_cache() get_cached() get_cached_file() run_cached() objectToText() textToObject()","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-044-2019-08-10","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.4.4 2019-08-10","title":"kwb.utils 0.4.4 2019-08-10","text":"improved documentation (deploy docu also “dev” branch, include NEWS.md) fixed continious integration (Windows)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-043-2019-08-04","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.4.3 2019-08-04","title":"kwb.utils 0.4.3 2019-08-04","text":"new: findPartialDuplicates() new: removeDuplicates() add arg “dbg” excludeNULL()","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-042-2019-03-26","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.4.2 2019-03-26","title":"kwb.utils 0.4.2 2019-03-26","text":"export log-functions: .log(), .logline(), .logok(), .logstart() new: multiColumnLookup()","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-041-2019-03-23","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.4.1 2019-03-23","title":"kwb.utils 0.4.1 2019-03-23","text":"export functions explicitly, export functions starting dot “.” new: isDotOrDoubleDot(), isASCII(), moved kwb.fakin add arg “log_time” catAndRun() (2019-01-18) remove non-existing links documentation (2019-01-18) new: encode(), decode(), printable_chars() (2019-01-03) new: intToNumeralSystem() (2018-12-21) new: createIdAlong() (2018-12-16)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-040-2018-11-19","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.4.0 2018-11-19","title":"kwb.utils 0.4.0 2018-11-19","text":"new: combineAlternatingly() bug fix .defaultIf(): working expected x = NULL package prepared automatic tests new test .defaultIf()","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-021-2016-09-06","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.2.1 2016-09-06","title":"kwb.utils 0.2.1 2016-09-06","text":"First release GitHub hsPrepPdf, hsShowPdf moved kwb.base hsCatLists removed (just c()!)","code":""},{"path":"https://kwb-r.github.io/kwb.utils/news/index.html","id":"kwbutils-010-unreleased","dir":"Changelog","previous_headings":"","what":"kwb.utils 0.1.0 unreleased","title":"kwb.utils 0.1.0 unreleased","text":"creation package","code":""}]
